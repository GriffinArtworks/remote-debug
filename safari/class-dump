/*
 *     Generated by class-dump 3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2012 by Steve Nygard.
 */

#pragma mark Named Structures

struct AlignedBuffer<128, 4> {
    char _field1[128];
};

struct AlternativeTextClient;

struct AlternativeTextController;

struct AnimationController {
    struct OwnPtr<WebCore::AnimationControllerPrivate> _field1;
    int _field2;
};

struct AnimationControllerPrivate;

struct ApplicationCacheHost;

struct Archive;

struct ArchiveResource {
    void **_field1;
    int _field2;
    struct KURL _field3;
    struct ResourceResponse _field4;
    struct RefPtr<WebCore::SharedBuffer> _field5;
    struct String _field6;
    struct String _field7;
    struct String _field8;
    _Bool _field9;
};

struct ArchiveResourceCollection;

struct AtomicString {
    struct String _field1;
};

struct BackForwardController;

struct BackForwardListImpl;

struct CGAffineTransform {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
    float _field5;
    float _field6;
};

struct CGPoint {
    float x;
    float y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    float width;
    float height;
};

struct CachedPage;

struct Chrome;

struct ClipRectsCache;

struct Color {
    unsigned int _field1;
    _Bool _field2;
};

struct Command {
    struct EditorInternalCommand *_field1;
    int _field2;
    struct RefPtr<WebCore::Frame> _field3;
};

struct CompositeEditCommand;

struct CompositionUnderline;

struct ContainerNode;

struct DOMWindow;

struct DOMWrapperWorld {
    int _field1;
    struct HashMap<void *, JSC::Weak<WebCore::JSDOMWrapper>, WTF::PtrHash<void *>, WTF::HashTraits<void *>, WTF::HashTraits<JSC::Weak<WebCore::JSDOMWrapper>>> _field2;
    struct HashMap<WTF::StringImpl *, JSC::Weak<JSC::JSString>, WTF::StringHash, WTF::HashTraits<WTF::StringImpl *>, WTF::HashTraits<JSC::Weak<JSC::JSString>>> _field3;
    struct HashMap<WebCore::CSSValue *, void *, WTF::PtrHash<WebCore::CSSValue *>, WTF::HashTraits<WebCore::CSSValue *>, WTF::HashTraits<void *>> _field4;
    struct JSGlobalData *_field5;
    struct HashSet<WebCore::ScriptController *, WTF::PtrHash<WebCore::ScriptController *>, WTF::HashTraits<WebCore::ScriptController *>> _field6;
    _Bool _field7;
    struct JSStringOwner _field8;
};

struct Debugger;

struct DebuggerCallFrame {
    struct ExecState *_field1;
    struct JSValue _field2;
};

struct DeleteButtonController;

struct DeviceOrientation;

struct DeviceOrientationClientMock;

struct Document;

struct DocumentLoadTiming {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
    double _field7;
    short _field8;
    double _field9;
    double _field10;
    double _field11;
    double _field12;
    _Bool _field13;
    _Bool _field14;
};

struct DocumentLoader {
    void **_field1;
    int _field2;
    _Bool _field3;
    struct Frame *_field4;
    struct RefPtr<WebCore::MainResourceLoader> _field5;
    struct HashSet<WTF::RefPtr<WebCore::ResourceLoader>, WTF::PtrHash<WTF::RefPtr<WebCore::ResourceLoader>>, WTF::HashTraits<WTF::RefPtr<WebCore::ResourceLoader>>> _field6;
    struct HashSet<WTF::RefPtr<WebCore::ResourceLoader>, WTF::PtrHash<WTF::RefPtr<WebCore::ResourceLoader>>, WTF::HashTraits<WTF::RefPtr<WebCore::ResourceLoader>>> _field7;
    struct HashSet<WTF::RefPtr<WebCore::ResourceLoader>, WTF::PtrHash<WTF::RefPtr<WebCore::ResourceLoader>>, WTF::HashTraits<WTF::RefPtr<WebCore::ResourceLoader>>> _field8;
    struct RefPtr<WebCore::SharedBuffer> _field9;
    struct DocumentWriter _field10;
    struct ResourceRequest _field11;
    struct SubstituteData _field12;
    struct ResourceRequest _field13;
    struct ResourceRequest _field14;
    struct ResourceResponse _field15;
    struct ResourceError _field16;
    _Bool _field17;
    _Bool _field18;
    _Bool _field19;
    _Bool _field20;
    _Bool _field21;
    struct StringWithDirection _field22;
    struct String _field23;
    struct NavigationAction _field24;
    struct ResourceRequest _field25;
    struct Vector<WebCore::ResourceResponse, 0> _field26;
    _Bool _field27;
    struct HashMap<WTF::RefPtr<WebCore::ResourceLoader>, WTF::RefPtr<WebCore::SubstituteResource>, WTF::PtrHash<WTF::RefPtr<WebCore::ResourceLoader>>, WTF::HashTraits<WTF::RefPtr<WebCore::ResourceLoader>>, WTF::HashTraits<WTF::RefPtr<WebCore::SubstituteResource>>> _field28;
    struct Timer<WebCore::DocumentLoader> _field29;
    struct OwnPtr<WebCore::ArchiveResourceCollection> _field30;
    struct RefPtr<WebCore::Archive> _field31;
    struct RefPtr<WebCore::SharedBuffer> _field32;
    struct HashSet<WTF::String, WTF::StringHash, WTF::HashTraits<WTF::String>> _field33;
    struct Vector<WTF::String, 0> _field34;
    struct String _field35;
    _Bool _field36;
    struct DocumentLoadTiming _field37;
    struct RefPtr<WebCore::EnumCallback<WebCore::IconLoadDecision>> _field38;
    struct RefPtr<WebCore::ObjectCallback<WebCore::SharedBuffer *>> _field39;
    _Bool _field40;
    struct OwnPtr<WebCore::ApplicationCacheHost> _field41;
};

struct DocumentParser;

struct DocumentWriter {
    struct Frame *_field1;
    _Bool _field2;
    struct String _field3;
    _Bool _field4;
    struct String _field5;
    struct RefPtr<WebCore::TextResourceDecoder> _field6;
    struct RefPtr<WebCore::DocumentParser> _field7;
    int _field8;
};

struct DragCaretController;

struct EditingStyle;

struct Editor {
    struct Frame *_field1;
    struct OwnPtr<WebCore::DeleteButtonController> _field2;
    struct RefPtr<WebCore::CompositeEditCommand> _field3;
    struct RefPtr<WebCore::Node> _field4;
    struct RefPtr<WebCore::Text> _field5;
    unsigned int _field6;
    unsigned int _field7;
    struct Vector<WebCore::CompositionUnderline, 0> _field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    struct OwnPtr<WebCore::KillRing> _field12;
    struct OwnPtr<WebCore::SpellChecker> _field13;
    struct OwnPtr<WebCore::AlternativeTextController> _field14;
    struct VisibleSelection _field15;
    _Bool _field16;
    int _field17;
};

struct EditorClient;

struct EditorInternalCommand;

struct Element;

struct ElementAttributeData;

struct EnumCallback<WebCore::IconLoadDecision>;

struct Event;

struct EventHandler {
    struct Frame *_field1;
    _Bool _field2;
    _Bool _field3;
    struct RefPtr<WebCore::Node> _field4;
    _Bool _field5;
    _Bool _field6;
    int _field7;
    struct IntPoint _field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    struct Timer<WebCore::EventHandler> _field12;
    struct Timer<WebCore::EventHandler> _field13;
    struct RenderObject *_field14;
    _Bool _field15;
    _Bool _field16;
    _Bool _field17;
    struct Timer<WebCore::EventHandler> _field18;
    _Bool _field19;
    struct RefPtr<WebCore::SVGElementInstance> _field20;
    struct RefPtr<WebCore::SVGElementInstance> _field21;
    struct RenderLayer *_field22;
    struct RefPtr<WebCore::Node> _field23;
    _Bool _field24;
    struct RefPtr<WebCore::Node> _field25;
    struct RefPtr<WebCore::Node> _field26;
    struct RefPtr<WebCore::Frame> _field27;
    struct RefPtr<WebCore::Scrollbar> _field28;
    int _field29;
    struct RefPtr<WebCore::Node> _field30;
    float _field31;
    float _field32;
    float _field33;
    float _field34;
    unsigned int _field35;
    struct Vector<WTF::RefPtr<WebCore::Touch>, 0> _field36;
    struct HashSet<WTF::RefPtr<WebCore::EventTarget>, WTF::PtrHash<WTF::RefPtr<WebCore::EventTarget>>, WTF::HashTraits<WTF::RefPtr<WebCore::EventTarget>>> _field37;
    struct RefPtr<WebCore::Frame> _field38;
    struct RefPtr<WebCore::HTMLFrameSetElement> _field39;
    struct IntSize _field40;
    struct IntPoint _field41;
    struct IntPoint _field42;
    double _field43;
    struct PlatformMouseEvent _field44;
    _Bool _field45;
    struct RefPtr<WebCore::Node> _field46;
    _Bool _field47;
    struct RefPtr<WebCore::Node> _field48;
    id _field49;
    _Bool _field50;
    double _field51;
    int _field52;
};

struct EventTarget;

struct ExecState;

struct FileChooser {
    int _field1;
    struct FileChooserClient *_field2;
    struct FileChooserSettings _field3;
};

struct FileChooserClient;

struct FileChooserSettings {
    _Bool _field1;
    struct Vector<WTF::String, 0> _field2;
    struct Vector<WTF::String, 0> _field3;
};

struct FloatQuad;

struct FocusController;

struct FormData;

struct FormState;

struct Frame {
    int _field1;
    struct HashSet<WebCore::FrameDestructionObserver *, WTF::PtrHash<WebCore::FrameDestructionObserver *>, WTF::HashTraits<WebCore::FrameDestructionObserver *>> _field2;
    struct Page *_field3;
    struct FrameTree _field4;
    struct FrameLoader _field5;
    struct NavigationScheduler _field6;
    struct RefPtr<WebCore::DOMWindow> _field7;
    struct HTMLFrameOwnerElement *_field8;
    struct RefPtr<WebCore::FrameView> _field9;
    struct RefPtr<WebCore::Document> _field10;
    struct ScriptController _field11;
    struct Editor _field12;
    struct FrameSelection _field13;
    struct EventHandler _field14;
    struct AnimationController _field15;
    struct Timer<WebCore::Frame> _field16;
    float _field17;
    struct IntPoint _field18;
    struct ViewportArguments _field19;
    _Bool _field20;
    struct VisibleSelection _field21;
    struct VisibleSelection _field22;
    float _field23;
    unsigned int _field24;
    unsigned int _field25;
    unsigned int _field26;
    double _field27;
    double _field28;
    float _field29;
    float _field30;
    int _field31;
    _Bool _field32;
    _Bool _field33;
    _Bool _field34;
    int _field35;
    _Bool _field36;
    int _field37;
};

struct FrameDestructionObserver;

struct FrameLoader {
    void **_field1;
    struct Frame *_field2;
    struct FrameLoaderClient *_field3;
    struct PolicyChecker _field4;
    struct HistoryController _field5;
    struct ResourceLoadNotifier _field6;
    struct SubframeLoader _field7;
    struct FrameLoaderStateMachine _field8;
    struct IconController _field9;
    int _field10;
    int _field11;
    struct RefPtr<WebCore::DocumentLoader> _field12;
    struct RefPtr<WebCore::DocumentLoader> _field13;
    struct RefPtr<WebCore::DocumentLoader> _field14;
    _Bool _field15;
    _Bool _field16;
    _Bool _field17;
    _Bool _field18;
    struct String _field19;
    _Bool _field20;
    _Bool _field21;
    _Bool _field22;
    int _field23;
    _Bool _field24;
    struct RefPtr<WebCore::SerializedScriptValue> _field25;
    _Bool _field26;
    struct KURL _field27;
    struct Timer<WebCore::FrameLoader> _field28;
    _Bool _field29;
    _Bool _field30;
    struct Frame *_field31;
    struct HashSet<WebCore::Frame *, WTF::PtrHash<WebCore::Frame *>, WTF::HashTraits<WebCore::Frame *>> _field32;
    _Bool _field33;
    _Bool _field34;
    _Bool _field35;
    int _field36;
    struct RefPtr<WebCore::FrameNetworkingContext> _field37;
    struct KURL _field38;
    struct RefPtr<WebCore::HistoryItem> _field39;
    _Bool _field40;
};

struct FrameLoaderClient;

struct FrameLoaderStateMachine {
    int _field1;
};

struct FrameNetworkingContext;

struct FrameSelection {
    struct IntRect _field1;
    _Bool _field2;
    int _field3;
    struct Frame *_field4;
    int _field5;
    struct VisibleSelection _field6;
    struct VisiblePosition _field7;
    int _field8;
    struct RefPtr<WebCore::EditingStyle> _field9;
    struct Timer<WebCore::FrameSelection> _field10;
    struct IntRect _field11;
    struct IntRect _field12;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    struct Color _field13;
    int _field14;
    int _field15;
};

struct FrameTree {
    struct Frame *_field1;
    struct Frame *_field2;
    struct AtomicString _field3;
    struct AtomicString _field4;
    struct RefPtr<WebCore::Frame> _field5;
    struct Frame *_field6;
    struct RefPtr<WebCore::Frame> _field7;
    struct Frame *_field8;
    unsigned int _field9;
};

struct FrameView;

struct Geolocation {
    void **_field1;
    struct ScriptExecutionContext *_field2;
    unsigned int _field3;
    int _field4;
    struct HashSet<WTF::RefPtr<WebCore::Geolocation::GeoNotifier>, WTF::PtrHash<WTF::RefPtr<WebCore::Geolocation::GeoNotifier>>, WTF::HashTraits<WTF::RefPtr<WebCore::Geolocation::GeoNotifier>>> _field5;
    struct Watchers _field6;
    struct HashSet<WTF::RefPtr<WebCore::Geolocation::GeoNotifier>, WTF::PtrHash<WTF::RefPtr<WebCore::Geolocation::GeoNotifier>>, WTF::HashTraits<WTF::RefPtr<WebCore::Geolocation::GeoNotifier>>> _field7;
    struct RefPtr<WebCore::Geoposition> _field8;
    int _field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
    struct RefPtr<WebCore::PositionError> _field13;
    struct Timer<WebCore::Geolocation> _field14;
    struct RefPtr<WebCore::Geoposition> _field15;
    struct HashSet<WTF::RefPtr<WebCore::Geolocation::GeoNotifier>, WTF::PtrHash<WTF::RefPtr<WebCore::Geolocation::GeoNotifier>>, WTF::HashTraits<WTF::RefPtr<WebCore::Geolocation::GeoNotifier>>> _field16;
};

struct GeolocationPosition;

struct Geoposition;

struct GroupSettings;

struct HTMLFrameOwnerElement {
    void **_field1;
    struct Weak<WebCore::JSDOMWrapper> _field2;
    void **_field3;
    struct ContainerNode *_field4;
    int _field5;
    unsigned int _field6;
    struct Document *_field7;
    struct Node *_field8;
    struct Node *_field9;
    struct RenderObject *_field10;
    struct Node *_field11;
    struct Node *_field12;
    struct QualifiedName _field13;
    struct OwnPtr<WebCore::ElementAttributeData> _field14;
    struct Frame *_field15;
    int _field16;
};

struct HTMLFrameSetElement;

struct HTTPHeaderMap {
    struct HashTable<WTF::AtomicString, std::__1::pair<WTF::AtomicString, WTF::String>, WTF::PairFirstExtractor<std::__1::pair<WTF::AtomicString, WTF::String>>, WTF::CaseFoldingHash, WTF::HashMapValueTraits<WTF::HashTraits<WTF::AtomicString>, WTF::HashTraits<WTF::String>>, WTF::HashTraits<WTF::AtomicString>> _field1;
};

struct HashMap<WTF::AtomicString, WTF::OwnPtr<WebCore::Supplement<WebCore::Page>>, WTF::AtomicStringHash, WTF::HashTraits<WTF::AtomicString>, WTF::HashTraits<WTF::OwnPtr<WebCore::Supplement<WebCore::Page>>>> {
    struct HashTable<WTF::AtomicString, std::__1::pair<WTF::AtomicString, WTF::OwnPtr<WebCore::Supplement<WebCore::Page>>>, WTF::PairFirstExtractor<std::__1::pair<WTF::AtomicString, WTF::OwnPtr<WebCore::Supplement<WebCore::Page>>>>, WTF::AtomicStringHash, WTF::HashMapValueTraits<WTF::HashTraits<WTF::AtomicString>, WTF::HashTraits<WTF::OwnPtr<WebCore::Supplement<WebCore::Page>>>>, WTF::HashTraits<WTF::AtomicString>> _field1;
};

struct HashMap<WTF::AtomicString, WTF::OwnPtr<WebCore::Supplement<WebCore::PageGroup>>, WTF::AtomicStringHash, WTF::HashTraits<WTF::AtomicString>, WTF::HashTraits<WTF::OwnPtr<WebCore::Supplement<WebCore::PageGroup>>>> {
    struct HashTable<WTF::AtomicString, std::__1::pair<WTF::AtomicString, WTF::OwnPtr<WebCore::Supplement<WebCore::PageGroup>>>, WTF::PairFirstExtractor<std::__1::pair<WTF::AtomicString, WTF::OwnPtr<WebCore::Supplement<WebCore::PageGroup>>>>, WTF::AtomicStringHash, WTF::HashMapValueTraits<WTF::HashTraits<WTF::AtomicString>, WTF::HashTraits<WTF::OwnPtr<WebCore::Supplement<WebCore::PageGroup>>>>, WTF::HashTraits<WTF::AtomicString>> _field1;
};

struct HashMap<WTF::RefPtr<WebCore::DOMWrapperWorld>, JSC::Strong<WebCore::JSDOMWindowShell>, WTF::PtrHash<WTF::RefPtr<WebCore::DOMWrapperWorld>>, WTF::HashTraits<WTF::RefPtr<WebCore::DOMWrapperWorld>>, WTF::HashTraits<JSC::Strong<WebCore::JSDOMWindowShell>>> {
    struct HashTable<WTF::RefPtr<WebCore::DOMWrapperWorld>, std::__1::pair<WTF::RefPtr<WebCore::DOMWrapperWorld>, JSC::Strong<WebCore::JSDOMWindowShell>>, WTF::PairFirstExtractor<std::__1::pair<WTF::RefPtr<WebCore::DOMWrapperWorld>, JSC::Strong<WebCore::JSDOMWindowShell>>>, WTF::PtrHash<WTF::RefPtr<WebCore::DOMWrapperWorld>>, WTF::PairHashTraits<WTF::HashTraits<WTF::RefPtr<WebCore::DOMWrapperWorld>>, WTF::HashTraits<JSC::Strong<WebCore::JSDOMWindowShell>>>, WTF::HashTraits<WTF::RefPtr<WebCore::DOMWrapperWorld>>> _field1;
};

struct HashMap<WTF::RefPtr<WebCore::DOMWrapperWorld>, WTF::OwnPtr<WTF::Vector<WTF::OwnPtr<WebCore::UserScript>, 0>>, WTF::PtrHash<WTF::RefPtr<WebCore::DOMWrapperWorld>>, WTF::HashTraits<WTF::RefPtr<WebCore::DOMWrapperWorld>>, WTF::HashTraits<WTF::OwnPtr<WTF::Vector<WTF::OwnPtr<WebCore::UserScript>, 0>>>>;

struct HashMap<WTF::RefPtr<WebCore::DOMWrapperWorld>, WTF::OwnPtr<WTF::Vector<WTF::OwnPtr<WebCore::UserStyleSheet>, 0>>, WTF::PtrHash<WTF::RefPtr<WebCore::DOMWrapperWorld>>, WTF::HashTraits<WTF::RefPtr<WebCore::DOMWrapperWorld>>, WTF::HashTraits<WTF::OwnPtr<WTF::Vector<WTF::OwnPtr<WebCore::UserStyleSheet>, 0>>>>;

struct HashMap<WTF::RefPtr<WebCore::Geolocation::GeoNotifier>, int, WTF::PtrHash<WTF::RefPtr<WebCore::Geolocation::GeoNotifier>>, WTF::HashTraits<WTF::RefPtr<WebCore::Geolocation::GeoNotifier>>, WTF::HashTraits<int>> {
    struct HashTable<WTF::RefPtr<WebCore::Geolocation::GeoNotifier>, std::__1::pair<WTF::RefPtr<WebCore::Geolocation::GeoNotifier>, int>, WTF::PairFirstExtractor<std::__1::pair<WTF::RefPtr<WebCore::Geolocation::GeoNotifier>, int>>, WTF::PtrHash<WTF::RefPtr<WebCore::Geolocation::GeoNotifier>>, WTF::PairHashTraits<WTF::HashTraits<WTF::RefPtr<WebCore::Geolocation::GeoNotifier>>, WTF::HashTraits<int>>, WTF::HashTraits<WTF::RefPtr<WebCore::Geolocation::GeoNotifier>>> _field1;
};

struct HashMap<WTF::RefPtr<WebCore::ResourceLoader>, WTF::RefPtr<WebCore::SubstituteResource>, WTF::PtrHash<WTF::RefPtr<WebCore::ResourceLoader>>, WTF::HashTraits<WTF::RefPtr<WebCore::ResourceLoader>>, WTF::HashTraits<WTF::RefPtr<WebCore::SubstituteResource>>> {
    struct HashTable<WTF::RefPtr<WebCore::ResourceLoader>, std::__1::pair<WTF::RefPtr<WebCore::ResourceLoader>, WTF::RefPtr<WebCore::SubstituteResource>>, WTF::PairFirstExtractor<std::__1::pair<WTF::RefPtr<WebCore::ResourceLoader>, WTF::RefPtr<WebCore::SubstituteResource>>>, WTF::PtrHash<WTF::RefPtr<WebCore::ResourceLoader>>, WTF::PairHashTraits<WTF::HashTraits<WTF::RefPtr<WebCore::ResourceLoader>>, WTF::HashTraits<WTF::RefPtr<WebCore::SubstituteResource>>>, WTF::HashTraits<WTF::RefPtr<WebCore::ResourceLoader>>> _field1;
};

struct HashMap<WTF::RetainPtr<CALayer>, LayerInfo, WTF::PtrHash<WTF::RetainPtr<CALayer>>, WTF::HashTraits<WTF::RetainPtr<CALayer>>, WTF::HashTraits<LayerInfo>> {
    struct HashTable<WTF::RetainPtr<CALayer>, std::__1::pair<WTF::RetainPtr<CALayer>, LayerInfo>, WTF::PairFirstExtractor<std::__1::pair<WTF::RetainPtr<CALayer>, LayerInfo>>, WTF::PtrHash<WTF::RetainPtr<CALayer>>, WTF::HashMapValueTraits<WTF::HashTraits<WTF::RetainPtr<CALayer>>, WTF::HashTraits<LayerInfo>>, WTF::HashTraits<WTF::RetainPtr<CALayer>>> _field1;
};

struct HashMap<WTF::RetainPtr<WebView>, WTF::RetainPtr<id<WebGeolocationProviderInitializationListener>>, WTF::PtrHash<WTF::RetainPtr<WebView>>, WTF::HashTraits<WTF::RetainPtr<WebView>>, WTF::HashTraits<WTF::RetainPtr<id<WebGeolocationProviderInitializationListener>>>> {
    struct HashTable<WTF::RetainPtr<WebView>, std::__1::pair<WTF::RetainPtr<WebView>, WTF::RetainPtr<id<WebGeolocationProviderInitializationListener>>>, WTF::PairFirstExtractor<std::__1::pair<WTF::RetainPtr<WebView>, WTF::RetainPtr<id<WebGeolocationProviderInitializationListener>>>>, WTF::PtrHash<WTF::RetainPtr<WebView>>, WTF::HashMapValueTraits<WTF::HashTraits<WTF::RetainPtr<WebView>>, WTF::HashTraits<WTF::RetainPtr<id<WebGeolocationProviderInitializationListener>>>>, WTF::HashTraits<WTF::RetainPtr<WebView>>> m_impl;
};

struct HashMap<WTF::String, WTF::RetainPtr<id>, WTF::StringHash, WTF::HashTraits<WTF::String>, WTF::HashTraits<WTF::RetainPtr<id>>>;

struct HashMap<WTF::StringImpl *, JSC::Weak<JSC::JSString>, WTF::StringHash, WTF::HashTraits<WTF::StringImpl *>, WTF::HashTraits<JSC::Weak<JSC::JSString>>> {
    struct HashTable<WTF::StringImpl *, std::__1::pair<WTF::StringImpl *, JSC::Weak<JSC::JSString>>, WTF::PairFirstExtractor<std::__1::pair<WTF::StringImpl *, JSC::Weak<JSC::JSString>>>, WTF::StringHash, WTF::HashMapValueTraits<WTF::HashTraits<WTF::StringImpl *>, WTF::HashTraits<JSC::Weak<JSC::JSString>>>, WTF::HashTraits<WTF::StringImpl *>> _field1;
};

struct HashMap<WebCore::CSSValue *, void *, WTF::PtrHash<WebCore::CSSValue *>, WTF::HashTraits<WebCore::CSSValue *>, WTF::HashTraits<void *>> {
    struct HashTable<WebCore::CSSValue *, std::__1::pair<WebCore::CSSValue *, void *>, WTF::PairFirstExtractor<std::__1::pair<WebCore::CSSValue *, void *>>, WTF::PtrHash<WebCore::CSSValue *>, WTF::HashMapValueTraits<WTF::HashTraits<WebCore::CSSValue *>, WTF::HashTraits<void *>>, WTF::HashTraits<WebCore::CSSValue *>> _field1;
};

struct HashMap<int, WTF::RefPtr<WebCore::Geolocation::GeoNotifier>, WTF::IntHash<unsigned int>, WTF::HashTraits<int>, WTF::HashTraits<WTF::RefPtr<WebCore::Geolocation::GeoNotifier>>> {
    struct HashTable<int, std::__1::pair<int, WTF::RefPtr<WebCore::Geolocation::GeoNotifier>>, WTF::PairFirstExtractor<std::__1::pair<int, WTF::RefPtr<WebCore::Geolocation::GeoNotifier>>>, WTF::IntHash<unsigned int>, WTF::HashMapValueTraits<WTF::HashTraits<int>, WTF::HashTraits<WTF::RefPtr<WebCore::Geolocation::GeoNotifier>>>, WTF::HashTraits<int>> _field1;
};

struct HashMap<long long, WTF::RetainPtr<NSMutableArray>, WTF::IntHash<unsigned long long>, WTF::HashTraits<long long>, WTF::HashTraits<WTF::RetainPtr<NSMutableArray>>> {
    struct HashTable<long long, std::__1::pair<long long, WTF::RetainPtr<NSMutableArray>>, WTF::PairFirstExtractor<std::__1::pair<long long, WTF::RetainPtr<NSMutableArray>>>, WTF::IntHash<unsigned long long>, WTF::HashMapValueTraits<WTF::HashTraits<long long>, WTF::HashTraits<WTF::RetainPtr<NSMutableArray>>>, WTF::HashTraits<long long>> _field1;
};

struct HashMap<unsigned int, WebInspectorClient *, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int>, WTF::HashTraits<WebInspectorClient *>> {
    struct HashTable<unsigned int, std::__1::pair<unsigned int, WebInspectorClient *>, WTF::PairFirstExtractor<std::__1::pair<unsigned int, WebInspectorClient *>>, WTF::IntHash<unsigned int>, WTF::HashMapValueTraits<WTF::HashTraits<unsigned int>, WTF::HashTraits<WebInspectorClient *>>, WTF::HashTraits<unsigned int>> m_impl;
};

struct HashMap<unsigned long, WTF::RetainPtr<id>, WTF::IntHash<unsigned long>, WTF::HashTraits<unsigned long>, WTF::HashTraits<WTF::RetainPtr<id>>> {
    struct HashTable<unsigned long, std::__1::pair<unsigned long, WTF::RetainPtr<id>>, WTF::PairFirstExtractor<std::__1::pair<unsigned long, WTF::RetainPtr<id>>>, WTF::IntHash<unsigned long>, WTF::HashMapValueTraits<WTF::HashTraits<unsigned long>, WTF::HashTraits<WTF::RetainPtr<id>>>, WTF::HashTraits<unsigned long>> m_impl;
};

struct HashMap<void *, JSC::Weak<WebCore::JSDOMWrapper>, WTF::PtrHash<void *>, WTF::HashTraits<void *>, WTF::HashTraits<JSC::Weak<WebCore::JSDOMWrapper>>> {
    struct HashTable<void *, std::__1::pair<void *, JSC::Weak<WebCore::JSDOMWrapper>>, WTF::PairFirstExtractor<std::__1::pair<void *, JSC::Weak<WebCore::JSDOMWrapper>>>, WTF::PtrHash<void *>, WTF::HashMapValueTraits<WTF::HashTraits<void *>, WTF::HashTraits<JSC::Weak<WebCore::JSDOMWrapper>>>, WTF::HashTraits<void *>> _field1;
};

struct HashMap<void *, WTF::RefPtr<JSC::Bindings::RootObject>, WTF::PtrHash<void *>, WTF::HashTraits<void *>, WTF::HashTraits<WTF::RefPtr<JSC::Bindings::RootObject>>> {
    struct HashTable<void *, std::__1::pair<void *, WTF::RefPtr<JSC::Bindings::RootObject>>, WTF::PairFirstExtractor<std::__1::pair<void *, WTF::RefPtr<JSC::Bindings::RootObject>>>, WTF::PtrHash<void *>, WTF::HashMapValueTraits<WTF::HashTraits<void *>, WTF::HashTraits<WTF::RefPtr<JSC::Bindings::RootObject>>>, WTF::HashTraits<void *>> _field1;
};

struct HashSet<JSC::JSGlobalObject *, WTF::PtrHash<JSC::JSGlobalObject *>, WTF::HashTraits<JSC::JSGlobalObject *>> {
    struct HashTable<JSC::JSGlobalObject *, JSC::JSGlobalObject *, WTF::IdentityExtractor, WTF::PtrHash<JSC::JSGlobalObject *>, WTF::HashTraits<JSC::JSGlobalObject *>, WTF::HashTraits<JSC::JSGlobalObject *>> _field1;
};

struct HashSet<WTF::RefPtr<WebCore::EventTarget>, WTF::PtrHash<WTF::RefPtr<WebCore::EventTarget>>, WTF::HashTraits<WTF::RefPtr<WebCore::EventTarget>>> {
    struct HashTable<WTF::RefPtr<WebCore::EventTarget>, WTF::RefPtr<WebCore::EventTarget>, WTF::IdentityExtractor, WTF::PtrHash<WTF::RefPtr<WebCore::EventTarget>>, WTF::HashTraits<WTF::RefPtr<WebCore::EventTarget>>, WTF::HashTraits<WTF::RefPtr<WebCore::EventTarget>>> _field1;
};

struct HashSet<WTF::RefPtr<WebCore::Geolocation::GeoNotifier>, WTF::PtrHash<WTF::RefPtr<WebCore::Geolocation::GeoNotifier>>, WTF::HashTraits<WTF::RefPtr<WebCore::Geolocation::GeoNotifier>>> {
    struct HashTable<WTF::RefPtr<WebCore::Geolocation::GeoNotifier>, WTF::RefPtr<WebCore::Geolocation::GeoNotifier>, WTF::IdentityExtractor, WTF::PtrHash<WTF::RefPtr<WebCore::Geolocation::GeoNotifier>>, WTF::HashTraits<WTF::RefPtr<WebCore::Geolocation::GeoNotifier>>, WTF::HashTraits<WTF::RefPtr<WebCore::Geolocation::GeoNotifier>>> _field1;
};

struct HashSet<WTF::RefPtr<WebCore::ResourceLoader>, WTF::PtrHash<WTF::RefPtr<WebCore::ResourceLoader>>, WTF::HashTraits<WTF::RefPtr<WebCore::ResourceLoader>>> {
    struct HashTable<WTF::RefPtr<WebCore::ResourceLoader>, WTF::RefPtr<WebCore::ResourceLoader>, WTF::IdentityExtractor, WTF::PtrHash<WTF::RefPtr<WebCore::ResourceLoader>>, WTF::HashTraits<WTF::RefPtr<WebCore::ResourceLoader>>, WTF::HashTraits<WTF::RefPtr<WebCore::ResourceLoader>>> _field1;
};

struct HashSet<WTF::RefPtr<WebCore::SchedulePair>, WebCore::SchedulePairHash, WTF::HashTraits<WTF::RefPtr<WebCore::SchedulePair>>>;

struct HashSet<WTF::String, WTF::StringHash, WTF::HashTraits<WTF::String>> {
    struct HashTable<WTF::String, WTF::String, WTF::IdentityExtractor, WTF::StringHash, WTF::HashTraits<WTF::String>, WTF::HashTraits<WTF::String>> _field1;
};

struct HashSet<WebCore::Frame *, WTF::PtrHash<WebCore::Frame *>, WTF::HashTraits<WebCore::Frame *>> {
    struct HashTable<WebCore::Frame *, WebCore::Frame *, WTF::IdentityExtractor, WTF::PtrHash<WebCore::Frame *>, WTF::HashTraits<WebCore::Frame *>, WTF::HashTraits<WebCore::Frame *>> _field1;
};

struct HashSet<WebCore::FrameDestructionObserver *, WTF::PtrHash<WebCore::FrameDestructionObserver *>, WTF::HashTraits<WebCore::FrameDestructionObserver *>> {
    struct HashTable<WebCore::FrameDestructionObserver *, WebCore::FrameDestructionObserver *, WTF::IdentityExtractor, WTF::PtrHash<WebCore::FrameDestructionObserver *>, WTF::HashTraits<WebCore::FrameDestructionObserver *>, WTF::HashTraits<WebCore::FrameDestructionObserver *>> _field1;
};

struct HashSet<WebCore::Page *, WTF::PtrHash<WebCore::Page *>, WTF::HashTraits<WebCore::Page *>> {
    struct HashTable<WebCore::Page *, WebCore::Page *, WTF::IdentityExtractor, WTF::PtrHash<WebCore::Page *>, WTF::HashTraits<WebCore::Page *>, WTF::HashTraits<WebCore::Page *>> _field1;
};

struct HashSet<WebCore::RenderObject *, WTF::PtrHash<WebCore::RenderObject *>, WTF::HashTraits<WebCore::RenderObject *>> {
    struct HashTable<WebCore::RenderObject *, WebCore::RenderObject *, WTF::IdentityExtractor, WTF::PtrHash<WebCore::RenderObject *>, WTF::HashTraits<WebCore::RenderObject *>, WTF::HashTraits<WebCore::RenderObject *>> _field1;
};

struct HashSet<WebCore::ScriptController *, WTF::PtrHash<WebCore::ScriptController *>, WTF::HashTraits<WebCore::ScriptController *>> {
    struct HashTable<WebCore::ScriptController *, WebCore::ScriptController *, WTF::IdentityExtractor, WTF::PtrHash<WebCore::ScriptController *>, WTF::HashTraits<WebCore::ScriptController *>, WTF::HashTraits<WebCore::ScriptController *>> _field1;
};

struct HashSet<WebView *, WTF::PtrHash<WebView *>, WTF::HashTraits<WebView *>> {
    struct HashTable<WebView *, WebView *, WTF::IdentityExtractor, WTF::PtrHash<WebView *>, WTF::HashTraits<WebView *>, WTF::HashTraits<WebView *>> m_impl;
};

struct HashSet<unsigned long long, WebCore::LinkHashHash, WTF::HashTraits<unsigned long long>> {
    struct HashTable<unsigned long long, unsigned long long, WTF::IdentityExtractor, WebCore::LinkHashHash, WTF::HashTraits<unsigned long long>, WTF::HashTraits<unsigned long long>> _field1;
};

struct HashTable<JSC::JSGlobalObject *, JSC::JSGlobalObject *, WTF::IdentityExtractor, WTF::PtrHash<JSC::JSGlobalObject *>, WTF::HashTraits<JSC::JSGlobalObject *>, WTF::HashTraits<JSC::JSGlobalObject *>> {
    struct JSGlobalObject **_field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
};

struct HashTable<WTF::AtomicString, std::__1::pair<WTF::AtomicString, WTF::OwnPtr<WebCore::Supplement<WebCore::Page>>>, WTF::PairFirstExtractor<std::__1::pair<WTF::AtomicString, WTF::OwnPtr<WebCore::Supplement<WebCore::Page>>>>, WTF::AtomicStringHash, WTF::HashMapValueTraits<WTF::HashTraits<WTF::AtomicString>, WTF::HashTraits<WTF::OwnPtr<WebCore::Supplement<WebCore::Page>>>>, WTF::HashTraits<WTF::AtomicString>> {
    struct pair<WTF::AtomicString, WTF::OwnPtr<WebCore::Supplement<WebCore::Page>>> *_field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
};

struct HashTable<WTF::AtomicString, std::__1::pair<WTF::AtomicString, WTF::OwnPtr<WebCore::Supplement<WebCore::PageGroup>>>, WTF::PairFirstExtractor<std::__1::pair<WTF::AtomicString, WTF::OwnPtr<WebCore::Supplement<WebCore::PageGroup>>>>, WTF::AtomicStringHash, WTF::HashMapValueTraits<WTF::HashTraits<WTF::AtomicString>, WTF::HashTraits<WTF::OwnPtr<WebCore::Supplement<WebCore::PageGroup>>>>, WTF::HashTraits<WTF::AtomicString>> {
    struct pair<WTF::AtomicString, WTF::OwnPtr<WebCore::Supplement<WebCore::PageGroup>>> *_field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
};

struct HashTable<WTF::AtomicString, std::__1::pair<WTF::AtomicString, WTF::String>, WTF::PairFirstExtractor<std::__1::pair<WTF::AtomicString, WTF::String>>, WTF::CaseFoldingHash, WTF::HashMapValueTraits<WTF::HashTraits<WTF::AtomicString>, WTF::HashTraits<WTF::String>>, WTF::HashTraits<WTF::AtomicString>> {
    struct pair<WTF::AtomicString, WTF::String> *_field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
};

struct HashTable<WTF::RefPtr<WebCore::DOMWrapperWorld>, std::__1::pair<WTF::RefPtr<WebCore::DOMWrapperWorld>, JSC::Strong<WebCore::JSDOMWindowShell>>, WTF::PairFirstExtractor<std::__1::pair<WTF::RefPtr<WebCore::DOMWrapperWorld>, JSC::Strong<WebCore::JSDOMWindowShell>>>, WTF::PtrHash<WTF::RefPtr<WebCore::DOMWrapperWorld>>, WTF::PairHashTraits<WTF::HashTraits<WTF::RefPtr<WebCore::DOMWrapperWorld>>, WTF::HashTraits<JSC::Strong<WebCore::JSDOMWindowShell>>>, WTF::HashTraits<WTF::RefPtr<WebCore::DOMWrapperWorld>>> {
    struct pair<WTF::RefPtr<WebCore::DOMWrapperWorld>, JSC::Strong<WebCore::JSDOMWindowShell>> *_field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
};

struct HashTable<WTF::RefPtr<WebCore::EventTarget>, WTF::RefPtr<WebCore::EventTarget>, WTF::IdentityExtractor, WTF::PtrHash<WTF::RefPtr<WebCore::EventTarget>>, WTF::HashTraits<WTF::RefPtr<WebCore::EventTarget>>, WTF::HashTraits<WTF::RefPtr<WebCore::EventTarget>>> {
    struct RefPtr<WebCore::EventTarget> *_field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
};

struct HashTable<WTF::RefPtr<WebCore::Geolocation::GeoNotifier>, WTF::RefPtr<WebCore::Geolocation::GeoNotifier>, WTF::IdentityExtractor, WTF::PtrHash<WTF::RefPtr<WebCore::Geolocation::GeoNotifier>>, WTF::HashTraits<WTF::RefPtr<WebCore::Geolocation::GeoNotifier>>, WTF::HashTraits<WTF::RefPtr<WebCore::Geolocation::GeoNotifier>>> {
    struct RefPtr<WebCore::Geolocation::GeoNotifier> *_field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
};

struct HashTable<WTF::RefPtr<WebCore::Geolocation::GeoNotifier>, std::__1::pair<WTF::RefPtr<WebCore::Geolocation::GeoNotifier>, int>, WTF::PairFirstExtractor<std::__1::pair<WTF::RefPtr<WebCore::Geolocation::GeoNotifier>, int>>, WTF::PtrHash<WTF::RefPtr<WebCore::Geolocation::GeoNotifier>>, WTF::PairHashTraits<WTF::HashTraits<WTF::RefPtr<WebCore::Geolocation::GeoNotifier>>, WTF::HashTraits<int>>, WTF::HashTraits<WTF::RefPtr<WebCore::Geolocation::GeoNotifier>>> {
    struct pair<WTF::RefPtr<WebCore::Geolocation::GeoNotifier>, int> *_field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
};

struct HashTable<WTF::RefPtr<WebCore::ResourceLoader>, WTF::RefPtr<WebCore::ResourceLoader>, WTF::IdentityExtractor, WTF::PtrHash<WTF::RefPtr<WebCore::ResourceLoader>>, WTF::HashTraits<WTF::RefPtr<WebCore::ResourceLoader>>, WTF::HashTraits<WTF::RefPtr<WebCore::ResourceLoader>>> {
    struct RefPtr<WebCore::ResourceLoader> *_field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
};

struct HashTable<WTF::RefPtr<WebCore::ResourceLoader>, std::__1::pair<WTF::RefPtr<WebCore::ResourceLoader>, WTF::RefPtr<WebCore::SubstituteResource>>, WTF::PairFirstExtractor<std::__1::pair<WTF::RefPtr<WebCore::ResourceLoader>, WTF::RefPtr<WebCore::SubstituteResource>>>, WTF::PtrHash<WTF::RefPtr<WebCore::ResourceLoader>>, WTF::PairHashTraits<WTF::HashTraits<WTF::RefPtr<WebCore::ResourceLoader>>, WTF::HashTraits<WTF::RefPtr<WebCore::SubstituteResource>>>, WTF::HashTraits<WTF::RefPtr<WebCore::ResourceLoader>>> {
    struct pair<WTF::RefPtr<WebCore::ResourceLoader>, WTF::RefPtr<WebCore::SubstituteResource>> *_field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
};

struct HashTable<WTF::RetainPtr<CALayer>, std::__1::pair<WTF::RetainPtr<CALayer>, LayerInfo>, WTF::PairFirstExtractor<std::__1::pair<WTF::RetainPtr<CALayer>, LayerInfo>>, WTF::PtrHash<WTF::RetainPtr<CALayer>>, WTF::HashMapValueTraits<WTF::HashTraits<WTF::RetainPtr<CALayer>>, WTF::HashTraits<LayerInfo>>, WTF::HashTraits<WTF::RetainPtr<CALayer>>> {
    struct pair<WTF::RetainPtr<CALayer>, LayerInfo> *_field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
};

struct HashTable<WTF::RetainPtr<WebView>, std::__1::pair<WTF::RetainPtr<WebView>, WTF::RetainPtr<id<WebGeolocationProviderInitializationListener>>>, WTF::PairFirstExtractor<std::__1::pair<WTF::RetainPtr<WebView>, WTF::RetainPtr<id<WebGeolocationProviderInitializationListener>>>>, WTF::PtrHash<WTF::RetainPtr<WebView>>, WTF::HashMapValueTraits<WTF::HashTraits<WTF::RetainPtr<WebView>>, WTF::HashTraits<WTF::RetainPtr<id<WebGeolocationProviderInitializationListener>>>>, WTF::HashTraits<WTF::RetainPtr<WebView>>> {
    struct pair<WTF::RetainPtr<WebView>, WTF::RetainPtr<id<WebGeolocationProviderInitializationListener>>> *m_table;
    int m_tableSize;
    int m_tableSizeMask;
    int m_keyCount;
    int m_deletedCount;
};

struct HashTable<WTF::String, WTF::String, WTF::IdentityExtractor, WTF::StringHash, WTF::HashTraits<WTF::String>, WTF::HashTraits<WTF::String>> {
    struct String *_field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
};

struct HashTable<WTF::StringImpl *, std::__1::pair<WTF::StringImpl *, JSC::Weak<JSC::JSString>>, WTF::PairFirstExtractor<std::__1::pair<WTF::StringImpl *, JSC::Weak<JSC::JSString>>>, WTF::StringHash, WTF::HashMapValueTraits<WTF::HashTraits<WTF::StringImpl *>, WTF::HashTraits<JSC::Weak<JSC::JSString>>>, WTF::HashTraits<WTF::StringImpl *>> {
    struct pair<WTF::StringImpl *, JSC::Weak<JSC::JSString>> *_field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
};

struct HashTable<WebCore::CSSValue *, std::__1::pair<WebCore::CSSValue *, void *>, WTF::PairFirstExtractor<std::__1::pair<WebCore::CSSValue *, void *>>, WTF::PtrHash<WebCore::CSSValue *>, WTF::HashMapValueTraits<WTF::HashTraits<WebCore::CSSValue *>, WTF::HashTraits<void *>>, WTF::HashTraits<WebCore::CSSValue *>> {
    struct pair<WebCore::CSSValue *, void *> *_field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
};

struct HashTable<WebCore::Frame *, WebCore::Frame *, WTF::IdentityExtractor, WTF::PtrHash<WebCore::Frame *>, WTF::HashTraits<WebCore::Frame *>, WTF::HashTraits<WebCore::Frame *>> {
    struct Frame **_field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
};

struct HashTable<WebCore::FrameDestructionObserver *, WebCore::FrameDestructionObserver *, WTF::IdentityExtractor, WTF::PtrHash<WebCore::FrameDestructionObserver *>, WTF::HashTraits<WebCore::FrameDestructionObserver *>, WTF::HashTraits<WebCore::FrameDestructionObserver *>> {
    struct FrameDestructionObserver **_field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
};

struct HashTable<WebCore::Page *, WebCore::Page *, WTF::IdentityExtractor, WTF::PtrHash<WebCore::Page *>, WTF::HashTraits<WebCore::Page *>, WTF::HashTraits<WebCore::Page *>> {
    struct Page **_field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
};

struct HashTable<WebCore::RenderObject *, WebCore::RenderObject *, WTF::IdentityExtractor, WTF::PtrHash<WebCore::RenderObject *>, WTF::HashTraits<WebCore::RenderObject *>, WTF::HashTraits<WebCore::RenderObject *>> {
    struct RenderObject **_field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
};

struct HashTable<WebCore::ScriptController *, WebCore::ScriptController *, WTF::IdentityExtractor, WTF::PtrHash<WebCore::ScriptController *>, WTF::HashTraits<WebCore::ScriptController *>, WTF::HashTraits<WebCore::ScriptController *>> {
    struct ScriptController **_field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
};

struct HashTable<WebView *, WebView *, WTF::IdentityExtractor, WTF::PtrHash<WebView *>, WTF::HashTraits<WebView *>, WTF::HashTraits<WebView *>> {
    id *m_table;
    int m_tableSize;
    int m_tableSizeMask;
    int m_keyCount;
    int m_deletedCount;
};

struct HashTable<int, std::__1::pair<int, WTF::RefPtr<WebCore::Geolocation::GeoNotifier>>, WTF::PairFirstExtractor<std::__1::pair<int, WTF::RefPtr<WebCore::Geolocation::GeoNotifier>>>, WTF::IntHash<unsigned int>, WTF::HashMapValueTraits<WTF::HashTraits<int>, WTF::HashTraits<WTF::RefPtr<WebCore::Geolocation::GeoNotifier>>>, WTF::HashTraits<int>> {
    struct pair<int, WTF::RefPtr<WebCore::Geolocation::GeoNotifier>> *_field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
};

struct HashTable<long long, std::__1::pair<long long, WTF::RetainPtr<NSMutableArray>>, WTF::PairFirstExtractor<std::__1::pair<long long, WTF::RetainPtr<NSMutableArray>>>, WTF::IntHash<unsigned long long>, WTF::HashMapValueTraits<WTF::HashTraits<long long>, WTF::HashTraits<WTF::RetainPtr<NSMutableArray>>>, WTF::HashTraits<long long>> {
    struct pair<long long, WTF::RetainPtr<NSMutableArray>> *_field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
};

struct HashTable<unsigned int, std::__1::pair<unsigned int, WebInspectorClient *>, WTF::PairFirstExtractor<std::__1::pair<unsigned int, WebInspectorClient *>>, WTF::IntHash<unsigned int>, WTF::HashMapValueTraits<WTF::HashTraits<unsigned int>, WTF::HashTraits<WebInspectorClient *>>, WTF::HashTraits<unsigned int>> {
    struct pair<unsigned int, WebInspectorClient *> *m_table;
    int m_tableSize;
    int m_tableSizeMask;
    int m_keyCount;
    int m_deletedCount;
};

struct HashTable<unsigned long long, unsigned long long, WTF::IdentityExtractor, WebCore::LinkHashHash, WTF::HashTraits<unsigned long long>, WTF::HashTraits<unsigned long long>> {
    unsigned long long *_field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
};

struct HashTable<unsigned long, std::__1::pair<unsigned long, WTF::RetainPtr<id>>, WTF::PairFirstExtractor<std::__1::pair<unsigned long, WTF::RetainPtr<id>>>, WTF::IntHash<unsigned long>, WTF::HashMapValueTraits<WTF::HashTraits<unsigned long>, WTF::HashTraits<WTF::RetainPtr<id>>>, WTF::HashTraits<unsigned long>> {
    struct pair<unsigned long, WTF::RetainPtr<id>> *m_table;
    int m_tableSize;
    int m_tableSizeMask;
    int m_keyCount;
    int m_deletedCount;
};

struct HashTable<void *, std::__1::pair<void *, JSC::Weak<WebCore::JSDOMWrapper>>, WTF::PairFirstExtractor<std::__1::pair<void *, JSC::Weak<WebCore::JSDOMWrapper>>>, WTF::PtrHash<void *>, WTF::HashMapValueTraits<WTF::HashTraits<void *>, WTF::HashTraits<JSC::Weak<WebCore::JSDOMWrapper>>>, WTF::HashTraits<void *>> {
    struct pair<void *, JSC::Weak<WebCore::JSDOMWrapper>> *_field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
};

struct HashTable<void *, std::__1::pair<void *, WTF::RefPtr<JSC::Bindings::RootObject>>, WTF::PairFirstExtractor<std::__1::pair<void *, WTF::RefPtr<JSC::Bindings::RootObject>>>, WTF::PtrHash<void *>, WTF::HashMapValueTraits<WTF::HashTraits<void *>, WTF::HashTraits<WTF::RefPtr<JSC::Bindings::RootObject>>>, WTF::HashTraits<void *>> {
    struct pair<void *, WTF::RefPtr<JSC::Bindings::RootObject>> *_field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
};

struct Highlight {
    struct Color _field1;
    struct Color _field2;
    struct Color _field3;
    struct Color _field4;
    int _field5;
    struct Vector<WebCore::FloatQuad, 0> _field6;
};

struct HistoryController {
    struct Frame *_field1;
    struct RefPtr<WebCore::HistoryItem> _field2;
    struct RefPtr<WebCore::HistoryItem> _field3;
    struct RefPtr<WebCore::HistoryItem> _field4;
    _Bool _field5;
    _Bool _field6;
    struct RefPtr<WebCore::HistoryItem> _field7;
    int _field8;
};

struct HistoryItem {
    int _field1;
    struct String _field2;
    struct String _field3;
    struct String _field4;
    struct String _field5;
    struct String _field6;
    struct String _field7;
    struct String _field8;
    double _field9;
    _Bool _field10;
    struct IntPoint _field11;
    float _field12;
    struct Vector<WTF::String, 0> _field13;
    struct Vector<WTF::RefPtr<WebCore::HistoryItem>, 0> _field14;
    _Bool _field15;
    _Bool _field16;
    int _field17;
    struct Vector<int, 0> _field18;
    struct Vector<int, 0> _field19;
    struct OwnPtr<WTF::Vector<WTF::String, 0>> _field20;
    long long _field21;
    long long _field22;
    struct RefPtr<WebCore::SerializedScriptValue> _field23;
    struct RefPtr<WebCore::FormData> _field24;
    struct String _field25;
    struct HistoryItem *_field26;
    struct HistoryItem *_field27;
    struct RefPtr<WebCore::CachedPage> _field28;
    float _field29;
    _Bool _field30;
    struct ViewportArguments _field31;
    struct RetainPtr<id> _field32;
    struct OwnPtr<WTF::HashMap<WTF::String, WTF::RetainPtr<id>, WTF::StringHash, WTF::HashTraits<WTF::String>, WTF::HashTraits<WTF::RetainPtr<id>>>> _field33;
};

struct HitTestResult {
    struct RefPtr<WebCore::Node> _field1;
    struct RefPtr<WebCore::Node> _field2;
    struct IntPoint _field3;
    struct IntPoint _field4;
    struct RefPtr<WebCore::Element> _field5;
    struct RefPtr<WebCore::Scrollbar> _field6;
    _Bool _field7;
    _Bool _field8;
    int _field9;
    int _field10;
    int _field11;
    int _field12;
    int _field13;
    struct RenderRegion *_field14;
    struct OwnPtr<WTF::ListHashSet<WTF::RefPtr<WebCore::Node>, 256, WTF::PtrHash<WTF::RefPtr<WebCore::Node>>>> _field15;
};

struct IconController {
    struct Frame *_field1;
    struct OwnPtr<WebCore::IconLoader> _field2;
    _Bool _field3;
};

struct IconLoader;

struct InjectedScriptManager;

struct InspectorAgent;

struct InspectorBackendDispatchTask;

struct InspectorBackendDispatcher;

struct InspectorClient;

struct InspectorController {
    struct OwnPtr<WebCore::InstrumentingAgents> _field1;
    struct OwnPtr<WebCore::InjectedScriptManager> _field2;
    struct OwnPtr<WebCore::InspectorState> _field3;
    struct InspectorAgent *_field4;
    struct InspectorDOMAgent *_field5;
    struct InspectorResourceAgent *_field6;
    struct InspectorPageAgent *_field7;
    struct InspectorDebuggerAgent *_field8;
    struct InspectorProfilerAgent *_field9;
    struct RefPtr<WebCore::InspectorBackendDispatcher> _field10;
    struct OwnPtr<WebCore::InspectorFrontendClient> _field11;
    struct OwnPtr<WebCore::InspectorFrontend> _field12;
    struct Page *_field13;
    struct InspectorClient *_field14;
    struct Vector<WTF::OwnPtr<WebCore::InspectorBaseAgentInterface>, 0> _field15;
};

struct InspectorDOMAgent;

struct InspectorDebuggerAgent;

struct InspectorFrontend;

struct InspectorFrontendClient;

struct InspectorFrontendHost;

struct InspectorPageAgent;

struct InspectorProfilerAgent;

struct InspectorResourceAgent;

struct InspectorState;

struct InstrumentingAgents;

struct IntPoint {
    int _field1;
    int _field2;
};

struct IntRect {
    struct IntPoint _field1;
    struct IntSize _field2;
};

struct IntSize {
    int _field1;
    int _field2;
};

struct JSGlobalData;

struct JSGlobalObject;

struct JSStringOwner {
    void **_field1;
    struct DOMWrapperWorld *_field2;
};

struct JSValue {
    union EncodedValueDescriptor _field1;
};

struct KURL {
    struct String _field1;
    unsigned int :1;
    unsigned int :1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
    int _field10;
    int _field11;
};

struct KeyboardEvent {
    void **_field1;
    int _field2;
    struct AtomicString _field3;
    _Bool _field4;
    _Bool _field5;
    _Bool _field6;
    _Bool _field7;
    _Bool _field8;
    _Bool _field9;
    _Bool _field10;
    unsigned short _field11;
    struct EventTarget *_field12;
    struct RefPtr<WebCore::EventTarget> _field13;
    unsigned long long _field14;
    struct RefPtr<WebCore::Event> _field15;
    struct RefPtr<WebCore::DOMWindow> _field16;
    int _field17;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    struct OwnPtr<WebCore::PlatformKeyboardEvent> _field18;
    struct String _field19;
    unsigned int _field20;
    unsigned int :1;
    struct Vector<WebCore::KeypressCommand, 0> _field21;
};

struct KeypressCommand;

struct KillRing;

struct LayerFlushController;

struct LegacyWebArchive {
    void **_field1;
    int _field2;
    struct RefPtr<WebCore::ArchiveResource> _field3;
    struct Vector<WTF::RefPtr<WebCore::ArchiveResource>, 0> _field4;
    struct Vector<WTF::RefPtr<WebCore::Archive>, 0> _field5;
};

struct ListHashSet<WTF::RefPtr<WebCore::Node>, 256, WTF::PtrHash<WTF::RefPtr<WebCore::Node>>>;

struct MainResourceLoader;

struct MimeClassInfo;

struct Mutex {
    struct _opaque_pthread_mutex_t {
        long __sig;
        char __opaque[40];
    } m_mutex;
};

struct NSError {
    Class _field1;
    void *_field2;
    int _field3;
    id _field4;
    id _field5;
};

struct NSMutableDictionary {
    Class _field1;
};

struct NSString {
    Class _field1;
};

struct NSURLRequest {
    Class _field1;
    id _field2;
};

struct NSURLResponse {
    Class _field1;
    id _field2;
};

struct NavigationAction {
    struct ResourceRequest _field1;
    int _field2;
    struct RefPtr<WebCore::Event> _field3;
};

struct NavigationScheduler {
    struct Frame *_field1;
    struct Timer<WebCore::NavigationScheduler> _field2;
    struct OwnPtr<WebCore::ScheduledNavigation> _field3;
};

struct Node;

struct ObjectCallback<WebCore::SharedBuffer *>;

struct OwnPtr<LayerFlushController> {
    struct LayerFlushController *m_ptr;
};

struct OwnPtr<WTF::HashMap<WTF::RefPtr<WebCore::DOMWrapperWorld>, WTF::OwnPtr<WTF::Vector<WTF::OwnPtr<WebCore::UserScript>, 0>>, WTF::PtrHash<WTF::RefPtr<WebCore::DOMWrapperWorld>>, WTF::HashTraits<WTF::RefPtr<WebCore::DOMWrapperWorld>>, WTF::HashTraits<WTF::OwnPtr<WTF::Vector<WTF::OwnPtr<WebCore::UserScript>, 0>>>>> {
    struct HashMap<WTF::RefPtr<WebCore::DOMWrapperWorld>, WTF::OwnPtr<WTF::Vector<WTF::OwnPtr<WebCore::UserScript>, 0>>, WTF::PtrHash<WTF::RefPtr<WebCore::DOMWrapperWorld>>, WTF::HashTraits<WTF::RefPtr<WebCore::DOMWrapperWorld>>, WTF::HashTraits<WTF::OwnPtr<WTF::Vector<WTF::OwnPtr<WebCore::UserScript>, 0>>>> *_field1;
};

struct OwnPtr<WTF::HashMap<WTF::RefPtr<WebCore::DOMWrapperWorld>, WTF::OwnPtr<WTF::Vector<WTF::OwnPtr<WebCore::UserStyleSheet>, 0>>, WTF::PtrHash<WTF::RefPtr<WebCore::DOMWrapperWorld>>, WTF::HashTraits<WTF::RefPtr<WebCore::DOMWrapperWorld>>, WTF::HashTraits<WTF::OwnPtr<WTF::Vector<WTF::OwnPtr<WebCore::UserStyleSheet>, 0>>>>> {
    struct HashMap<WTF::RefPtr<WebCore::DOMWrapperWorld>, WTF::OwnPtr<WTF::Vector<WTF::OwnPtr<WebCore::UserStyleSheet>, 0>>, WTF::PtrHash<WTF::RefPtr<WebCore::DOMWrapperWorld>>, WTF::HashTraits<WTF::RefPtr<WebCore::DOMWrapperWorld>>, WTF::HashTraits<WTF::OwnPtr<WTF::Vector<WTF::OwnPtr<WebCore::UserStyleSheet>, 0>>>> *_field1;
};

struct OwnPtr<WTF::HashMap<WTF::String, WTF::RetainPtr<id>, WTF::StringHash, WTF::HashTraits<WTF::String>, WTF::HashTraits<WTF::RetainPtr<id>>>> {
    struct HashMap<WTF::String, WTF::RetainPtr<id>, WTF::StringHash, WTF::HashTraits<WTF::String>, WTF::HashTraits<WTF::RetainPtr<id>>> *_field1;
};

struct OwnPtr<WTF::HashSet<WTF::RefPtr<WebCore::SchedulePair>, WebCore::SchedulePairHash, WTF::HashTraits<WTF::RefPtr<WebCore::SchedulePair>>>> {
    struct HashSet<WTF::RefPtr<WebCore::SchedulePair>, WebCore::SchedulePairHash, WTF::HashTraits<WTF::RefPtr<WebCore::SchedulePair>>> *_field1;
};

struct OwnPtr<WTF::ListHashSet<WTF::RefPtr<WebCore::Node>, 256, WTF::PtrHash<WTF::RefPtr<WebCore::Node>>>> {
    struct ListHashSet<WTF::RefPtr<WebCore::Node>, 256, WTF::PtrHash<WTF::RefPtr<WebCore::Node>>> *_field1;
};

struct OwnPtr<WTF::Vector<WTF::String, 0>> {
    struct Vector<WTF::String, 0> *_field1;
};

struct OwnPtr<WebCore::AlternativeTextController> {
    struct AlternativeTextController *_field1;
};

struct OwnPtr<WebCore::AnimationControllerPrivate> {
    struct AnimationControllerPrivate *_field1;
};

struct OwnPtr<WebCore::ApplicationCacheHost> {
    struct ApplicationCacheHost *_field1;
};

struct OwnPtr<WebCore::ArchiveResourceCollection> {
    struct ArchiveResourceCollection *_field1;
};

struct OwnPtr<WebCore::BackForwardController> {
    struct BackForwardController *_field1;
};

struct OwnPtr<WebCore::Chrome> {
    struct Chrome *_field1;
};

struct OwnPtr<WebCore::ClipRectsCache> {
    struct ClipRectsCache *_field1;
};

struct OwnPtr<WebCore::DeleteButtonController> {
    struct DeleteButtonController *_field1;
};

struct OwnPtr<WebCore::DeviceOrientationClientMock> {
    struct DeviceOrientationClientMock *m_ptr;
};

struct OwnPtr<WebCore::DragCaretController> {
    struct DragCaretController *_field1;
};

struct OwnPtr<WebCore::ElementAttributeData> {
    struct ElementAttributeData *_field1;
};

struct OwnPtr<WebCore::FocusController> {
    struct FocusController *_field1;
};

struct OwnPtr<WebCore::GroupSettings> {
    struct GroupSettings *_field1;
};

struct OwnPtr<WebCore::IconLoader> {
    struct IconLoader *_field1;
};

struct OwnPtr<WebCore::InjectedScriptManager> {
    struct InjectedScriptManager *_field1;
};

struct OwnPtr<WebCore::InspectorBackendDispatchTask> {
    struct InspectorBackendDispatchTask *_field1;
};

struct OwnPtr<WebCore::InspectorBaseAgentInterface>;

struct OwnPtr<WebCore::InspectorController> {
    struct InspectorController *_field1;
};

struct OwnPtr<WebCore::InspectorFrontend> {
    struct InspectorFrontend *_field1;
};

struct OwnPtr<WebCore::InspectorFrontendClient> {
    struct InspectorFrontendClient *_field1;
};

struct OwnPtr<WebCore::InspectorFrontendClientLocal::Settings> {
    struct Settings *_field1;
};

struct OwnPtr<WebCore::InspectorState> {
    struct InspectorState *_field1;
};

struct OwnPtr<WebCore::InstrumentingAgents> {
    struct InstrumentingAgents *_field1;
};

struct OwnPtr<WebCore::KillRing> {
    struct KillRing *_field1;
};

struct OwnPtr<WebCore::PageGroup> {
    struct PageGroup *_field1;
};

struct OwnPtr<WebCore::PlatformKeyboardEvent> {
    struct PlatformKeyboardEvent *_field1;
};

struct OwnPtr<WebCore::ProgressTracker> {
    struct ProgressTracker *_field1;
};

struct OwnPtr<WebCore::RenderLayerBacking> {
    struct RenderLayerBacking *_field1;
};

struct OwnPtr<WebCore::ScheduledNavigation> {
    struct ScheduledNavigation *_field1;
};

struct OwnPtr<WebCore::ScrollAnimator> {
    struct ScrollAnimator *_field1;
};

struct OwnPtr<WebCore::Settings> {
    struct Settings *_field1;
};

struct OwnPtr<WebCore::SpellChecker> {
    struct SpellChecker *_field1;
};

struct OwnPtr<WebCore::TextIterator> {
    struct TextIterator *m_ptr;
};

struct OwnPtr<WebCore::TransformationMatrix> {
    struct TransformationMatrix *_field1;
};

struct Page {
    struct HashMap<WTF::AtomicString, WTF::OwnPtr<WebCore::Supplement<WebCore::Page>>, WTF::AtomicStringHash, WTF::HashTraits<WTF::AtomicString>, WTF::HashTraits<WTF::OwnPtr<WebCore::Supplement<WebCore::Page>>>> _field1;
    struct OwnPtr<WTF::HashSet<WTF::RefPtr<WebCore::SchedulePair>, WebCore::SchedulePairHash, WTF::HashTraits<WTF::RefPtr<WebCore::SchedulePair>>>> _field2;
    struct OwnPtr<WebCore::Chrome> _field3;
    struct OwnPtr<WebCore::DragCaretController> _field4;
    struct OwnPtr<WebCore::FocusController> _field5;
    struct OwnPtr<WebCore::InspectorController> _field6;
    struct RefPtr<WebCore::ScrollingCoordinator> _field7;
    struct OwnPtr<WebCore::Settings> _field8;
    struct OwnPtr<WebCore::ProgressTracker> _field9;
    struct OwnPtr<WebCore::BackForwardController> _field10;
    struct RefPtr<WebCore::Frame> _field11;
    struct RefPtr<WebCore::PluginData> _field12;
    struct RefPtr<WebCore::RenderTheme> _field13;
    struct EditorClient *_field14;
    int _field15;
    struct String _field16;
    _Bool _field17;
    _Bool _field18;
    _Bool _field19;
    unsigned int _field20;
    _Bool _field21;
    _Bool _field22;
    _Bool _field23;
    float _field24;
    float _field25;
    float _field26;
    struct Pagination _field27;
    _Bool _field28;
    struct String _field29;
    struct String _field30;
    _Bool _field31;
    int _field32;
    struct OwnPtr<WebCore::PageGroup> _field33;
    struct PageGroup *_field34;
    struct Debugger *_field35;
    double _field36;
    int _field37;
    _Bool _field38;
    struct RefPtr<WebCore::StorageNamespace> _field39;
    int _field40;
    double _field41;
    _Bool _field42;
    _Bool _field43;
    unsigned int _field44;
    struct HashSet<WebCore::RenderObject *, WTF::PtrHash<WebCore::RenderObject *>, WTF::HashTraits<WebCore::RenderObject *>> _field45;
    struct Region _field46;
    struct Region _field47;
    _Bool _field48;
    struct AlternativeTextClient *_field49;
    _Bool _field50;
};

struct PageGroup {
    struct HashMap<WTF::AtomicString, WTF::OwnPtr<WebCore::Supplement<WebCore::PageGroup>>, WTF::AtomicStringHash, WTF::HashTraits<WTF::AtomicString>, WTF::HashTraits<WTF::OwnPtr<WebCore::Supplement<WebCore::PageGroup>>>> _field1;
    struct String _field2;
    struct HashSet<WebCore::Page *, WTF::PtrHash<WebCore::Page *>, WTF::HashTraits<WebCore::Page *>> _field3;
    struct HashSet<unsigned long long, WebCore::LinkHashHash, WTF::HashTraits<unsigned long long>> _field4;
    _Bool _field5;
    unsigned int _field6;
    struct RefPtr<WebCore::StorageNamespace> _field7;
    struct OwnPtr<WTF::HashMap<WTF::RefPtr<WebCore::DOMWrapperWorld>, WTF::OwnPtr<WTF::Vector<WTF::OwnPtr<WebCore::UserScript>, 0>>, WTF::PtrHash<WTF::RefPtr<WebCore::DOMWrapperWorld>>, WTF::HashTraits<WTF::RefPtr<WebCore::DOMWrapperWorld>>, WTF::HashTraits<WTF::OwnPtr<WTF::Vector<WTF::OwnPtr<WebCore::UserScript>, 0>>>>> _field8;
    struct OwnPtr<WTF::HashMap<WTF::RefPtr<WebCore::DOMWrapperWorld>, WTF::OwnPtr<WTF::Vector<WTF::OwnPtr<WebCore::UserStyleSheet>, 0>>, WTF::PtrHash<WTF::RefPtr<WebCore::DOMWrapperWorld>>, WTF::HashTraits<WTF::RefPtr<WebCore::DOMWrapperWorld>>, WTF::HashTraits<WTF::OwnPtr<WTF::Vector<WTF::OwnPtr<WebCore::UserStyleSheet>, 0>>>>> _field9;
    struct OwnPtr<WebCore::GroupSettings> _field10;
};

struct Pagination {
    int _field1;
    _Bool _field2;
    unsigned int _field3;
    unsigned int _field4;
};

struct PassRefPtr<WebCore::ArchiveResource> {
    struct ArchiveResource *_field1;
};

struct PassRefPtr<WebCore::BackForwardListImpl> {
    struct BackForwardListImpl *_field1;
};

struct PassRefPtr<WebCore::DOMWrapperWorld> {
    struct DOMWrapperWorld *_field1;
};

struct PassRefPtr<WebCore::DeviceOrientation> {
    struct DeviceOrientation *_field1;
};

struct PassRefPtr<WebCore::FileChooser> {
    struct FileChooser *_field1;
};

struct PassRefPtr<WebCore::Frame> {
    struct Frame *_field1;
};

struct PassRefPtr<WebCore::GeolocationPosition> {
    struct GeolocationPosition *_field1;
};

struct PassRefPtr<WebCore::HistoryItem> {
    struct HistoryItem *_field1;
};

struct PassRefPtr<WebCore::LegacyWebArchive> {
    struct LegacyWebArchive *_field1;
};

struct PassRefPtr<WebCore::Range> {
    struct Range *_field1;
};

struct PassRefPtr<WebCore::UndoStep> {
    struct UndoStep *_field1;
};

struct PassRefPtr<WebDocumentLoaderMac> {
    struct WebDocumentLoaderMac *_field1;
};

struct PlatformKeyboardEvent;

struct PlatformMouseEvent {
    unsigned int _field1;
    unsigned int _field2;
    double _field3;
    struct IntPoint _field4;
    struct IntPoint _field5;
    int _field6;
    int _field7;
    unsigned int _field8;
};

struct PluginData;

struct PluginInfo {
    struct String name;
    struct String file;
    struct String desc;
    struct Vector<WebCore::MimeClassInfo, 0> mimes;
};

struct PolicyCallback {
    struct ResourceRequest _field1;
    struct RefPtr<WebCore::FormState> _field2;
    struct String _field3;
    struct NavigationAction _field4;
    void *_field5;
    void *_field6;
    void *_field7;
    void *_field8;
};

struct PolicyChecker {
    struct Frame *_field1;
    _Bool _field2;
    _Bool _field3;
    int _field4;
    struct PolicyCallback _field5;
};

struct Position {
    struct RefPtr<WebCore::Node> _field1;
    int _field2;
    unsigned int :3;
    unsigned int :1;
};

struct PositionError;

struct ProgressTracker;

struct QualifiedName {
    struct QualifiedNameImpl *_field1;
};

struct QualifiedNameImpl;

struct Range {
    int _field1;
    struct RefPtr<WebCore::Document> _field2;
    struct RangeBoundaryPoint _field3;
    struct RangeBoundaryPoint _field4;
};

struct RangeBoundaryPoint {
    struct RefPtr<WebCore::Node> _field1;
    int _field2;
    struct RefPtr<WebCore::Node> _field3;
};

struct RefPtr<JSC::Bindings::RootObject> {
    struct RootObject *_field1;
};

struct RefPtr<WTF::StringImpl> {
    struct StringImpl *m_ptr;
};

struct RefPtr<WebCore::Archive> {
    struct Archive *_field1;
};

struct RefPtr<WebCore::ArchiveResource> {
    struct ArchiveResource *_field1;
};

struct RefPtr<WebCore::CachedPage> {
    struct CachedPage *_field1;
};

struct RefPtr<WebCore::CompositeEditCommand> {
    struct CompositeEditCommand *_field1;
};

struct RefPtr<WebCore::DOMWindow> {
    struct DOMWindow *_field1;
};

struct RefPtr<WebCore::DOMWrapperWorld> {
    struct DOMWrapperWorld *m_ptr;
};

struct RefPtr<WebCore::DeviceOrientation> {
    struct DeviceOrientation *m_ptr;
};

struct RefPtr<WebCore::Document> {
    struct Document *_field1;
};

struct RefPtr<WebCore::DocumentLoader> {
    struct DocumentLoader *_field1;
};

struct RefPtr<WebCore::DocumentParser> {
    struct DocumentParser *_field1;
};

struct RefPtr<WebCore::EditingStyle> {
    struct EditingStyle *_field1;
};

struct RefPtr<WebCore::Element> {
    struct Element *_field1;
};

struct RefPtr<WebCore::EnumCallback<WebCore::IconLoadDecision>> {
    struct EnumCallback<WebCore::IconLoadDecision> *_field1;
};

struct RefPtr<WebCore::Event> {
    struct Event *_field1;
};

struct RefPtr<WebCore::EventTarget> {
    struct EventTarget *_field1;
};

struct RefPtr<WebCore::FormData> {
    struct FormData *_field1;
};

struct RefPtr<WebCore::FormState> {
    struct FormState *_field1;
};

struct RefPtr<WebCore::Frame> {
    struct Frame *_field1;
};

struct RefPtr<WebCore::FrameNetworkingContext> {
    struct FrameNetworkingContext *_field1;
};

struct RefPtr<WebCore::FrameView> {
    struct FrameView *_field1;
};

struct RefPtr<WebCore::Geolocation::GeoNotifier>;

struct RefPtr<WebCore::Geolocation> {
    struct Geolocation *m_ptr;
};

struct RefPtr<WebCore::GeolocationPosition> {
    struct GeolocationPosition *m_ptr;
};

struct RefPtr<WebCore::Geoposition> {
    struct Geoposition *_field1;
};

struct RefPtr<WebCore::HTMLFrameSetElement> {
    struct HTMLFrameSetElement *_field1;
};

struct RefPtr<WebCore::HistoryItem> {
    struct HistoryItem *m_ptr;
};

struct RefPtr<WebCore::InspectorBackendDispatcher> {
    struct InspectorBackendDispatcher *_field1;
};

struct RefPtr<WebCore::InspectorFrontendHost> {
    struct InspectorFrontendHost *_field1;
};

struct RefPtr<WebCore::LegacyWebArchive> {
    struct LegacyWebArchive *m_ptr;
};

struct RefPtr<WebCore::MainResourceLoader> {
    struct MainResourceLoader *_field1;
};

struct RefPtr<WebCore::Node> {
    struct Node *_field1;
};

struct RefPtr<WebCore::ObjectCallback<WebCore::SharedBuffer *>> {
    struct ObjectCallback<WebCore::SharedBuffer *> *_field1;
};

struct RefPtr<WebCore::PluginData> {
    struct PluginData *_field1;
};

struct RefPtr<WebCore::PositionError> {
    struct PositionError *_field1;
};

struct RefPtr<WebCore::RenderTheme> {
    struct RenderTheme *_field1;
};

struct RefPtr<WebCore::ResourceLoadInfo> {
    struct ResourceLoadInfo *_field1;
};

struct RefPtr<WebCore::ResourceLoadTiming> {
    struct ResourceLoadTiming *_field1;
};

struct RefPtr<WebCore::ResourceLoader>;

struct RefPtr<WebCore::SVGElementInstance> {
    struct SVGElementInstance *_field1;
};

struct RefPtr<WebCore::Scrollbar> {
    struct Scrollbar *_field1;
};

struct RefPtr<WebCore::ScrollingCoordinator> {
    struct ScrollingCoordinator *_field1;
};

struct RefPtr<WebCore::SerializedScriptValue> {
    struct SerializedScriptValue *m_ptr;
};

struct RefPtr<WebCore::SharedBuffer> {
    struct SharedBuffer *_field1;
};

struct RefPtr<WebCore::StorageNamespace> {
    struct StorageNamespace *_field1;
};

struct RefPtr<WebCore::Text> {
    struct Text *_field1;
};

struct RefPtr<WebCore::TextResourceDecoder> {
    struct TextResourceDecoder *_field1;
};

struct RefPtr<WebCore::Touch>;

struct RefPtr<WebCore::UndoStep> {
    struct UndoStep *m_ptr;
};

struct Region {
    struct IntRect _field1;
    struct Shape _field2;
};

struct RenderBoxModelObject;

struct RenderLayer {
    void **_field1;
    struct OwnPtr<WebCore::ScrollAnimator> _field2;
    unsigned int :1;
    unsigned int :1;
    unsigned int :2;
    unsigned int :2;
    unsigned int :2;
    unsigned int :1;
    struct IntPoint _field3;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :2;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :3;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    struct RenderBoxModelObject *_field4;
    struct RenderLayer *_field5;
    struct RenderLayer *_field6;
    struct RenderLayer *_field7;
    struct RenderLayer *_field8;
    struct RenderLayer *_field9;
    struct IntRect _field10;
    struct IntRect _field11;
    struct IntSize _field12;
    struct IntPoint _field13;
    struct IntSize _field14;
    struct IntSize _field15;
    struct IntSize _field16;
    struct IntSize _field17;
    struct RefPtr<WebCore::Scrollbar> _field18;
    struct RefPtr<WebCore::Scrollbar> _field19;
    struct Vector<WebCore::RenderLayer *, 0> *_field20;
    struct Vector<WebCore::RenderLayer *, 0> *_field21;
    struct Vector<WebCore::RenderLayer *, 0> *_field22;
    struct OwnPtr<WebCore::ClipRectsCache> _field23;
    struct IntPoint _field24;
    struct RenderMarquee *_field25;
    int _field26;
    int _field27;
    struct OwnPtr<WebCore::TransformationMatrix> _field28;
    struct RenderReplica *_field29;
    struct RenderScrollbarPart *_field30;
    struct RenderScrollbarPart *_field31;
    struct IntRect _field32;
    struct OwnPtr<WebCore::RenderLayerBacking> _field33;
};

struct RenderLayerBacking;

struct RenderMarquee;

struct RenderObject;

struct RenderRegion;

struct RenderReplica;

struct RenderScrollbarPart;

struct RenderTheme;

struct ResourceError {
    struct String _field1;
    int _field2;
    struct String _field3;
    struct String _field4;
    _Bool _field5;
    _Bool _field6;
    _Bool _field7;
    struct RetainPtr<__CFError *> _field8;
    struct RetainPtr<NSError> _field9;
};

struct ResourceLoadInfo;

struct ResourceLoadNotifier {
    struct Frame *_field1;
};

struct ResourceLoadTiming;

struct ResourceRequest {
    struct KURL _field1;
    int _field2;
    double _field3;
    struct KURL _field4;
    struct String _field5;
    struct HTTPHeaderMap _field6;
    struct Vector<WTF::String, 0> _field7;
    struct RefPtr<WebCore::FormData> _field8;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    int _field9;
    _Bool _field10;
    struct RetainPtr<const _CFURLRequest *> _field11;
    struct RetainPtr<NSURLRequest> _field12;
};

struct ResourceResponse {
    struct KURL _field1;
    struct String _field2;
    long long _field3;
    struct String _field4;
    struct String _field5;
    int _field6;
    struct String _field7;
    struct HTTPHeaderMap _field8;
    int _field9;
    unsigned int :1;
    unsigned int _field10;
    unsigned int :1;
    struct RefPtr<WebCore::ResourceLoadTiming> _field11;
    struct RefPtr<WebCore::ResourceLoadInfo> _field12;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    double _field13;
    double _field14;
    double _field15;
    double _field16;
    double _field17;
    struct RetainPtr<_CFURLResponse *> _field18;
    struct RetainPtr<NSURLResponse> _field19;
    int _field20;
};

struct RetainPtr<NSError> {
    struct NSError *_field1;
};

struct RetainPtr<NSMutableDictionary> {
    struct NSMutableDictionary *_field1;
};

struct RetainPtr<NSString> {
    struct NSString *_field1;
};

struct RetainPtr<NSURLRequest> {
    struct NSURLRequest *_field1;
};

struct RetainPtr<NSURLResponse> {
    struct NSURLResponse *_field1;
};

struct RetainPtr<WebNodeHighlighter> {
    struct WebNodeHighlighter *_field1;
};

struct RetainPtr<WebScriptCallFrame> {
    struct WebScriptCallFrame *_field1;
};

struct RetainPtr<WebScriptObject> {
    struct WebScriptObject *_field1;
};

struct RetainPtr<_CFURLResponse *> {
    struct _CFURLResponse *_field1;
};

struct RetainPtr<__CFBundle *> {
    struct __CFBundle *m_ptr;
};

struct RetainPtr<__CFError *> {
    struct __CFError *_field1;
};

struct RetainPtr<const _CFURLRequest *> {
    struct _CFURLRequest *_field1;
};

struct RetainPtr<id> {
    id _field1;
};

struct RootObject;

struct SVGElementInstance;

struct ScheduledNavigation;

struct ScriptController {
    struct HashMap<WTF::RefPtr<WebCore::DOMWrapperWorld>, JSC::Strong<WebCore::JSDOMWindowShell>, WTF::PtrHash<WTF::RefPtr<WebCore::DOMWrapperWorld>>, WTF::HashTraits<WTF::RefPtr<WebCore::DOMWrapperWorld>>, WTF::HashTraits<JSC::Strong<WebCore::JSDOMWindowShell>>> _field1;
    struct Frame *_field2;
    struct String *_field3;
    _Bool _field4;
    struct RefPtr<JSC::Bindings::RootObject> _field5;
    struct RefPtr<JSC::Bindings::RootObject> _field6;
    struct HashMap<void *, WTF::RefPtr<JSC::Bindings::RootObject>, WTF::PtrHash<void *>, WTF::HashTraits<void *>, WTF::HashTraits<WTF::RefPtr<JSC::Bindings::RootObject>>> _field7;
    struct RetainPtr<WebScriptObject> _field8;
};

struct ScriptExecutionContext;

struct ScrollAnimator;

struct Scrollbar;

struct ScrollingCoordinator;

struct SecurityOrigin {
    int _field1;
    struct String _field2;
    struct String _field3;
    struct String _field4;
    struct String _field5;
    struct String _field6;
    unsigned short _field7;
    _Bool _field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
};

struct SerializedScriptValue;

struct Settings;

struct Shape {
    struct Vector<int, 32> _field1;
    struct Vector<WebCore::Region::Span, 16> _field2;
};

struct SharedBuffer;

struct Span;

struct SpellChecker;

struct StorageNamespace;

struct String {
    struct RefPtr<WTF::StringImpl> m_impl;
};

struct StringImpl;

struct StringWithDirection {
    struct String _field1;
    int _field2;
};

struct Strong<JSC::JSGlobalObject> {
    struct JSValue *_field1;
};

struct SubframeLoader {
    _Bool _field1;
    struct Frame *_field2;
};

struct SubstituteData {
    struct RefPtr<WebCore::SharedBuffer> _field1;
    struct String _field2;
    struct String _field3;
    struct KURL _field4;
    struct KURL _field5;
};

struct Text;

struct TextIterator;

struct TextResourceDecoder;

struct Timer<WebCore::DocumentLoader> {
    void **_field1;
    double _field2;
    double _field3;
    int _field4;
    unsigned int _field5;
    struct DocumentLoader *_field6;
};

struct Timer<WebCore::EventHandler> {
    void **_field1;
    double _field2;
    double _field3;
    int _field4;
    unsigned int _field5;
    struct EventHandler *_field6;
};

struct Timer<WebCore::Frame> {
    void **_field1;
    double _field2;
    double _field3;
    int _field4;
    unsigned int _field5;
    struct Frame *_field6;
};

struct Timer<WebCore::FrameLoader> {
    void **_field1;
    double _field2;
    double _field3;
    int _field4;
    unsigned int _field5;
    struct FrameLoader *_field6;
};

struct Timer<WebCore::FrameSelection> {
    void **_field1;
    double _field2;
    double _field3;
    int _field4;
    unsigned int _field5;
    struct FrameSelection *_field6;
};

struct Timer<WebCore::Geolocation> {
    void **_field1;
    double _field2;
    double _field3;
    int _field4;
    unsigned int _field5;
    struct Geolocation *_field6;
};

struct Timer<WebCore::NavigationScheduler> {
    void **_field1;
    double _field2;
    double _field3;
    int _field4;
    unsigned int _field5;
    struct NavigationScheduler *_field6;
};

struct TransformationMatrix;

struct UndoStep {
    void **_field1;
    int _field2;
};

struct UserContentURLPattern {
    _Bool m_invalid;
    struct String m_scheme;
    struct String m_host;
    struct String m_path;
    _Bool m_matchSubdomains;
};

struct Vector<WTF::OwnPtr<WebCore::InspectorBaseAgentInterface>, 0> {
    unsigned int _field1;
    struct VectorBuffer<WTF::OwnPtr<WebCore::InspectorBaseAgentInterface>, 0> _field2;
};

struct Vector<WTF::RefPtr<WebCore::Archive>, 0> {
    unsigned int _field1;
    struct VectorBuffer<WTF::RefPtr<WebCore::Archive>, 0> _field2;
};

struct Vector<WTF::RefPtr<WebCore::ArchiveResource>, 0> {
    unsigned int _field1;
    struct VectorBuffer<WTF::RefPtr<WebCore::ArchiveResource>, 0> _field2;
};

struct Vector<WTF::RefPtr<WebCore::HistoryItem>, 0> {
    unsigned int _field1;
    struct VectorBuffer<WTF::RefPtr<WebCore::HistoryItem>, 0> _field2;
};

struct Vector<WTF::RefPtr<WebCore::Touch>, 0> {
    unsigned int _field1;
    struct VectorBuffer<WTF::RefPtr<WebCore::Touch>, 0> _field2;
};

struct Vector<WTF::String, 0> {
    unsigned int _field1;
    struct VectorBuffer<WTF::String, 0> _field2;
};

struct Vector<WebCore::CompositionUnderline, 0> {
    unsigned int _field1;
    struct VectorBuffer<WebCore::CompositionUnderline, 0> _field2;
};

struct Vector<WebCore::FloatQuad, 0> {
    unsigned int _field1;
    struct VectorBuffer<WebCore::FloatQuad, 0> _field2;
};

struct Vector<WebCore::KeypressCommand, 0> {
    unsigned int _field1;
    struct VectorBuffer<WebCore::KeypressCommand, 0> _field2;
};

struct Vector<WebCore::MimeClassInfo, 0> {
    unsigned int m_size;
    struct VectorBuffer<WebCore::MimeClassInfo, 0> m_buffer;
};

struct Vector<WebCore::Node *, 0> {
    unsigned int _field1;
    struct VectorBuffer<WebCore::Node *, 0> _field2;
};

struct Vector<WebCore::Region::Span, 16> {
    unsigned int _field1;
    struct VectorBuffer<WebCore::Region::Span, 16> _field2;
};

struct Vector<WebCore::RenderLayer *, 0>;

struct Vector<WebCore::ResourceResponse, 0> {
    unsigned int _field1;
    struct VectorBuffer<WebCore::ResourceResponse, 0> _field2;
};

struct Vector<int, 0> {
    unsigned int _field1;
    struct VectorBuffer<int, 0> _field2;
};

struct Vector<int, 32> {
    unsigned int _field1;
    struct VectorBuffer<int, 32> _field2;
};

struct VectorBuffer<WTF::OwnPtr<WebCore::InspectorBaseAgentInterface>, 0> {
    struct OwnPtr<WebCore::InspectorBaseAgentInterface> *_field1;
    unsigned int _field2;
};

struct VectorBuffer<WTF::RefPtr<WebCore::Archive>, 0> {
    struct RefPtr<WebCore::Archive> *_field1;
    unsigned int _field2;
};

struct VectorBuffer<WTF::RefPtr<WebCore::ArchiveResource>, 0> {
    struct RefPtr<WebCore::ArchiveResource> *_field1;
    unsigned int _field2;
};

struct VectorBuffer<WTF::RefPtr<WebCore::HistoryItem>, 0> {
    struct RefPtr<WebCore::HistoryItem> *_field1;
    unsigned int _field2;
};

struct VectorBuffer<WTF::RefPtr<WebCore::Touch>, 0> {
    struct RefPtr<WebCore::Touch> *_field1;
    unsigned int _field2;
};

struct VectorBuffer<WTF::String, 0> {
    struct String *_field1;
    unsigned int _field2;
};

struct VectorBuffer<WebCore::CompositionUnderline, 0> {
    struct CompositionUnderline *_field1;
    unsigned int _field2;
};

struct VectorBuffer<WebCore::FloatQuad, 0> {
    struct FloatQuad *_field1;
    unsigned int _field2;
};

struct VectorBuffer<WebCore::KeypressCommand, 0> {
    struct KeypressCommand *_field1;
    unsigned int _field2;
};

struct VectorBuffer<WebCore::MimeClassInfo, 0> {
    struct MimeClassInfo *m_buffer;
    unsigned int m_capacity;
};

struct VectorBuffer<WebCore::Node *, 0> {
    struct Node **_field1;
    unsigned int _field2;
};

struct VectorBuffer<WebCore::Region::Span, 16> {
    struct Span *_field1;
    unsigned int _field2;
    struct AlignedBuffer<128, 4> _field3;
};

struct VectorBuffer<WebCore::ResourceResponse, 0> {
    struct ResourceResponse *_field1;
    unsigned int _field2;
};

struct VectorBuffer<int, 0> {
    int *_field1;
    unsigned int _field2;
};

struct VectorBuffer<int, 32> {
    int *_field1;
    unsigned int _field2;
    struct AlignedBuffer<128, 4> _field3;
};

struct ViewportArguments {
    int _field1;
    float _field2;
    float _field3;
    float _field4;
    float _field5;
    float _field6;
    float _field7;
};

struct VisiblePosition {
    struct Position _field1;
    int _field2;
};

struct VisibleSelection {
    struct Position _field1;
    struct Position _field2;
    struct Position _field3;
    struct Position _field4;
    int _field5;
    int _field6;
    unsigned int :1;
    unsigned int :1;
};

struct Watchers {
    struct HashMap<int, WTF::RefPtr<WebCore::Geolocation::GeoNotifier>, WTF::IntHash<unsigned int>, WTF::HashTraits<int>, WTF::HashTraits<WTF::RefPtr<WebCore::Geolocation::GeoNotifier>>> _field1;
    struct HashMap<WTF::RefPtr<WebCore::Geolocation::GeoNotifier>, int, WTF::PtrHash<WTF::RefPtr<WebCore::Geolocation::GeoNotifier>>, WTF::HashTraits<WTF::RefPtr<WebCore::Geolocation::GeoNotifier>>, WTF::HashTraits<int>> _field2;
};

struct Weak<WebCore::JSDOMWrapper> {
    struct WeakImpl *_field1;
};

struct WeakImpl;

struct WebDocumentLoaderMac;

struct WebFixedPositionContentData {
    id _field1;
    struct HashMap<WTF::RetainPtr<CALayer>, LayerInfo, WTF::PtrHash<WTF::RetainPtr<CALayer>>, WTF::HashTraits<WTF::RetainPtr<CALayer>>, WTF::HashTraits<LayerInfo>> _field2;
};

struct WebFrameLoadDelegateImplementationCache {
    void *didClearWindowObjectForFrameFunc;
    void *didClearWindowObjectForFrameInScriptWorldFunc;
    void *didClearInspectorWindowObjectForFrameFunc;
    void *windowScriptObjectAvailableFunc;
    void *didHandleOnloadEventsForFrameFunc;
    void *didReceiveServerRedirectForProvisionalLoadForFrameFunc;
    void *didCancelClientRedirectForFrameFunc;
    void *willPerformClientRedirectToURLDelayFireDateForFrameFunc;
    void *didChangeLocationWithinPageForFrameFunc;
    void *didPushStateWithinPageForFrameFunc;
    void *didReplaceStateWithinPageForFrameFunc;
    void *didPopStateWithinPageForFrameFunc;
    void *willCloseFrameFunc;
    void *didStartProvisionalLoadForFrameFunc;
    void *didReceiveTitleForFrameFunc;
    void *didCommitLoadForFrameFunc;
    void *didFailProvisionalLoadWithErrorForFrameFunc;
    void *didFailLoadWithErrorForFrameFunc;
    void *didFinishLoadForFrameFunc;
    void *didFirstLayoutInFrameFunc;
    void *didFirstVisuallyNonEmptyLayoutInFrameFunc;
    void *didFinishDocumentLoadForFrameFunc;
    void *didDisplayInsecureContentFunc;
    void *didRunInsecureContentFunc;
    void *didDetectXSSFunc;
};

struct WebHTMLViewInterpretKeyEventsParameters {
    struct KeyboardEvent *_field1;
    _Bool _field2;
    _Bool _field3;
    _Bool _field4;
    _Bool _field5;
};

struct WebHistoryDelegateImplementationCache {
    void *navigatedFunc;
    void *clientRedirectFunc;
    void *serverRedirectFunc;
    void *setTitleFunc;
    void *populateVisitedLinksFunc;
};

struct WebInspectorFrontendClient {
    void **_field1;
    struct InspectorController *_field2;
    struct Page *_field3;
    struct ExecState *_field4;
    struct RefPtr<WebCore::InspectorFrontendHost> _field5;
    struct OwnPtr<WebCore::InspectorFrontendClientLocal::Settings> _field6;
    _Bool _field7;
    struct Vector<WTF::String, 0> _field8;
    struct OwnPtr<WebCore::InspectorBackendDispatchTask> _field9;
    id _field10;
    struct RetainPtr<WebInspectorWindowController> {
        struct WebInspectorWindowController *_field1;
    } _field11;
    struct String _field12;
};

struct WebInspectorWindowController {
    Class _field1;
    id _field2;
    struct WebInspectorFrontendClient *_field3;
    struct WebInspectorClient *_field4;
    char _field5;
    id _field6;
    id _field7;
};

struct WebNodeHighlighter {
    Class _field1;
    id _field2;
    id _field3;
};

struct WebPreferencesPrivate {
    struct RetainPtr<NSMutableDictionary> _field1;
    struct RetainPtr<NSString> _field2;
    char _field3;
    char _field4;
    unsigned int _field5;
    id _field6;
};

struct WebResourceDelegateImplementationCache {
    void *didCancelAuthenticationChallengeFunc;
    void *didReceiveAuthenticationChallengeFunc;
    void *canAuthenticateAgainstProtectionSpaceFunc;
    void *connectionPropertiesFunc;
    void *webThreadDidFinishLoadingFromDataSourceFunc;
    void *webThreadDidFailLoadingWithErrorFromDataSourceFunc;
    void *webThreadIdentifierForRequestFunc;
    void *webThreadDidLoadResourceFromMemoryCacheFunc;
    void *webThreadWillSendRequestFunc;
    void *webThreadDidReceiveResponseFunc;
    void *webThreadDidReceiveContentLengthFunc;
    void *webThreadWillCacheResponseFunc;
    void *identifierForRequestFunc;
    void *willSendRequestFunc;
    void *didReceiveResponseFunc;
    void *didReceiveContentLengthFunc;
    void *didFinishLoadingFromDataSourceFunc;
    void *didFailLoadingWithErrorFromDataSourceFunc;
    void *didLoadResourceFromMemoryCacheFunc;
    void *willCacheResponseFunc;
    void *plugInFailedWithErrorFunc;
    void *shouldUseCredentialStorageFunc;
    void *shouldPaintBrokenImageForURLFunc;
};

struct WebScriptCallFrame {
    Class _field1;
    id _field2;
    id _field3;
};

struct WebScriptDebugDelegateImplementationCache {
    char didParseSourceExpectsBaseLineNumber;
    char exceptionWasRaisedExpectsHasHandlerFlag;
    void *didParseSourceFunc;
    void *failedToParseSourceFunc;
    void *didEnterCallFrameFunc;
    void *willExecuteStatementFunc;
    void *willLeaveCallFrameFunc;
    void *exceptionWasRaisedFunc;
};

struct WebScriptDebugger {
    void **_field1;
    struct HashSet<JSC::JSGlobalObject *, WTF::PtrHash<JSC::JSGlobalObject *>, WTF::HashTraits<JSC::JSGlobalObject *>> _field2;
    _Bool _field3;
    struct RetainPtr<WebScriptCallFrame> _field4;
    struct Strong<JSC::JSGlobalObject> _field5;
    struct RetainPtr<WebScriptCallFrame> _field6;
};

struct WebScriptObject {
    Class _field1;
    id _field2;
};

struct _CFURLRequest;

struct _CFURLResponse;

struct _NSRange {
    unsigned int _field1;
    unsigned int _field2;
};

struct pair<WTF::AtomicString, WTF::OwnPtr<WebCore::Supplement<WebCore::Page>>>;

struct pair<WTF::AtomicString, WTF::OwnPtr<WebCore::Supplement<WebCore::PageGroup>>>;

struct pair<WTF::AtomicString, WTF::String>;

struct pair<WTF::RefPtr<WebCore::DOMWrapperWorld>, JSC::Strong<WebCore::JSDOMWindowShell>>;

struct pair<WTF::RefPtr<WebCore::Geolocation::GeoNotifier>, int>;

struct pair<WTF::RefPtr<WebCore::ResourceLoader>, WTF::RefPtr<WebCore::SubstituteResource>>;

struct pair<WTF::RetainPtr<CALayer>, LayerInfo>;

struct pair<WTF::RetainPtr<WebView>, WTF::RetainPtr<id<WebGeolocationProviderInitializationListener>>>;

struct pair<WTF::StringImpl *, JSC::Weak<JSC::JSString>>;

struct pair<WebCore::CSSValue *, void *>;

struct pair<int, WTF::RefPtr<WebCore::Geolocation::GeoNotifier>>;

struct pair<long long, WTF::RetainPtr<NSMutableArray>>;

struct pair<unsigned int, WebInspectorClient *>;

struct pair<unsigned long, WTF::RetainPtr<id>>;

struct pair<void *, JSC::Weak<WebCore::JSDOMWrapper>>;

struct pair<void *, WTF::RefPtr<JSC::Bindings::RootObject>>;

#if 0
// Names with conflicting types:
typedef struct ?<WebInspectorWindowController> {
    struct WebInspectorWindowController *_field1;
} RetainPtr_d5c43307;

typedef struct ?<WebInspectorWindowController> {
    struct WebInspectorWindowController *_field1;
} RetainPtr_a22ad9ef;

typedef struct {
    void **_field1;
    void **_field2;
    id _field3;
    struct RetainPtr<WebNodeHighlighter> _field4;
    struct Page *_field5;
    struct RetainPtr<WebInspectorWindowController> {
        struct WebInspectorWindowController *_field1;
    } _field6;
    int _field7;
    id _field8;
    struct WebInspectorFrontendClient *_field9;
} WebInspectorClient_88c73853;

typedef struct {
    void **_field1;
    void **_field2;
    id _field3;
    struct RetainPtr<WebNodeHighlighter> _field4;
    struct Page *_field5;
    struct RetainPtr<WebInspectorWindowController> {
        struct WebInspectorWindowController *_field1;
    } _field6;
    int _field7;
    id _field8;
    struct WebInspectorFrontendClient *_field9;
} WebInspectorClient_b612fe75;

#endif

#pragma mark Typedef'd Structures

// Template types
typedef struct HashMap<WTF::RetainPtr<WebView>, WTF::RetainPtr<id<WebGeolocationProviderInitializationListener>>, WTF::PtrHash<WTF::RetainPtr<WebView>>, WTF::HashTraits<WTF::RetainPtr<WebView>>, WTF::HashTraits<WTF::RetainPtr<id<WebGeolocationProviderInitializationListener>>>> {
    struct HashTable<WTF::RetainPtr<WebView>, std::__1::pair<WTF::RetainPtr<WebView>, WTF::RetainPtr<id<WebGeolocationProviderInitializationListener>>>, WTF::PairFirstExtractor<std::__1::pair<WTF::RetainPtr<WebView>, WTF::RetainPtr<id<WebGeolocationProviderInitializationListener>>>>, WTF::PtrHash<WTF::RetainPtr<WebView>>, WTF::HashMapValueTraits<WTF::HashTraits<WTF::RetainPtr<WebView>>, WTF::HashTraits<WTF::RetainPtr<id<WebGeolocationProviderInitializationListener>>>>, WTF::HashTraits<WTF::RetainPtr<WebView>>> m_impl;
} HashMap_842a3805;

typedef struct HashSet<WebView *, WTF::PtrHash<WebView *>, WTF::HashTraits<WebView *>> {
    struct HashTable<WebView *, WebView *, WTF::IdentityExtractor, WTF::PtrHash<WebView *>, WTF::HashTraits<WebView *>, WTF::HashTraits<WebView *>> m_impl;
} HashSet_2803207d;

typedef struct PassRefPtr<WebCore::ArchiveResource> {
    struct ArchiveResource *_field1;
} PassRefPtr_43de0ce5;

typedef struct PassRefPtr<WebCore::BackForwardListImpl> {
    struct BackForwardListImpl *_field1;
} PassRefPtr_a2d75529;

typedef struct PassRefPtr<WebCore::DOMWrapperWorld> {
    struct DOMWrapperWorld *_field1;
} PassRefPtr_7f281a75;

typedef struct PassRefPtr<WebCore::DeviceOrientation> {
    struct DeviceOrientation *_field1;
} PassRefPtr_ce175d97;

typedef struct PassRefPtr<WebCore::FileChooser> {
    struct FileChooser *_field1;
} PassRefPtr_2f7011b9;

typedef struct PassRefPtr<WebCore::Frame> {
    struct Frame *_field1;
} PassRefPtr_4af616b4;

typedef struct PassRefPtr<WebCore::GeolocationPosition> {
    struct GeolocationPosition *_field1;
} PassRefPtr_1f71bc30;

typedef struct PassRefPtr<WebCore::HistoryItem> {
    struct HistoryItem *_field1;
} PassRefPtr_b1663a8c;

typedef struct PassRefPtr<WebCore::LegacyWebArchive> {
    struct LegacyWebArchive *_field1;
} PassRefPtr_d33dc2c2;

typedef struct PassRefPtr<WebCore::Range> {
    struct Range *_field1;
} PassRefPtr_d7fc6f43;

typedef struct PassRefPtr<WebCore::UndoStep> {
    struct UndoStep *_field1;
} PassRefPtr_f4b194ba;

typedef struct PassRefPtr<WebDocumentLoaderMac> {
    struct WebDocumentLoaderMac *_field1;
} PassRefPtr_a1b5a79e;

typedef struct Vector<WebCore::Node *, 0> {
    unsigned int _field1;
    struct VectorBuffer<WebCore::Node *, 0> _field2;
} Vector_52b24800;

#pragma mark Named Unions

union EncodedValueDescriptor {
    long long _field1;
    double _field2;
    struct {
        int _field1;
        int _field2;
    } _field3;
};

#pragma mark -

/*
 * File: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator6.0.sdk/System/Library/PrivateFrameworks/WebKit.framework/WebKit
 * UUID: B364C41A-7568-35AE-9818-B7EB735C0B65
 * Arch: i386
 *       Current version: 536.26.0, Compatibility version: 1.0.0
 *       Source version: 1251.1.0.0.0
 *
 *       Objective-C Garbage Collection: Unsupported
 */

@protocol CLLocationManagerDelegate <NSObject>

@optional
- (void)locationManager:(id)arg1 didFinishDeferredUpdatesWithError:(id)arg2;
- (void)locationManagerDidResumeLocationUpdates:(id)arg1;
- (void)locationManagerDidPauseLocationUpdates:(id)arg1;
- (void)locationManager:(id)arg1 didStartMonitoringForRegion:(id)arg2;
- (void)locationManager:(id)arg1 didChangeAuthorizationStatus:(int)arg2;
- (void)locationManager:(id)arg1 monitoringDidFailForRegion:(id)arg2 withError:(id)arg3;
- (void)locationManager:(id)arg1 didFailWithError:(id)arg2;
- (void)locationManager:(id)arg1 didExitRegion:(id)arg2;
- (void)locationManager:(id)arg1 didEnterRegion:(id)arg2;
- (BOOL)locationManagerShouldDisplayHeadingCalibration:(id)arg1;
- (void)locationManager:(id)arg1 didUpdateHeading:(id)arg2;
- (void)locationManager:(id)arg1 didUpdateLocations:(id)arg2;
- (void)locationManager:(id)arg1 didUpdateToLocation:(id)arg2 fromLocation:(id)arg3;
@end

@protocol GeolocationUpdateListener
- (void)resetGeolocation;
- (void)errorOccurred:(id)arg1;
- (void)positionChanged:(id)arg1;
- (void)geolocationDelegateUnableToStart;
- (void)geolocationDelegateStarted;
@end

@protocol NSCoding
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
@end

@protocol NSCopying
- (id)copyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSObject
- (id)description;
- (unsigned int)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (BOOL)respondsToSelector:(SEL)arg1;
- (BOOL)conformsToProtocol:(id)arg1;
- (BOOL)isMemberOfClass:(Class)arg1;
- (BOOL)isKindOfClass:(Class)arg1;
- (BOOL)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (struct _NSZone *)zone;
- (id)self;
- (Class)class;
- (Class)superclass;
- (unsigned int)hash;
- (BOOL)isEqual:(id)arg1;

@optional
- (id)debugDescription;
@end

@protocol NSURLDownloadDelegate <NSObject>

@optional
- (void)download:(id)arg1 didFailWithError:(id)arg2;
- (void)downloadDidFinish:(id)arg1;
- (void)download:(id)arg1 didCreateDestination:(id)arg2;
- (void)download:(id)arg1 decideDestinationWithSuggestedFilename:(id)arg2;
- (BOOL)download:(id)arg1 shouldDecodeSourceDataOfMIMEType:(id)arg2;
- (void)download:(id)arg1 didReceiveDataOfLength:(unsigned int)arg2;
- (void)download:(id)arg1 willResumeWithResponse:(id)arg2 fromByte:(long long)arg3;
- (void)download:(id)arg1 didReceiveResponse:(id)arg2;
- (BOOL)downloadShouldUseCredentialStorage:(id)arg1;
- (void)download:(id)arg1 didCancelAuthenticationChallenge:(id)arg2;
- (void)download:(id)arg1 didReceiveAuthenticationChallenge:(id)arg2;
- (BOOL)download:(id)arg1 canAuthenticateAgainstProtectionSpace:(id)arg2;
- (id)download:(id)arg1 willSendRequest:(id)arg2 redirectResponse:(id)arg3;
- (void)downloadDidBegin:(id)arg1;
@end

@protocol WebAllowDenyPolicyListener <NSObject>
- (BOOL)shouldClearCache;
- (void)denyOnlyThisRequest;
- (void)deny;
- (void)allow;
@end

@protocol WebCoreFrameView
- (struct Frame *)_web_frame;
@end

@protocol WebDeviceOrientationProvider <NSObject>
- (id)lastOrientation;
- (void)stopUpdating;
- (void)startUpdating;
@end

@protocol WebDocumentDOM <NSObject>
- (BOOL)canSaveAsWebArchive;
- (id)DOMDocument;
@end

@protocol WebDocumentElement <NSObject>
- (id)elementAtPoint:(struct CGPoint)arg1 allowShadowContent:(BOOL)arg2;
- (id)elementAtPoint:(struct CGPoint)arg1;
@end

@protocol WebDocumentIncrementalSearching
- (BOOL)searchFor:(id)arg1 direction:(BOOL)arg2 caseSensitive:(BOOL)arg3 wrap:(BOOL)arg4 startInSelection:(BOOL)arg5;
@end

@protocol WebDocumentOptionsSearching <NSObject>
- (BOOL)_findString:(id)arg1 options:(unsigned int)arg2;
@end

@protocol WebDocumentRepresentation <NSObject>
- (id)title;
- (id)documentSource;
- (BOOL)canProvideDocumentSource;
- (void)finishedLoadingWithDataSource:(id)arg1;
- (void)receivedError:(id)arg1 withDataSource:(id)arg2;
- (void)receivedData:(id)arg1 withDataSource:(id)arg2;
- (void)setDataSource:(id)arg1;
@end

@protocol WebDocumentSearching <NSObject>
- (BOOL)searchFor:(id)arg1 direction:(BOOL)arg2 caseSensitive:(BOOL)arg3 wrap:(BOOL)arg4;
@end

@protocol WebDocumentSelection <WebDocumentText>
- (id)selectionView;
- (struct CGRect)selectionImageRect;
- (struct CGImage *)selectionImageForcingBlackText:(BOOL)arg1;
- (struct CGRect)selectionRect;
- (id)selectionTextRects;
@end

@protocol WebDocumentText <NSObject>
- (void)deselectAll;
- (void)selectAll;
- (id)selectedString;
- (id)string;
- (BOOL)supportsTextEncoding;
@end

@protocol WebDocumentView <NSObject>
- (void)viewDidMoveToHostWindow;
- (void)viewWillMoveToHostWindow:(id)arg1;
- (void)layout;
- (void)setNeedsLayout:(BOOL)arg1;
- (void)dataSourceUpdated:(id)arg1;
- (void)setDataSource:(id)arg1;
@end

@protocol WebFormDelegate <NSObject>
- (void)frame:(id)arg1 sourceFrame:(id)arg2 willSubmitForm:(id)arg3 withValues:(id)arg4 submissionListener:(id)arg5;
- (BOOL)textField:(id)arg1 doCommandBySelector:(SEL)arg2 inFrame:(id)arg3;
- (void)textDidChangeInTextArea:(id)arg1 inFrame:(id)arg2;
- (void)textDidChangeInTextField:(id)arg1 inFrame:(id)arg2;
- (void)textFieldDidEndEditing:(id)arg1 inFrame:(id)arg2;
- (void)textFieldDidBeginEditing:(id)arg1 inFrame:(id)arg2;
@end

@protocol WebFormSubmissionListener <NSObject>
- (void)continue;
@end

@protocol WebGeolocationProvider <NSObject>
- (void)stopTrackingWebView:(id)arg1;
- (void)cancelWarmUpForWebView:(id)arg1;
- (void)initializeGeolocationForWebView:(id)arg1 listener:(id)arg2;
- (void)setEnableHighAccuracy:(BOOL)arg1;
- (id)lastPosition;
- (void)unregisterWebView:(id)arg1;
- (void)registerWebView:(id)arg1;
@end

@protocol WebGeolocationProviderInitializationListener <NSObject>
- (void)initializationDeniedWebView:(id)arg1 provider:(id)arg2;
- (void)initializationAllowedWebView:(id)arg1 provider:(id)arg2;
@end

@protocol WebInspectorClientRegistryDelegate
- (void)didUnregisterClient:(struct WebInspectorClient *)arg1;
- (void)didRegisterClient:(struct WebInspectorClient *)arg1;
@end

@protocol WebInspectorXPCWrapperDelegate <NSObject>
- (void)xpcConnectionFailed:(id)arg1;
- (void)xpcConnection:(id)arg1 receivedMessage:(id)arg2 userInfo:(id)arg3;

@optional
- (void)xpcConnectionUnhandledMessage:(id)arg1;
@end

@protocol WebMultipleTextMatches <NSObject>
- (id)rectsForTextMatches;
- (void)unmarkAllTextMatches;
- (unsigned int)countMatchesForText:(id)arg1 inDOMRange:(id)arg2 options:(unsigned int)arg3 limit:(unsigned int)arg4 markMatches:(BOOL)arg5;
- (BOOL)markedTextMatchesAreHighlighted;
- (void)setMarkedTextMatchesAreHighlighted:(BOOL)arg1;
@end

@protocol WebOpenPanelResultListener <NSObject>
- (void)chooseFilenames:(id)arg1 displayString:(id)arg2 iconImage:(struct CGImage *)arg3;
- (void)chooseFilename:(id)arg1 displayString:(id)arg2 iconImage:(struct CGImage *)arg3;
- (void)cancel;
- (void)chooseFilenames:(id)arg1;
- (void)chooseFilename:(id)arg1;
@end

@protocol WebPDFDocumentRepresentation <WebDocumentRepresentation>
+ (id)supportedMIMETypes;
@end

@protocol WebPDFDocumentView <WebDocumentView>
+ (id)supportedMIMETypes;
@end

@protocol WebPluginContainerCheckController <NSObject>
- (id)webView;
- (id)webFrame;
- (void)_webPluginContainerCancelCheckIfAllowedToLoadRequest:(id)arg1;
@end

@protocol WebPluginManualLoader
- (void)pluginViewFinishedLoading:(id)arg1;
- (void)pluginView:(id)arg1 receivedError:(id)arg2;
- (void)pluginView:(id)arg1 receivedData:(id)arg2;
- (void)pluginView:(id)arg1 receivedResponse:(id)arg2;
@end

@protocol WebPolicyDecisionListener <NSObject>
- (void)ignore;
- (void)download;
- (void)use;
@end

@protocol WebQuotaManager
- (void)setQuota:(unsigned long long)arg1;
- (unsigned long long)quota;
- (unsigned long long)usage;
- (id)origin;
- (id)initWithOrigin:(id)arg1;
@end

@protocol _WebDocumentViewState <NSObject>
- (void)setViewState:(id)arg1;
- (id)viewState;
- (void)setScrollPoint:(struct CGPoint)arg1;
- (struct CGPoint)scrollPoint;
@end

@protocol _WebDocumentZooming <NSObject>
- (BOOL)_canResetZoom;
- (BOOL)_canZoomIn;
- (BOOL)_canZoomOut;
- (void)_resetZoom:(id)arg1;
- (void)_zoomIn:(id)arg1;
- (void)_zoomOut:(id)arg1;
@end

@interface WebApplicationCache : NSObject
{
}

+ (id)originsWithCache;
+ (void)deleteCacheForOrigin:(id)arg1;
+ (void)deleteAllApplicationCaches;
+ (long long)diskUsageForOrigin:(id)arg1;
+ (void)setDefaultOriginQuota:(long long)arg1;
+ (long long)defaultOriginQuota;
+ (void)setMaximumSize:(long long)arg1;
+ (long long)maximumSize;
+ (void)initializeWithBundleIdentifier:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface WebApplicationCacheQuotaManager : NSObject <WebQuotaManager>
{
    WebSecurityOrigin *_origin;
}

- (void)setQuota:(unsigned long long)arg1;
- (unsigned long long)quota;
- (unsigned long long)usage;
- (id)origin;
- (id)initWithOrigin:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface WebArchivePrivate : NSObject
{
    WebResource *cachedMainResource;
    NSArray *cachedSubresources;
    NSArray *cachedSubframeArchives;
    struct RefPtr<WebCore::LegacyWebArchive> coreArchive;
}

+ (void)initialize;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)dealloc;
- (void)setCoreArchive:(PassRefPtr_d33dc2c2)arg1;
- (struct LegacyWebArchive *)coreArchive;
- (id)initWithCoreArchive:(PassRefPtr_d33dc2c2)arg1;
- (id)init;

@end

@interface WebArchive : NSObject <NSCoding, NSCopying>
{
    WebArchivePrivate *_private;
}

- (id)data;
- (id)subframeArchives;
- (id)subresources;
- (id)mainResource;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithData:(id)arg1;
- (id)initWithMainResource:(id)arg1 subresources:(id)arg2 subframeArchives:(id)arg3;
- (id)init;
- (struct LegacyWebArchive *)_coreLegacyWebArchive;
- (id)_initWithCoreLegacyWebArchive:(PassRefPtr_d33dc2c2)arg1;

@end

@interface WebBackForwardList : NSObject
{
    WebBackForwardListPrivate *_private;
}

+ (void)initialize;
- (id)itemAtIndex:(int)arg1;
- (int)forwardListCount;
- (int)backListCount;
- (unsigned int)pageCacheSize;
- (void)setPageCacheSize:(unsigned int)arg1;
- (id)description;
- (void)setCapacity:(int)arg1;
- (int)capacity;
- (id)forwardListWithLimit:(int)arg1;
- (id)backListWithLimit:(int)arg1;
- (id)forwardItem;
- (id)currentItem;
- (id)backItem;
- (void)goToItem:(id)arg1;
- (void)goForward;
- (void)goBack;
- (BOOL)containsItem:(id)arg1;
- (void)setToMatchDictionaryRepresentation:(id)arg1;
- (id)dictionaryRepresentation;
- (void)removeItem:(id)arg1;
- (void)addItem:(id)arg1;
- (void)_close;
- (void)finalize;
- (void)dealloc;
- (id)init;
- (id)initWithBackForwardList:(PassRefPtr_a2d75529)arg1;

@end

__attribute__((visibility("hidden")))
@interface WebBasePluginPackage : NSObject
{
    NSMutableSet *pluginDatabases;
    struct String path;
    struct PluginInfo pluginInfo;
    struct RetainPtr<__CFBundle *> cfBundle;
    void *BP_CreatePluginMIMETypesPreferences;
}

+ (id)preferredLocalizationName;
+ (id)pluginWithPath:(id)arg1;
+ (void)initialize;
- (id).cxx_construct;
- (void).cxx_destruct;
- (struct String)bundleVersion;
- (struct String)bundleIdentifier;
- (void)wasRemovedFromPluginDatabase:(id)arg1;
- (void)wasAddedToPluginDatabase:(id)arg1;
- (unsigned long)versionNumber;
- (BOOL)isNativeLibraryData:(id)arg1;
- (BOOL)isJavaPlugIn;
- (BOOL)isQuickTimePlugIn;
- (id)MIMETypeForExtension:(const struct String *)arg1;
- (BOOL)supportsMIMEType:(const struct String *)arg1;
- (BOOL)supportsExtension:(const struct String *)arg1;
- (const struct PluginInfo *)pluginInfo;
- (const struct String *)path;
- (void)finalize;
- (void)dealloc;
- (BOOL)load;
- (BOOL)getPluginInfoFromPLists;
- (id)_objectForInfoDictionaryKey:(id)arg1;
- (id)pListForPath:(id)arg1 createFile:(BOOL)arg2;
- (void)createPropertyListFile;
- (void)unload;
- (id)initWithPath:(id)arg1;

@end

@interface WebCache : NSObject
{
}

+ (BOOL)isDisabled;
+ (void)setDisabled:(BOOL)arg1;
+ (void)removeImageFromCacheForURL:(id)arg1;
+ (_Bool)addImageToCache:(struct CGImage *)arg1 forURL:(id)arg2;
+ (void)clearCachedCredentials;
+ (void)sizeOfDeadResources:(int *)arg1;
+ (void)emptyInMemoryResources;
+ (void)empty;
+ (id)statistics;
+ (void)initialize;

@end

@interface WebCoreStatistics : NSObject
{
}

+ (id)javaScriptRootObjectTypeCounts;
+ (unsigned long)javaScriptInterpretersCount;
+ (id)javaScriptRootObjectClasses;
+ (unsigned long)javaScriptReferencedObjectsCount;
+ (unsigned long)javaScriptNoGCAllowedObjectsCount;
+ (int)autoreleasedPageCount;
+ (int)cachedFrameCount;
+ (int)cachedPageCount;
+ (void)returnFreeMemoryToSystem;
+ (id)memoryStatistics;
+ (void)stopIgnoringWebCoreNodeLeaks;
+ (void)startIgnoringWebCoreNodeLeaks;
+ (void)setCacheDisabled:(BOOL)arg1;
+ (void)emptyCache;
+ (void)setShouldPrintExceptions:(BOOL)arg1;
+ (BOOL)shouldPrintExceptions;
+ (unsigned long)glyphPageCount;
+ (void)purgeInactiveFontData;
+ (unsigned long)cachedFontDataInactiveCount;
+ (unsigned long)cachedFontDataCount;
+ (unsigned long)iconsWithDataCount;
+ (unsigned long)iconRecordCount;
+ (unsigned long)iconRetainedPageURLCount;
+ (unsigned long)iconPageURLMappingCount;
+ (void)garbageCollectJavaScriptObjectsOnAlternateThreadForDebugging:(BOOL)arg1;
+ (void)garbageCollectJavaScriptObjects;
+ (id)javaScriptObjectTypeCounts;
+ (id)javaScriptProtectedObjectTypeCounts;
+ (unsigned long)javaScriptProtectedGlobalObjectsCount;
+ (unsigned long)javaScriptProtectedObjectsCount;
+ (unsigned long)javaScriptGlobalObjectsCount;
+ (unsigned long)javaScriptObjectsCount;
+ (id)statistics;

@end

@interface WebDatabaseManager : NSObject
{
}

+ (void)scheduleEmptyDatabaseRemoval;
+ (void)removeEmptyDatabaseFiles;
+ (id)sharedWebDatabaseManager;
+ (void)endBackgroundTask;
+ (void)startBackgroundTask;
+ (void)didFinishLastTransaction;
+ (void)willBeginFirstTransaction;
- (BOOL)deleteDatabase:(id)arg1 withOrigin:(id)arg2;
- (BOOL)deleteOrigin:(id)arg1;
- (void)deleteAllDatabases;
- (id)detailsForDatabase:(id)arg1 withOrigin:(id)arg2;
- (id)databasesWithOrigin:(id)arg1;
- (id)origins;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface WebDatabasePauser : NSObject
{
}

- (void)applicationWillEnterForeground;
- (void)applicationDidEnterBackground;
- (void)dealloc;
- (id)initWithBackgroundNotification:(id)arg1 foregroundNotification:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface WebDatabaseQuotaManager : NSObject <WebQuotaManager>
{
    WebSecurityOrigin *_origin;
}

- (void)setQuota:(unsigned long long)arg1;
- (unsigned long long)quota;
- (unsigned long long)usage;
- (id)origin;
- (id)initWithOrigin:(id)arg1;

@end

@interface WebDataSource : NSObject
{
    void *_private;
}

+ (Class)_representationClassForMIMEType:(id)arg1 allowingPlugins:(BOOL)arg2;
+ (void)initialize;
+ (id)_repTypesAllowImageTypeOmission:(BOOL)arg1;
- (void)addSubresource:(id)arg1;
- (id)subresourceForURL:(id)arg1;
- (id)subresources;
- (id)mainResource;
- (id)webArchive;
- (id)unreachableURL;
- (id)pageTitle;
- (BOOL)isLoading;
- (id)textEncodingName;
- (id)response;
- (id)request;
- (id)initialRequest;
- (id)webFrame;
- (id)representation;
- (id)data;
- (void)finalize;
- (void)dealloc;
- (id)initWithRequest:(id)arg1;
- (void)_setRepresentation:(id)arg1;
- (id)dataSourceDelegate;
- (void)setDataSourceDelegate:(id)arg1;
- (void)_setAllowToBeMemoryMapped;
- (void)_setOverrideTextEncodingName:(id)arg1;
- (void)_setDeferMainResourceDataLoad:(BOOL)arg1;
- (BOOL)_transferApplicationCache:(id)arg1;
- (id)_responseMIMEType;
- (void)_addSubframeArchives:(id)arg1;
- (id)_mainDocumentError;
- (id)_initWithDocumentLoader:(PassRefPtr_a1b5a79e)arg1;
- (struct DocumentLoader *)_documentLoader;
- (void)_makeRepresentation;
- (BOOL)_isDocumentHTML;
- (id)_webView;
- (id)_URL;
- (id)_imageElementWithImageResource:(id)arg1;
- (id)_documentFragmentWithImageResource:(id)arg1;
- (id)_documentFragmentWithArchive:(id)arg1;
- (void)_replaceSelectionWithArchive:(id)arg1 selectReplacement:(BOOL)arg2;
- (void)_revertToProvisionalState;
- (void)_setMainDocumentError:(id)arg1;
- (void)_receivedData:(id)arg1;
- (void)_finishedLoading;

@end

__attribute__((visibility("hidden")))
@interface WebDefaultEditingDelegate : NSObject
{
}

+ (id)sharedEditingDelegate;
- (id)undoManagerForWebView:(id)arg1;
- (void)webViewDidChangeSelection:(id)arg1;
- (void)webViewDidChangeTypingStyle:(id)arg1;
- (void)webViewDidEndEditing:(id)arg1;
- (void)webViewDidChange:(id)arg1;
- (void)webViewDidBeginEditing:(id)arg1;
- (id)documentFragmentForPasteboardItemAtIndex:(int)arg1;
- (id)supportedPasteboardTypesForCurrentSelection;
- (BOOL)webView:(id)arg1 doCommandBySelector:(SEL)arg2;
- (BOOL)webView:(id)arg1 shouldChangeTypingStyle:(id)arg2 toStyle:(id)arg3;
- (BOOL)webView:(id)arg1 shouldMoveRangeAfterDelete:(id)arg2 replacingRange:(id)arg3;
- (BOOL)webView:(id)arg1 shouldApplyStyle:(id)arg2 toElementsInDOMRange:(id)arg3;
- (BOOL)webView:(id)arg1 shouldChangeSelectedDOMRange:(id)arg2 toDOMRange:(id)arg3 affinity:(int)arg4 stillSelecting:(BOOL)arg5;
- (BOOL)webView:(id)arg1 shouldDeleteDOMRange:(id)arg2;
- (BOOL)webView:(id)arg1 shouldInsertText:(id)arg2 replacingDOMRange:(id)arg3 givenAction:(int)arg4;
- (BOOL)webView:(id)arg1 shouldInsertNode:(id)arg2 replacingDOMRange:(id)arg3 givenAction:(int)arg4;
- (BOOL)webView:(id)arg1 shouldEndEditingInDOMRange:(id)arg2;
- (BOOL)webView:(id)arg1 shouldBeginEditingInDOMRange:(id)arg2;
- (BOOL)webView:(id)arg1 shouldShowDeleteInterfaceForElement:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface WebDefaultFormDelegate : NSObject <WebFormDelegate>
{
}

+ (id)sharedFormDelegate;
- (void)frame:(id)arg1 sourceFrame:(id)arg2 willSubmitForm:(id)arg3 withValues:(id)arg4 submissionListener:(id)arg5;
- (BOOL)textField:(id)arg1 doCommandBySelector:(SEL)arg2 inFrame:(id)arg3;
- (void)textDidChangeInTextArea:(id)arg1 inFrame:(id)arg2;
- (void)textDidChangeInTextField:(id)arg1 inFrame:(id)arg2;
- (void)textFieldDidEndEditing:(id)arg1 inFrame:(id)arg2;
- (void)textFieldDidBeginEditing:(id)arg1 inFrame:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface WebDefaultFrameLoadDelegate : NSObject
{
}

+ (id)sharedFrameLoadDelegate;
- (void)webView:(id)arg1 didClearInspectorWindowObject:(id)arg2 forFrame:(id)arg3;
- (void)webView:(id)arg1 didFirstVisuallyNonEmptyLayoutInFrame:(id)arg2;
- (void)webView:(id)arg1 didHandleOnloadEventsForFrame:(id)arg2;
- (void)webView:(id)arg1 didFinishDocumentLoadForFrame:(id)arg2;
- (void)webView:(id)arg1 didFirstLayoutInFrame:(id)arg2;
- (void)webView:(id)arg1 didPopStateWithinPageForFrame:(id)arg2;
- (void)webView:(id)arg1 didReplaceStateWithinPageForFrame:(id)arg2;
- (void)webView:(id)arg1 didPushStateWithinPageForFrame:(id)arg2;
- (void)webView:(id)arg1 didClearWindowObjectForFrame:(id)arg2 inScriptWorld:(id)arg3;
- (void)webView:(id)arg1 didDetectXSS:(id)arg2;
- (void)webView:(id)arg1 didRunInsecureContent:(id)arg2;
- (void)webViewDidDisplayInsecureContent:(id)arg1;
- (void)webView:(id)arg1 windowScriptObjectAvailable:(id)arg2;
- (void)webView:(id)arg1 didClearWindowObject:(id)arg2 forFrame:(id)arg3;
- (void)webView:(id)arg1 willCloseFrame:(id)arg2;
- (void)webView:(id)arg1 didCancelClientRedirectForFrame:(id)arg2;
- (void)webView:(id)arg1 willPerformClientRedirectToURL:(id)arg2 delay:(double)arg3 fireDate:(id)arg4 forFrame:(id)arg5;
- (void)webView:(id)arg1 didChangeLocationWithinPageForFrame:(id)arg2;
- (void)webView:(id)arg1 didFailLoadWithError:(id)arg2 forFrame:(id)arg3;
- (void)webView:(id)arg1 didFinishLoadForFrame:(id)arg2;
- (void)webView:(id)arg1 didReceiveTitle:(id)arg2 forFrame:(id)arg3;
- (void)webView:(id)arg1 didCommitLoadForFrame:(id)arg2;
- (void)webView:(id)arg1 didFailProvisionalLoadWithError:(id)arg2 forFrame:(id)arg3;
- (void)webView:(id)arg1 didReceiveServerRedirectForProvisionalLoadForFrame:(id)arg2;
- (void)webView:(id)arg1 didStartProvisionalLoadForFrame:(id)arg2;

@end

@interface WebDefaultPolicyDelegate : NSObject
{
}

+ (id)sharedPolicyDelegate;
- (BOOL)webView:(id)arg1 shouldGoToHistoryItem:(id)arg2;
- (void)webView:(id)arg1 decidePolicyForNewWindowAction:(id)arg2 request:(id)arg3 newFrameName:(id)arg4 decisionListener:(id)arg5;
- (void)webView:(id)arg1 decidePolicyForNavigationAction:(id)arg2 request:(id)arg3 frame:(id)arg4 decisionListener:(id)arg5;
- (void)webView:(id)arg1 decidePolicyForMIMEType:(id)arg2 request:(id)arg3 frame:(id)arg4 decisionListener:(id)arg5;
- (void)webView:(id)arg1 unableToImplementPolicyWithError:(id)arg2 frame:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface WebDefaultResourceLoadDelegate : NSObject
{
}

+ (id)sharedResourceLoadDelegate;
- (id)webView:(id)arg1 resource:(id)arg2 willCacheResponse:(id)arg3 fromDataSource:(id)arg4;
- (BOOL)webView:(id)arg1 resource:(id)arg2 shouldUseCredentialStorageForDataSource:(id)arg3;
- (void)webView:(id)arg1 didLoadResourceFromMemoryCache:(id)arg2 response:(id)arg3 length:(int)arg4 fromDataSource:(id)arg5;
- (void)webView:(id)arg1 plugInFailedWithError:(id)arg2 dataSource:(id)arg3;
- (void)webView:(id)arg1 resource:(id)arg2 didFailLoadingWithError:(id)arg3 fromDataSource:(id)arg4;
- (void)webView:(id)arg1 resource:(id)arg2 didFinishLoadingFromDataSource:(id)arg3;
- (void)webView:(id)arg1 resource:(id)arg2 didReceiveContentLength:(int)arg3 fromDataSource:(id)arg4;
- (void)webView:(id)arg1 resource:(id)arg2 didReceiveResponse:(id)arg3 fromDataSource:(id)arg4;
- (id)webView:(id)arg1 connectionPropertiesForResource:(id)arg2 dataSource:(id)arg3;
- (BOOL)webView:(id)arg1 resource:(id)arg2 canAuthenticateAgainstProtectionSpace:(id)arg3 forDataSource:(id)arg4;
- (void)webView:(id)arg1 resource:(id)arg2 didCancelAuthenticationChallenge:(id)arg3 fromDataSource:(id)arg4;
- (void)webView:(id)arg1 resource:(id)arg2 didReceiveAuthenticationChallenge:(id)arg3 fromDataSource:(id)arg4;
- (id)webView:(id)arg1 resource:(id)arg2 willSendRequest:(id)arg3 redirectResponse:(id)arg4 fromDataSource:(id)arg5;
- (id)webView:(id)arg1 identifierForInitialRequest:(id)arg2 fromDataSource:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface WebDefaultUIDelegate : NSObject
{
}

+ (id)sharedUIDelegate;
- (void)webViewSupportedOrientationsUpdated:(id)arg1;
- (id)webView:(id)arg1 generateReplacementFile:(id)arg2;
- (BOOL)webView:(id)arg1 shouldReplaceUploadFile:(id)arg2 usingGeneratedFilename:(id *)arg3;
- (void)webView:(id)arg1 exceededApplicationCacheOriginQuotaForSecurityOrigin:(id)arg2 totalSpaceNeeded:(unsigned int)arg3;
- (void)webView:(id)arg1 didScrollDocumentInFrameView:(id)arg2;
- (void)webView:(id)arg1 didDrawRect:(struct CGRect)arg2;
- (void)webView:(id)arg1 printFrameView:(id)arg2;
- (void)webView:(id)arg1 runOpenPanelForFileButtonWithResultListener:(id)arg2;
- (id)webView:(id)arg1 runJavaScriptTextInputPanelWithPrompt:(id)arg2 defaultText:(id)arg3 initiatedByFrame:(id)arg4;
- (BOOL)webView:(id)arg1 runJavaScriptConfirmPanelWithMessage:(id)arg2 initiatedByFrame:(id)arg3;
- (void)webView:(id)arg1 runJavaScriptAlertPanelWithMessage:(id)arg2 initiatedByFrame:(id)arg3;
- (struct CGRect)webViewFrame:(id)arg1;
- (void)webView:(id)arg1 setFrame:(struct CGRect)arg2;
- (void)webView:(id)arg1 setResizable:(BOOL)arg2;
- (BOOL)webViewIsResizable:(id)arg1;
- (void)webView:(id)arg1 setStatusBarVisible:(BOOL)arg2;
- (BOOL)webViewIsStatusBarVisible:(id)arg1;
- (void)webView:(id)arg1 setToolbarsVisible:(BOOL)arg2;
- (BOOL)webViewAreToolbarsVisible:(id)arg1;
- (void)webView:(id)arg1 mouseDidMoveOverElement:(id)arg2 modifierFlags:(unsigned int)arg3;
- (id)webViewStatusText:(id)arg1;
- (void)webView:(id)arg1 setStatusText:(id)arg2;
- (void)webView:(id)arg1 makeFirstResponder:(id)arg2;
- (id)webViewFirstResponder:(id)arg1;
- (void)webViewUnfocus:(id)arg1;
- (void)webViewFocus:(id)arg1;
- (void)webViewClose:(id)arg1;
- (void)webViewShow:(id)arg1;
- (id)webView:(id)arg1 createWebViewWithRequest:(id)arg2 userGesture:(BOOL)arg3;
- (id)webView:(id)arg1 createWebViewWithRequest:(id)arg2 windowFeatures:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface WebDefaultUIKitDelegate : NSObject
{
}

+ (id)sharedUIKitDelegate;
- (void)webView:(id)arg1 addMessageToConsole:(id)arg2 withSource:(id)arg3;
- (void)webViewDidDrawTiles:(id)arg1;
- (void)webView:(id)arg1 willAddPlugInView:(id)arg2;
- (BOOL)isUnperturbedDictationResultMarker:(id)arg1;
- (int)getPasteboardChangeCount;
- (BOOL)performsTwoStepPaste:(id)arg1;
- (BOOL)hasRichlyEditableSelection;
- (id)supportedPasteboardTypesForCurrentSelection;
- (int)getPasteboardItemsCount;
- (id)readDataFromPasteboard:(id)arg1 withIndex:(int)arg2;
- (void)writeDataToPasteboard:(id)arg1;
- (id)checkSpellingOfString:(id)arg1;
- (void)webView:(id)arg1 runOpenPanelForFileButtonWithResultListener:(id)arg2 allowMultipleFiles:(BOOL)arg3 acceptMIMETypes:(id)arg4;
- (void)webViewDidEndOverflowScroll:(id)arg1;
- (void)webViewDidStartOverflowScroll:(id)arg1;
- (void)webViewDidLayout:(id)arg1;
- (void)revealedSelectionByScrollingWebFrame:(id)arg1;
- (void)webView:(id)arg1 willRemoveScrollingLayer:(id)arg2 withContentsLayer:(id)arg3 forNode:(id)arg4;
- (void)webView:(id)arg1 didCreateOrUpdateScrollingLayer:(id)arg2 withContentsLayer:(id)arg3 scrollSize:(id)arg4 forNode:(id)arg5 allowHorizontalScrollbar:(BOOL)arg6 allowVerticalScrollbar:(BOOL)arg7;
- (void)webViewDidCommitCompositingLayerChanges:(id)arg1;
- (void)_webthread_webView:(id)arg1 attachRootLayer:(id)arg2;
- (void)deleteFromInput;
- (void)addInputString:(id)arg1 fromVariantKey:(BOOL)arg2;
- (void)webView:(id)arg1 didReceiveMessage:(id)arg2;
- (void)webView:(id)arg1 didHideFullScreenForPlugInView:(id)arg2;
- (void)webView:(id)arg1 willShowFullScreenForPlugInView:(id)arg2;
- (id)webView:(id)arg1 plugInViewWithArguments:(id)arg2 fromPlugInPackage:(id)arg3;
- (void)webView:(id)arg1 didReceiveDocTypeForFrame:(id)arg2;
- (void)webViewDidRestoreFromPageCache:(id)arg1;
- (void)webView:(id)arg1 elementDidBlurNode:(id)arg2;
- (void)webView:(id)arg1 elementDidFocusNode:(id)arg2;
- (void)webView:(id)arg1 didFirstVisuallyNonEmptyLayoutInFrame:(id)arg2;
- (void)webView:(id)arg1 didFirstLayoutInFrame:(id)arg2;
- (void)webView:(id)arg1 didChangeLocationWithinPageForFrame:(id)arg2;
- (void)webView:(id)arg1 didFailLoadWithError:(id)arg2 forFrame:(id)arg3;
- (void)webView:(id)arg1 didFinishDocumentLoadForFrame:(id)arg2;
- (void)webView:(id)arg1 willCloseFrame:(id)arg2;
- (BOOL)webView:(id)arg1 shouldScrollToPoint:(struct CGPoint)arg2 forFrame:(id)arg3;
- (void)webViewDidPreventDefaultForEvent:(id)arg1;
- (void)webView:(id)arg1 didObserveDeferredContentChange:(int)arg2 forFrame:(id)arg3;
- (void)webView:(id)arg1 needsScrollNotifications:(id)arg2 forFrame:(id)arg3;
- (void)webView:(id)arg1 didReceiveViewportArguments:(id)arg2 forFrame:(id)arg3;
- (void)webView:(id)arg1 restoreStateFromHistoryItem:(id)arg2 forFrame:(id)arg3 force:(BOOL)arg4;
- (void)webView:(id)arg1 saveStateToHistoryItem:(id)arg2 forFrame:(id)arg3;
- (void)webView:(id)arg1 didFinishLoadForFrame:(id)arg2;
- (void)webView:(id)arg1 didCommitLoadForFrame:(id)arg2;
- (void)webView:(id)arg1 didStartProvisionalLoadForFrame:(id)arg2;
- (struct CGRect)documentVisibleRectForWebView:(id)arg1;
- (struct CGPoint)contentsPointForWebView:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface WebDeviceOrientationInternal : NSObject
{
    struct RefPtr<WebCore::DeviceOrientation> m_orientation;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (id)initWithCoreDeviceOrientation:(PassRefPtr_ce175d97)arg1;

@end

@interface WebDeviceOrientation : NSObject
{
    WebDeviceOrientationInternal *m_internal;
}

- (void)dealloc;
- (id)initWithCanProvideAlpha:(_Bool)arg1 alpha:(double)arg2 canProvideBeta:(_Bool)arg3 beta:(double)arg4 canProvideGamma:(_Bool)arg5 gamma:(double)arg6;
- (id)initWithCoreDeviceOrientation:(PassRefPtr_ce175d97)arg1;

@end

__attribute__((visibility("hidden")))
@interface WebDeviceOrientationProviderMockInternal : NSObject
{
    struct OwnPtr<WebCore::DeviceOrientationClientMock> m_core;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (id)lastOrientation;
- (void)stopUpdating;
- (void)startUpdating;
- (void)setController:(struct DeviceOrientationController *)arg1;
- (void)setOrientation:(id)arg1;
- (id)init;

@end

@interface WebDeviceOrientationProviderMock : NSObject <WebDeviceOrientationProvider>
{
    WebDeviceOrientationProviderMockInternal *m_internal;
}

+ (id)shared;
- (id)lastOrientation;
- (void)stopUpdating;
- (void)startUpdating;
- (void)setOrientation:(id)arg1;
- (void)dealloc;
- (id)init;
- (void)setController:(struct DeviceOrientationController *)arg1;

@end

__attribute__((visibility("hidden")))
@interface WebDownloadInternal : NSObject <NSURLDownloadDelegate>
{
    id realDelegate;
}

- (void)download:(id)arg1 didBeginChildDownload:(id)arg2;
- (id)download:(id)arg1 shouldBeginChildDownloadOfSource:(id)arg2 delegate:(id *)arg3;
- (void)download:(id)arg1 didFailWithError:(id)arg2;
- (void)downloadDidFinish:(id)arg1;
- (void)download:(id)arg1 didCreateDestination:(id)arg2;
- (void)download:(id)arg1 decideDestinationWithSuggestedFilename:(id)arg2;
- (BOOL)download:(id)arg1 shouldDecodeSourceDataOfMIMEType:(id)arg2;
- (void)download:(id)arg1 didReceiveDataOfLength:(unsigned int)arg2;
- (void)download:(id)arg1 didReceiveResponse:(id)arg2;
- (void)download:(id)arg1 didCancelAuthenticationChallenge:(id)arg2;
- (void)download:(id)arg1 didReceiveAuthenticationChallenge:(id)arg2;
- (id)download:(id)arg1 willSendRequest:(id)arg2 redirectResponse:(id)arg3;
- (void)downloadDidBegin:(id)arg1;
- (BOOL)respondsToSelector:(SEL)arg1;
- (void)setRealDelegate:(id)arg1;
- (void)dealloc;

@end

@interface WebDownload : NSURLDownload
{
    WebDownloadInternal *_webInternal;
}

- (void)connection:(id)arg1 willStopBufferingData:(id)arg2;
- (id)_initWithRequest:(id)arg1 delegate:(id)arg2 directory:(id)arg3;
- (id)_initWithLoadingCFURLConnection:(struct _CFURLConnection *)arg1 request:(struct _CFURLRequest *)arg2 response:(struct _CFURLResponse *)arg3 delegate:(id)arg4 proxy:(id)arg5;
- (id)_initWithLoadingConnection:(id)arg1 request:(id)arg2 response:(id)arg3 delegate:(id)arg4 proxy:(id)arg5;
- (id)initWithRequest:(id)arg1 delegate:(id)arg2;
- (void)dealloc;
- (id)init;
- (void)_setRealDelegate:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface WebUndoStep : NSObject
{
    struct RefPtr<WebCore::UndoStep> m_step;
}

+ (id)stepWithUndoStep:(PassRefPtr_f4b194ba)arg1;
+ (void)initialize;
- (id).cxx_construct;
- (void).cxx_destruct;
- (struct UndoStep *)step;
- (void)finalize;
- (void)dealloc;
- (id)initWithUndoStep:(PassRefPtr_f4b194ba)arg1;

@end

__attribute__((visibility("hidden")))
@interface WebEditorUndoTarget : NSObject
{
}

- (void)redoEditing:(id)arg1;
- (void)undoEditing:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface WebElementDictionary : NSDictionary
{
    struct HitTestResult *_result;
    NSMutableDictionary *_cache;
    NSMutableSet *_nilValues;
    BOOL _cacheComplete;
}

+ (void)initializeLookupTable;
+ (void)initialize;
- (id)_isInScrollBar;
- (id)_isContentEditable;
- (id)_isLiveLink;
- (id)_textContent;
- (id)_titleDisplayString;
- (id)_targetWebFrame;
- (id)_absoluteLinkURL;
- (id)_title;
- (id)_isSelected;
- (id)_absoluteMediaURL;
- (id)_absoluteImageURL;
- (id)_imageRect;
- (id)_image;
- (id)_spellingToolTip;
- (id)_altDisplayString;
- (id)_webFrame;
- (id)_domNode;
- (id)objectForKey:(id)arg1;
- (id)keyEnumerator;
- (unsigned int)count;
- (void)_fillCache;
- (void)finalize;
- (void)dealloc;
- (id)initWithHitTestResult:(const struct HitTestResult *)arg1;

@end

__attribute__((visibility("hidden")))
@interface WebFixedPositionContent : NSObject
{
    struct WebFixedPositionContentData *_private;
}

- (void)unlockLayers;
- (void)lockLayers;
- (BOOL)hasFixedPositionLayers;
- (void)removeAllLayers;
- (void)removeLayer:(id)arg1 insideLayerSync:(BOOL)arg2;
- (void)addOrUpdateLayer:(id)arg1 sizing:(unsigned int)arg2 bounds:(struct CGRect)arg3 alignmentOffset:(struct CGSize)arg4 insideLayerSync:(BOOL)arg5;
- (void)didFinishScrollingOrZooming;
- (void)scrollOrZoomChanged:(struct CGRect)arg1;
- (void)dealloc;
- (id)initWithWebView:(id)arg1;

@end

@interface WebFormDelegate : NSObject <WebFormDelegate>
{
}

+ (id)_sharedWebFormDelegate;
- (void)frame:(id)arg1 sourceFrame:(id)arg2 willSubmitForm:(id)arg3 withValues:(id)arg4 submissionListener:(id)arg5;
- (BOOL)textField:(id)arg1 doCommandBySelector:(SEL)arg2 inFrame:(id)arg3;
- (void)textDidChangeInTextArea:(id)arg1 inFrame:(id)arg2;
- (void)textDidChangeInTextField:(id)arg1 inFrame:(id)arg2;
- (void)textFieldDidEndEditing:(id)arg1 inFrame:(id)arg2;
- (void)textFieldDidBeginEditing:(id)arg1 inFrame:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface WebFramePrivate : NSObject
{
    struct Frame *coreFrame;
    WebFrameView *webFrameView;
    struct WebScriptDebugger *scriptDebugger;
    id internalLoadDelegate;
    BOOL shouldCreateRenderers;
    BOOL includedInWebKitStatistics;
    BOOL isCommitting;
    BOOL isSingleLine;
}

- (void)setWebFrameView:(id)arg1;
- (void)finalize;
- (void)dealloc;

@end

@interface WebFrame : NSObject
{
    WebFramePrivate *_private;
}

+ (void)_createMainFrameWithSimpleHTMLDocumentWithPage:(struct Page *)arg1 frameView:(id)arg2 style:(id)arg3;
+ (PassRefPtr_4af616b4)_createSubframeWithOwnerElement:(struct HTMLFrameOwnerElement *)arg1 frameName:(const struct String *)arg2 frameView:(id)arg3;
+ (void)_createMainFrameWithPage:(struct Page *)arg1 frameName:(const struct String *)arg2 frameView:(id)arg3;
+ (PassRefPtr_4af616b4)_createFrameWithPage:(struct Page *)arg1 frameName:(const struct String *)arg2 frameView:(id)arg3 ownerElement:(struct HTMLFrameOwnerElement *)arg4;
+ (id)stringWithData:(id)arg1 textEncodingName:(id)arg2;
- (struct OpaqueJSContext *)globalContext;
- (id)windowObject;
- (id)childFrames;
- (id)parentFrame;
- (id)findFrameNamed:(id)arg1;
- (void)reloadFromOrigin;
- (void)reload;
- (void)stopLoading;
- (void)loadArchive:(id)arg1;
- (void)loadAlternateHTMLString:(id)arg1 baseURL:(id)arg2 forUnreachableURL:(id)arg3;
- (void)loadHTMLString:(id)arg1 baseURL:(id)arg2;
- (void)_loadHTMLString:(id)arg1 baseURL:(id)arg2 unreachableURL:(id)arg3;
- (void)loadData:(id)arg1 MIMEType:(id)arg2 textEncodingName:(id)arg3 baseURL:(id)arg4;
- (void)_loadData:(id)arg1 MIMEType:(id)arg2 textEncodingName:(id)arg3 baseURL:(id)arg4 unreachableURL:(id)arg5;
- (void)loadRequest:(id)arg1;
- (id)dataSource;
- (id)provisionalDataSource;
- (id)frameElement;
- (id)DOMDocument;
- (id)webView;
- (id)frameView;
- (id)name;
- (void)finalize;
- (void)dealloc;
- (id)initWithName:(id)arg1 webFrameView:(id)arg2 webView:(id)arg3;
- (id)init;
- (void)printToCGContext:(struct CGContext *)arg1:(float)arg2:(float)arg3;
- (id)pageSizeAndMarginsInPixels:(int)arg1:(int)arg2:(int)arg3:(int)arg4:(int)arg5:(int)arg6:(int)arg7;
- (_Bool)isPageBoxVisible:(int)arg1;
- (id)pageProperty:(const char *)arg1:(int)arg2;
- (int)numberOfPages:(float)arg1:(float)arg2;
- (int)pageNumberForElement:(id)arg1:(float)arg2:(float)arg3;
- (id)counterValueForElement:(id)arg1;
- (id)renderTreeAsExternalRepresentationForPrinting:(BOOL)arg1;
- (void)_commitData:(id)arg1;
- (BOOL)_canSaveAsWebArchive;
- (BOOL)_canProvideDocumentSource;
- (void)_setTypingStyle:(id)arg1 withUndoAction:(int)arg2;
- (id)_typingStyle;
- (id)_characterRangeAtPoint:(struct CGPoint)arg1;
- (struct VisiblePosition)_visiblePositionForPoint:(struct CGPoint)arg1;
- (void)_insertParagraphSeparatorInQuotedContent;
- (void)_replaceSelectionWithNode:(id)arg1 selectReplacement:(BOOL)arg2 smartReplace:(BOOL)arg3 matchStyle:(BOOL)arg4;
- (id)_documentFragmentWithNodesAsParagraphs:(id)arg1;
- (id)_documentFragmentWithMarkupString:(id)arg1 baseURLString:(id)arg2;
- (id)_smartDeleteRangeForProposedRange:(id)arg1;
- (id)_markDOMRange;
- (struct _NSRange)_convertDOMRangeToNSRange:(id)arg1;
- (id)_convertNSRangeToDOMRange:(struct _NSRange)arg1;
- (PassRefPtr_d7fc6f43)_convertToDOMRange:(struct _NSRange)arg1;
- (struct _NSRange)_convertToNSRange:(struct Range *)arg1;
- (int)_selectionGranularity;
- (BOOL)_needsLayout;
- (void)_scrollDOMRangeToVisible:(id)arg1 withInset:(float)arg2;
- (void)_scrollDOMRangeToVisible:(id)arg1;
- (struct CGRect)_firstRectForDOMRange:(id)arg1;
- (struct CGRect)_caretRectAtPosition:(const struct Position *)arg1 affinity:(int)arg2;
- (id)_stringByEvaluatingJavaScriptFromString:(id)arg1 forceUserGesture:(BOOL)arg2;
- (id)_stringByEvaluatingJavaScriptFromString:(id)arg1;
- (BOOL)_getVisibleRect:(struct CGRect *)arg1;
- (void)_drawRect:(struct CGRect)arg1 contentsOnly:(BOOL)arg2;
- (BOOL)_shouldFlattenCompositingLayers:(struct CGContext *)arg1;
- (id)_stringForRange:(id)arg1;
- (id)_selectedString;
- (id)_markupStringFromRange:(id)arg1 nodes:(id *)arg2;
- (id)_nodesFromList:(Vector_52b24800 *)arg1;
- (id)_stringWithDocumentTypeStringAndMarkupString:(id)arg1;
- (void)_setIsCommitting:(BOOL)arg1;
- (BOOL)_isCommitting;
- (id)_dataSource;
- (void)_clearSelectionInOtherFrames;
- (id)_findFrameWithSelection;
- (void)_clearSelection;
- (BOOL)_hasSelection;
- (void)_unmarkAllMisspellings;
- (void)_unmarkAllBadGrammar;
- (id)_internalLoadDelegate;
- (void)_setInternalLoadDelegate:(id)arg1;
- (void)_updateBackgroundAndUpdatesWhileOffscreen;
- (void)_clearCoreFrame;
- (id)_initWithWebFrameView:(id)arg1 webView:(id)arg2;
- (void)_detachScriptDebugger;
- (void)_attachScriptDebugger;
- (BOOL)_isIncludedInWebKitStatistics;
- (void)_dispatchDidReceiveTitle:(id)arg1;
- (BOOL)focusedNodeHasContent;
- (id)_documentFragmentForImageData:(id)arg1 withRelativeURLPart:(id)arg2 andMIMEType:(id)arg3;
- (id)_documentFragmentForWebArchive:(id)arg1;
- (id)_documentFragmentForText:(id)arg1;
- (id)_computePageRectsWithPrintScaleFactor:(float)arg1 pageSize:(struct CGSize)arg2;
- (void)_clearOpener;
- (id)accessibilityRoot;
- (id)_layerTreeAsText;
- (void)setAccessibleName:(id)arg1;
- (struct OpaqueJSContext *)_globalContextForScriptWorld:(id)arg1;
- (id)_stringByEvaluatingJavaScriptFromString:(id)arg1 withGlobalObject:(struct OpaqueJSValue *)arg2 inScriptWorld:(id)arg3;
- (BOOL)_allowsFollowingLink:(id)arg1;
- (id)_cacheabilityDictionary;
- (void)_replaceSelectionWithMarkupString:(id)arg1 baseURLString:(id)arg2 selectReplacement:(BOOL)arg3 smartReplace:(BOOL)arg4;
- (void)_replaceSelectionWithText:(id)arg1 selectReplacement:(BOOL)arg2 smartReplace:(BOOL)arg3;
- (BOOL)hasRichlyEditableSelection;
- (void)removeUnchangeableStyles;
- (void)_replaceSelectionWithFragment:(id)arg1 selectReplacement:(BOOL)arg2 smartReplace:(BOOL)arg3 matchStyle:(BOOL)arg4;
- (void)_resumeAnimations;
- (void)_suspendAnimations;
- (void)_replaceSelectionWithWebArchive:(id)arg1 selectReplacement:(BOOL)arg2 smartReplace:(BOOL)arg3;
- (void)_replaceSelectionWithText:(id)arg1 selectReplacement:(BOOL)arg2 smartReplace:(BOOL)arg3 matchStyle:(BOOL)arg4;
- (id)stringForRange:(id)arg1;
- (id)stringByEvaluatingJavaScriptFromString:(id)arg1 forceUserGesture:(BOOL)arg2;
- (void)_userScrolled;
- (void)sendScrollEvent;
- (struct __GSFont *)fontForSelection:(char *)arg1;
- (struct CGRect)firstRectForDOMRange:(id)arg1;
- (id)convertNSRangeToDOMRange:(struct _NSRange)arg1;
- (struct _NSRange)convertDOMRangeToNSRange:(id)arg1;
- (id)characterRangeAtPoint:(struct CGPoint)arg1;
- (struct CGRect)caretRectAtNode:(id)arg1 offset:(int)arg2 affinity:(int)arg3;
- (void)clearPPTStats;
- (void)getPPTStatsWithParseCount:(unsigned int *)arg1 withLayoutCount:(unsigned int *)arg2 withForcedLayoutCount:(unsigned int *)arg3 withParseDuration:(double *)arg4 withLayoutDuration:(double *)arg5;
- (void)recursiveSetUpdateAppearanceEnabled:(BOOL)arg1;
- (id)dictationResultMetadataForRange:(id)arg1;
- (void)getDictationResultRanges:(id *)arg1 andMetadatas:(id *)arg2;
- (id)interpretationsForCurrentRoot;
- (void)setDictationPhrases:(id)arg1 metadata:(id)arg2 asChildOfElement:(id)arg3;
- (void)setText:(id)arg1 asChildOfElement:(id)arg2;
- (void)confirmMarkedText:(id)arg1;
- (void)setMarkedText:(id)arg1 forCandidates:(BOOL)arg2;
- (void)setMarkedText:(id)arg1 selectedRange:(struct _NSRange)arg2;
- (id)markedTextDOMRange;
- (void)selectNSRange:(struct _NSRange)arg1 onElement:(id)arg2;
- (id)rangeByExtendingCurrentSelection:(int)arg1;
- (id)rangeByMovingCurrentSelection:(int)arg1;
- (BOOL)selectionAtWordStart;
- (BOOL)selectionAtSentenceStart;
- (BOOL)selectionAtDocumentStart;
- (id)wordsInCurrentParagraph;
- (BOOL)spaceFollowsWordInRange:(id)arg1;
- (int)wordOffsetInRange:(id)arg1;
- (id)wordInRange:(id)arg1;
- (id)wordRangeContainingCaretSelection;
- (unsigned short)characterAfterCaretSelection;
- (unsigned short)characterBeforeCaretSelection;
- (unsigned short)characterInRelationToCaretSelection:(int)arg1;
- (void)expandSelectionToStartOfWordContainingCaretSelection;
- (void)expandSelectionToWordContainingCaretSelection;
- (id)elementRangeContainingCaretSelection;
- (void)expandSelectionToElementContainingCaretSelection;
- (int)selectionAffinity;
- (void)setSelectedDOMRange:(id)arg1 affinity:(int)arg2 closeTyping:(BOOL)arg3;
- (id)selectedDOMRange;
- (void)setMediaDataLoadsAutomatically:(BOOL)arg1;
- (BOOL)mediaDataLoadsAutomatically;
- (BOOL)isTelephoneNumberParsingEnabled;
- (BOOL)isTelephoneNumberParsingAllowed;
- (int)layoutCount;
- (id)documentView;
- (void)setCaretColor:(struct CGColor *)arg1;
- (void)createDefaultFieldEditorDocumentStructure;
- (struct CGRect)rectForScrollToVisible;
- (struct CGRect)caretRect;
- (void)setSelectionChangeCallbacksDisabled:(BOOL)arg1;
- (void)setIsActive:(BOOL)arg1;
- (void)updateLayout;
- (int)innerLineHeight:(id)arg1;
- (int)preferredHeight;
- (BOOL)hasEditableSelection;
- (void)resetSelection;
- (void)revealSelectionAtExtent:(BOOL)arg1;
- (void)_setProhibitsScrolling:(BOOL)arg1;
- (void)_setTextAutosizingWidth:(float)arg1;
- (void)_setVisibleSize:(struct CGSize)arg1;
- (struct CGRect)renderRectForPoint:(struct CGPoint)arg1 isReplaced:(char *)arg2 fontSize:(float *)arg3;
- (id)approximateNodeAtViewportLocation:(struct CGPoint *)arg1;
- (id)scrollableNodeAtViewportLocation:(struct CGPoint)arg1;
- (id)deepestNodeAtViewportLocation:(struct CGPoint)arg1;
- (struct CGSize)renderedSizeOfNode:(id)arg1 constrainedToWidth:(float)arg2;
- (void)setNeedsLayout;
- (void)sendOrientationChangeEvent:(int)arg1;
- (void)resetTextAutosizingBeforeLayout;
- (void)_saveViewState;
- (void)_restoreViewState;
- (void)_setSelectionFromNone;
- (void)_selectAll;
- (void)_handleKeyEvent:(id)arg1;
- (void)forceLayoutAdjustingViewSize:(BOOL)arg1;
- (struct _NSRange)selectedNSRange;
- (void)selectWithoutClosingTypingNSRange:(struct _NSRange)arg1;
- (void)selectNSRange:(struct _NSRange)arg1;
- (void)resumeFromPause;
- (void)prepareForPause;
- (void)setPluginsPaused:(BOOL)arg1;
- (void)setTimeoutsPaused:(BOOL)arg1;
- (unsigned int)formElementsCharacterCount;
- (unsigned int)_numberOfActiveAnimations;
- (BOOL)_pauseTransitionOfProperty:(id)arg1 onNode:(id)arg2 atTime:(double)arg3;
- (BOOL)_pauseAnimation:(id)arg1 onNode:(id)arg2 atTime:(double)arg3;
- (void)_setExcludeFromTextSearch:(_Bool)arg1;
- (void)_setIsDisconnected:(_Bool)arg1;
- (unsigned int)_pendingFrameUnloadEventCount;
- (BOOL)_isDisplayingStandaloneImage;
- (void)_selectNSRange:(struct _NSRange)arg1;
- (struct _NSRange)_selectedNSRange;
- (id)_selectionRangeForPoint:(struct CGPoint)arg1;
- (id)_selectionRangeForFirstPoint:(struct CGPoint)arg1 secondPoint:(struct CGPoint)arg2;
- (id)_rectsForRange:(id)arg1;
- (BOOL)_loadsSynchronously;
- (void)_setLoadsSynchronously:(BOOL)arg1;
- (BOOL)needsLayout;
- (int)_loadType;
- (BOOL)_isVisuallyNonEmpty;
- (BOOL)_firstLayoutDone;
- (BOOL)_isFrameSet;
- (struct CGColor *)_bodyBackgroundColor;
- (void)_setShouldCreateRenderers:(BOOL)arg1;
- (BOOL)_isDescendantOfFrame:(id)arg1;
- (id)nextUnperturbedDictationResultBoundaryFromPosition:(id)arg1;
- (id)previousUnperturbedDictationResultBoundaryFromPosition:(id)arg1;
- (struct CGImage *)imageForNode:(id)arg1 allowDownsampling:(BOOL)arg2 drawContentBehindTransparentNodes:(BOOL)arg3;
- (BOOL)renderedCharactersExceed:(unsigned int)arg1;
- (id)endPosition;
- (id)startPosition;
- (void)smartExtendRangedSelection:(int)arg1;
- (void)setSelectionGranularity:(int)arg1;
- (void)moveSelectionToPoint:(struct CGPoint)arg1;
- (void)moveSelectionToEnd;
- (void)moveSelectionToStart;
- (void)setBaseWritingDirection:(int)arg1;
- (void)toggleBaseWritingDirection;
- (int)selectionBaseWritingDirection;
- (void)expandSelectionToSentence;
- (void)aggressivelyExpandSelectionToWordContainingCaretSelection;
- (void)ensureRangedSelectionContainsInitialStartPoint:(struct CGPoint)arg1 initialEndPoint:(struct CGPoint)arg2;
- (void)setSelectionWithFirstPoint:(struct CGPoint)arg1 secondPoint:(struct CGPoint)arg2;
- (BOOL)setSelectionWithBasePoint:(struct CGPoint)arg1 extentPoint:(struct CGPoint)arg2 baseIsStart:(BOOL)arg3;
- (BOOL)setSelectionWithBasePoint:(struct CGPoint)arg1 extentPoint:(struct CGPoint)arg2 baseIsStart:(BOOL)arg3 allowFlipping:(BOOL)arg4;
- (BOOL)setRangedSelectionExtentPoint:(struct CGPoint)arg1 baseIsStart:(BOOL)arg2 allowFlipping:(BOOL)arg3;
- (void)setRangedSelectionWithExtentPoint:(struct CGPoint)arg1;
- (void)setRangedSelectionInitialExtentToCurrentSelectionEnd;
- (void)setRangedSelectionInitialExtentToCurrentSelectionStart;
- (void)clearRangedSelectionInitialExtent;
- (void)setRangedSelectionBaseToCurrentSelectionEnd;
- (void)setRangedSelectionBaseToCurrentSelectionStart;
- (void)setRangedSelectionBaseToCurrentSelection;
- (id)webVisiblePositionForPoint:(struct CGPoint)arg1;
- (id)wordAtPoint:(struct CGPoint)arg1;
- (id)selectionRects;
- (id)selectionRectsForRange:(id)arg1;
- (id)selectionRectsForCoreRange:(struct Range *)arg1;
- (void)extendSelection:(BOOL)arg1;
- (void)collapseSelection;
- (struct CGRect)closestCaretRectInMarkedTextRangeForPoint:(struct CGPoint)arg1;
- (struct CGRect)caretRectForPosition:(id)arg1;
- (BOOL)hasSelection;
- (int)selectionState;
- (void)clearSelection;
- (void)setIsSingleLine:(BOOL)arg1;
- (BOOL)isSingleLine;
- (struct VisiblePosition)closestWordBoundary:(struct VisiblePosition)arg1;
- (struct VisiblePosition)visiblePositionForPoint:(struct CGPoint)arg1;
- (struct Frame *)coreFrame;

@end

__attribute__((visibility("hidden")))
@interface WebFramePolicyListener : NSObject <WebPolicyDecisionListener, WebFormSubmissionListener>
{
    struct Frame *m_frame;
}

+ (void)initialize;
- (void)continue;
- (void)use;
- (void)download;
- (void)ignore;
- (void)receivedPolicyDecision:(int)arg1;
- (void)finalize;
- (void)dealloc;
- (void)invalidate;
- (id)initWithWebCoreFrame:(struct Frame *)arg1;

@end

__attribute__((visibility("hidden")))
@interface WebFrameViewPrivate : NSObject
{
    WebFrame *webFrame;
    WAKScrollView *frameScrollView;
    BOOL includedInWebKitStatistics;
}

- (void)dealloc;

@end

@interface WebFrameView : WAKView <WebCoreFrameView>
{
    WebFrameViewPrivate *_private;
}

+ (Class)_viewClassForMIMEType:(id)arg1 allowingPlugins:(BOOL)arg2;
+ (BOOL)_canShowMIMETypeAsHTML:(id)arg1;
+ (id)_viewTypesAllowImageTypeOmission:(BOOL)arg1;
- (void)printDocumentView;
- (BOOL)documentViewShouldHandlePrint;
- (id)_webcore_effectiveFirstResponder;
- (void)keyDown:(id)arg1;
- (void)mouseUp:(id)arg1;
- (void)mouseDown:(id)arg1;
- (void)_forwardMouseEvent:(id)arg1;
- (BOOL)_firstResponderIsFormControl;
- (void)scrollLineDown:(id)arg1;
- (void)scrollLineUp:(id)arg1;
- (void)scrollPageDown:(id)arg1;
- (void)scrollPageUp:(id)arg1;
- (BOOL)_scrollLineHorizontally:(BOOL)arg1;
- (BOOL)_scrollLineVertically:(BOOL)arg1;
- (BOOL)_pageInBlockProgressionDirection:(BOOL)arg1;
- (BOOL)_pageHorizontally:(BOOL)arg1;
- (BOOL)_pageVertically:(BOOL)arg1;
- (float)_horizontalPageScrollDistance;
- (float)_horizontalKeyboardScrollDistance;
- (BOOL)_scrollHorizontallyBy:(float)arg1;
- (BOOL)_scrollVerticallyBy:(float)arg1;
- (void)_goForward;
- (void)_goBack;
- (void)scrollToEndOfDocument:(id)arg1;
- (void)scrollToBeginningOfDocument:(id)arg1;
- (BOOL)_scrollToEndOfDocument;
- (BOOL)_scrollToBeginningOfDocument;
- (BOOL)_isFlippedDocument;
- (BOOL)_isVerticalDocument;
- (BOOL)_scrollOverflowInDirection:(int)arg1 granularity:(int)arg2;
- (void)viewDidMoveToWindow;
- (void)setFrameSize:(struct CGSize)arg1;
- (struct CGRect)visibleRect;
- (void)drawRect:(struct CGRect)arg1;
- (BOOL)isOpaque;
- (void)setNextKeyView:(id)arg1;
- (BOOL)becomeFirstResponder;
- (BOOL)acceptsFirstResponder;
- (id)documentView;
- (BOOL)allowsScrolling;
- (void)setAllowsScrolling:(BOOL)arg1;
- (id)webFrame;
- (BOOL)scrollView:(id)arg1 shouldScrollToPoint:(struct CGPoint)arg2;
- (void)finalize;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;
- (struct Frame *)_web_frame;
- (float)_verticalKeyboardScrollDistance;
- (void)_frameSizeChanged;
- (void)_install;
- (Class)_viewClassForMIMEType:(id)arg1;
- (float)_verticalPageScrollDistance;
- (id)_scrollView;
- (void)_setWebFrame:(id)arg1;
- (id)_makeDocumentViewForDataSource:(id)arg1;
- (void)_setDocumentView:(id)arg1;
- (id)_webView;
- (Class)_customScrollViewClass;
- (id)_contentView;
- (id)_largestChildWithScrollBars;
- (BOOL)_hasScrollBars;
- (id)_largestScrollableChild;
- (BOOL)_isScrollable;
- (float)_area;
- (void)frameSizeChanged;

@end

__attribute__((visibility("hidden")))
@interface WebGeolocation : NSObject
{
    WebGeolocationPrivate *_private;
}

- (void)dealloc;
- (void)setIsAllowed:(BOOL)arg1;
- (id)_initWithWebCoreGeolocation:(struct Geolocation *)arg1;

@end

__attribute__((visibility("hidden")))
@interface WebGeolocationPolicyListener : NSObject <WebAllowDenyPolicyListener>
{
    struct RefPtr<WebCore::Geolocation> _geolocation;
    id _denyCallback;
}

@property(copy, nonatomic) id denyCallback; // @synthesize denyCallback=_denyCallback;
- (id).cxx_construct;
- (void).cxx_destruct;
- (BOOL)shouldClearCache;
- (void)denyOnlyThisRequest;
- (void)deny;
- (void)allow;
- (id)initWithGeolocation:(struct Geolocation *)arg1;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface WebGeolocationProviderInitializationListener : NSObject <WebGeolocationProviderInitializationListener>
{
    struct RefPtr<WebCore::Geolocation> m_geolocation;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)initializationDeniedWebView:(id)arg1 provider:(id)arg2;
- (void)initializationAllowedWebView:(id)arg1 provider:(id)arg2;
- (id)initWithGeolocation:(struct Geolocation *)arg1;

@end

__attribute__((visibility("hidden")))
@interface GeolocationCoreLocationDelegate : NSObject <CLLocationManagerDelegate>
{
    double m_accuracy;
    id <GeolocationUpdateListener> m_positionListener;
    CLLocationManager *m_locationManager;
    BOOL _isWaitingForAuthorization;
    int _lastAuthorizationStatus;
}

@property(nonatomic) int lastAuthorizationStatus; // @synthesize lastAuthorizationStatus=_lastAuthorizationStatus;
@property(nonatomic) BOOL isWaitingForAuthorization; // @synthesize isWaitingForAuthorization=_isWaitingForAuthorization;
- (void)setEnableHighAccuracy:(BOOL)arg1;
- (void)locationManager:(id)arg1 didFailWithError:(id)arg2;
- (void)locationManager:(id)arg1 didUpdateLocations:(id)arg2;
- (void)sendLocation:(id)arg1;
- (void)locationManager:(id)arg1 didChangeAuthorizationStatus:(int)arg2;
- (void)stop;
- (void)start;
- (BOOL)handleExternalAuthorizationStatusChange:(int)arg1;
- (void)sendGeolocationDelegateUnableToStart;
- (void)sendGeolocationDelegateStarted;
- (void)sendError:(id)arg1;
- (void)dealloc;
- (id)initWithListener:(id)arg1;
- (void)createLocationManager;

@end

@interface WebGeolocationManager : NSObject
{
    WebGeolocationManagerPrivate *_private;
}

+ (id)sharedGeolocationManager;
- (void)resume;
- (void)suspend;

@end

__attribute__((visibility("hidden")))
@interface WebGeolocationPositionInternal : NSObject
{
    struct RefPtr<WebCore::GeolocationPosition> _position;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (id)initWithCoreGeolocationPosition:(PassRefPtr_1f71bc30)arg1;

@end

@interface WebGeolocationPosition : NSObject
{
    WebGeolocationPositionInternal *_internal;
}

- (void)dealloc;
- (id)initWithGeolocationPosition:(PassRefPtr_1f71bc30)arg1;
- (id)initWithTimestamp:(double)arg1 latitude:(double)arg2 longitude:(double)arg3 accuracy:(double)arg4;

@end

__attribute__((visibility("hidden")))
@interface WebGeolocationProviderIOS : NSObject <WebGeolocationProvider, GeolocationUpdateListener>
{
    HashSet_2803207d _warmUpWebViews;
    HashMap_842a3805 _webViewsWaitingForCoreLocationStart;
    BOOL _shouldResetOnResume;
    BOOL _isSuspended;
    NSTimer *_sendLastPositionAsynchronouslyTimer;
    HashSet_2803207d _trackedWebViews;
    GeolocationCoreLocationDelegate *_geolocationCoreLocationDelegate;
    WebGeolocationPosition *_lastPosition;
    HashSet_2803207d _registeredWebViews;
    HashSet_2803207d _pendingInitialPositionWebView;
    BOOL _enableHighAccuracy;
}

+ (id)sharedGeolocationProvider;
@property(nonatomic) BOOL enableHighAccuracy; // @synthesize enableHighAccuracy=_enableHighAccuracy;
@property(readonly, nonatomic) HashSet_2803207d pendingInitialPositionWebView; // @synthesize pendingInitialPositionWebView=_pendingInitialPositionWebView;
@property(readonly, nonatomic) HashSet_2803207d registeredWebViews; // @synthesize registeredWebViews=_registeredWebViews;
@property(retain, nonatomic) WebGeolocationPosition *lastPosition; // @synthesize lastPosition=_lastPosition;
@property(retain, nonatomic) GeolocationCoreLocationDelegate *geolocationCoreLocationDelegate; // @synthesize geolocationCoreLocationDelegate=_geolocationCoreLocationDelegate;
@property(readonly, nonatomic) HashSet_2803207d trackedWebViews; // @synthesize trackedWebViews=_trackedWebViews;
@property(retain, nonatomic) NSTimer *sendLastPositionAsynchronouslyTimer; // @synthesize sendLastPositionAsynchronouslyTimer=_sendLastPositionAsynchronouslyTimer;
@property(nonatomic) BOOL isSuspended; // @synthesize isSuspended=_isSuspended;
@property(nonatomic) BOOL shouldResetOnResume; // @synthesize shouldResetOnResume=_shouldResetOnResume;
@property(readonly, nonatomic) HashMap_842a3805 webViewsWaitingForCoreLocationStart; // @synthesize webViewsWaitingForCoreLocationStart=_webViewsWaitingForCoreLocationStart;
@property(readonly, nonatomic) HashSet_2803207d warmUpWebViews; // @synthesize warmUpWebViews=_warmUpWebViews;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)resetGeolocation;
- (void)errorOccurred:(id)arg1;
- (void)handlePendingInitialPosition:(id)arg1;
- (void)positionChanged:(id)arg1;
- (void)geolocationDelegateUnableToStart;
- (void)geolocationDelegateStarted;
- (void)stopTrackingWebView:(id)arg1;
- (void)resume;
- (void)suspend;
- (void)cancelWarmUpForWebView:(id)arg1;
- (void)initializeGeolocationForWebView:(id)arg1 listener:(id)arg2;
- (void)unregisterWebView:(id)arg1;
- (void)registerWebView:(id)arg1;
- (void)stopCoreLocationDelegateIfNeeded;
- (void)startCoreLocationDelegate;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface WebHistoryPrivate : NSObject
{
    NSMutableDictionary *_entriesByURL;
    struct HashMap<long long, WTF::RetainPtr<NSMutableArray>, WTF::IntHash<unsigned long long>, WTF::HashTraits<long long>, WTF::HashTraits<WTF::RetainPtr<NSMutableArray>>> *_entriesByDate;
    NSMutableArray *_orderedLastVisitedDays;
    BOOL itemLimitSet;
    int itemLimit;
    BOOL ageInDaysLimitSet;
    int ageInDaysLimit;
}

+ (void)initialize;
- (void)addVisitedLinksToPageGroup:(struct PageGroup *)arg1;
- (BOOL)saveToURL:(id)arg1 error:(id *)arg2;
- (id)data;
- (BOOL)loadFromURL:(id)arg1 collectDiscardedItemsInto:(id)arg2 error:(id *)arg3;
- (BOOL)loadHistoryGutsFromURL:(id)arg1 savedItemsCount:(int *)arg2 collectDiscardedItemsInto:(id)arg3 error:(id *)arg4;
- (id)ageLimitDate;
- (int)historyItemLimit;
- (void)setHistoryItemLimit:(int)arg1;
- (int)historyAgeInDaysLimit;
- (void)setHistoryAgeInDaysLimit:(int)arg1;
- (id)allItems;
- (id)itemForURL:(id)arg1;
- (BOOL)containsURL:(id)arg1;
- (id)itemForURLString:(id)arg1;
- (id)orderedItemsLastVisitedOnDay:(id)arg1;
- (id)orderedLastVisitedDays;
- (void)addItems:(id)arg1;
- (BOOL)removeAllItems;
- (BOOL)removeItems:(id)arg1;
- (BOOL)removeItem:(id)arg1;
- (void)rebuildHistoryByDayIfNeeded:(id)arg1;
- (BOOL)addItem:(id)arg1 discardDuplicate:(BOOL)arg2;
- (id)visitedURL:(id)arg1 withTitle:(id)arg2 increaseVisitCount:(BOOL)arg3;
- (void)addItemToDateCaches:(id)arg1;
- (BOOL)removeItemForURLString:(id)arg1;
- (BOOL)removeItemFromDateCaches:(id)arg1;
- (void)insertItem:(id)arg1 forDateKey:(long long)arg2;
- (BOOL)findKey:(long long *)arg1 forDay:(double)arg2;
- (void)finalize;
- (void)dealloc;
- (id)init;

@end

@interface WebHistory : NSObject
{
    WebHistoryPrivate *_historyPrivate;
}

+ (void)setOptionalSharedHistory:(id)arg1;
+ (id)optionalSharedHistory;
+ (void)_removeAllVisitedLinks;
+ (void)_setVisitedLinkTrackingEnabled:(BOOL)arg1;
- (int)historyAgeInDaysLimit;
- (void)setHistoryAgeInDaysLimit:(int)arg1;
- (int)historyItemLimit;
- (void)setHistoryItemLimit:(int)arg1;
- (BOOL)saveToURL:(id)arg1 error:(id *)arg2;
- (BOOL)loadFromURL:(id)arg1 error:(id *)arg2;
- (id)itemForURL:(id)arg1;
- (BOOL)containsURL:(id)arg1;
- (id)orderedItemsLastVisitedOnDay:(id)arg1;
- (id)orderedLastVisitedDays;
- (void)addItems:(id)arg1;
- (void)removeAllItems;
- (void)removeItems:(id)arg1;
- (void)_sendNotification:(id)arg1 entries:(id)arg2;
- (void)finalize;
- (void)dealloc;
- (id)init;
- (void)timeZoneChanged:(id)arg1;
- (id)_data;
- (id)allItems;
- (id)_itemForURLString:(id)arg1;
- (void)_addVisitedLinksToPageGroup:(struct PageGroup *)arg1;
- (void)_visitedURL:(id)arg1 withTitle:(id)arg2 method:(id)arg3 wasFailure:(BOOL)arg4 increaseVisitCount:(BOOL)arg5;

@end

@interface WebHistoryItem : NSObject <NSCopying>
{
    WebHistoryItemPrivate *_private;
}

+ (void)initialize;
+ (void)initWindowWatcherIfNecessary;
+ (id)entryWithURL:(id)arg1;
- (id)description;
- (BOOL)isEqual:(id)arg1;
- (unsigned int)hash;
- (double)lastVisitedTimeInterval;
- (id)alternateTitle;
- (void)setAlternateTitle:(id)arg1;
- (id)title;
- (id)originalURLString;
- (id)URLString;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)finalize;
- (void)dealloc;
- (id)initWithURLString:(id)arg1 title:(id)arg2 lastVisitedTimeInterval:(double)arg3;
- (id)init;
- (void)_recordInitialVisit;
- (void)_visitedWithTitle:(id)arg1 increaseVisitCount:(BOOL)arg2;
- (struct CGPoint)scrollPoint;
- (id)initFromDictionaryRepresentation:(id)arg1;
- (void)_mergeAutoCompleteHints:(id)arg1;
- (void)setViewState:(id)arg1;
- (void)setVisitCount:(int)arg1;
- (void)setTitle:(id)arg1;
- (id)initWithWebCoreHistoryItem:(PassRefPtr_b1663a8c)arg1;
- (id)initWithURLString:(id)arg1 title:(id)arg2 displayTitle:(id)arg3 lastVisitedTimeInterval:(double)arg4;
- (id)initWithURL:(id)arg1 target:(id)arg2 parent:(id)arg3 title:(id)arg4;
- (void)_setScrollPoint:(struct CGPoint)arg1;
- (struct CGPoint)_scrollPoint;
- (void)_setViewportArguments:(id)arg1;
- (id)_viewportArguments;
- (BOOL)_scaleIsInitial;
- (float)_scale;
- (void)_setScale:(float)arg1 isInitial:(BOOL)arg2;
- (unsigned long)_getWeeklyVisitCounts:(const int **)arg1;
- (unsigned long)_getDailyVisitCounts:(const int **)arg1;
- (id)_redirectURLs;
- (BOOL)_lastVisitWasHTTPNonGet;
- (void)_setLastVisitWasFailure:(BOOL)arg1;
- (BOOL)lastVisitWasFailure;
- (void)_setTransientProperty:(id)arg1 forKey:(id)arg2;
- (id)_transientPropertyForKey:(id)arg1;
- (id)targetItem;
- (id)_lastVisitedDate;
- (void)_setLastVisitedTimeInterval:(double)arg1;
- (id)URL;
- (void)setAlwaysAttemptToUsePageCache:(BOOL)arg1;
- (id)children;
- (void)setRSSFeedReferrer:(id)arg1;
- (id)RSSFeedReferrer;
- (int)visitCount;
- (BOOL)isTargetItem;
- (id)target;
- (id)dictionaryRepresentationIncludingChildren:(BOOL)arg1;
- (id)dictionaryRepresentation;
- (id)initWithURL:(id)arg1 title:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface WebHTMLRepresentationPrivate : NSObject
{
    WebDataSource *dataSource;
    BOOL hasSentResponseToPlugin;
    BOOL includedInWebKitStatistics;
    id <WebPluginManualLoader> manualLoader;
    WAKView *pluginView;
}

@end

@interface WebHTMLRepresentation : NSObject <WebDocumentRepresentation, WebDocumentDOM>
{
    WebHTMLRepresentationPrivate *_private;
}

+ (id)unsupportedTextMIMETypes;
+ (id)supportedImageMIMETypes;
+ (id)supportedNonImageMIMETypes;
+ (id)supportedMIMETypes;
- (id)matchLabels:(id)arg1 againstElement:(id)arg2;
- (id)searchForLabels:(id)arg1 beforeElement:(id)arg2 resultDistance:(unsigned int *)arg3 resultIsInCellAbove:(char *)arg4;
- (id)searchForLabels:(id)arg1 beforeElement:(id)arg2;
- (id)controlsInForm:(id)arg1;
- (id)currentForm;
- (id)formForElement:(id)arg1;
- (BOOL)elementIsPassword:(id)arg1;
- (BOOL)elementDoesAutoComplete:(id)arg1;
- (id)elementWithName:(id)arg1 inForm:(id)arg2;
- (id)DOMDocument;
- (id)title;
- (id)documentSource;
- (BOOL)canSaveAsWebArchive;
- (BOOL)canProvideDocumentSource;
- (void)finishedLoadingWithDataSource:(id)arg1;
- (void)receivedError:(id)arg1 withDataSource:(id)arg2;
- (void)receivedData:(id)arg1 withDataSource:(id)arg2;
- (BOOL)_isDisplayingWebArchive;
- (void)setDataSource:(id)arg1;
- (void)_redirectDataToManualLoader:(id)arg1 forPluginView:(id)arg2;
- (void)finalize;
- (void)dealloc;
- (id)init;

@end

@interface WebCoreScrollView : WAKScrollView
{
}

@end

__attribute__((visibility("hidden")))
@interface WebHTMLViewPrivate : NSObject
{
    BOOL closed;
    BOOL ignoringMouseDraggedEvents;
    BOOL printing;
    BOOL paginateScreenContent;
    WAKView *layerHostingView;
    BOOL drawingIntoLayer;
    WebEvent *mouseDownEvent;
    BOOL handlingMouseDownEvent;
    WebEvent *keyDownEvent;
    BOOL exposeInputContext;
    struct CGPoint lastScrollPosition;
    BOOL inScrollPositionChanged;
    WebPluginController *pluginController;
    NSString *toolTip;
    id trackingRectOwner;
    void *trackingRectUserData;
    NSTimer *autoscrollTimer;
    WebEvent *autoscrollTriggerEvent;
    NSArray *pageRects;
    NSMutableDictionary *highlighters;
    BOOL transparentBackground;
    struct WebHTMLViewInterpretKeyEventsParameters *interpretKeyEventsParameters;
    WebDataSource *dataSource;
    SEL selectorForDoCommandBySelector;
}

+ (void)initialize;
- (id).cxx_construct;
- (void)clear;
- (void)finalize;
- (void)dealloc;

@end

@interface WebHTMLView : WAKView <WebDocumentSelection, WebDocumentIncrementalSearching, WebDocumentElement, WebMultipleTextMatches, WebDocumentOptionsSearching, WebDocumentView, WebDocumentSearching>
{
    WebHTMLViewPrivate *_private;
}

+ (void)initialize;
+ (id)unsupportedTextMIMETypes;
+ (id)supportedNonImageMIMETypes;
+ (id)supportedImageMIMETypes;
+ (id)supportedMIMETypes;
- (void)_windowChangedKeyState;
- (void)_updateControlTints;
- (BOOL)_wantsKeyDownForEvent:(id)arg1;
- (void)makeBaseWritingDirectionNatural:(id)arg1;
- (void)capitalizeWord:(id)arg1;
- (void)lowercaseWord:(id)arg1;
- (void)uppercaseWord:(id)arg1;
- (void)_changeWordCaseWithSelector:(SEL)arg1;
- (void)_applyStyleToSelection:(id)arg1 withUndoAction:(int)arg2;
- (id)_emptyStyle;
- (void)centerSelectionInVisibleArea:(id)arg1;
- (id)_accessibilityParentForSubview:(id)arg1;
- (id)accessibilityHitTest:(struct CGPoint)arg1;
- (id)accessibilityFocusedUIElement;
- (void)keyUp:(id)arg1;
- (void)keyDown:(id)arg1;
- (void)_setPrinting:(BOOL)arg1 minimumPageLogicalWidth:(float)arg2 logicalHeight:(float)arg3 originalPageWidth:(float)arg4 originalPageHeight:(float)arg5 maximumShrinkRatio:(float)arg6 adjustViewSize:(BOOL)arg7 paginateScreenContent:(BOOL)arg8;
- (void)dataSourceUpdated:(id)arg1;
- (void)setDataSource:(id)arg1;
- (BOOL)resignFirstResponder;
- (BOOL)becomeFirstResponder;
- (void)mouseUp:(id)arg1;
- (void)touch:(id)arg1;
- (void)mouseDown:(id)arg1;
- (BOOL)_isSelectionEvent:(id)arg1;
- (void)scrollWheel:(id)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (void)drawSingleRect:(struct CGRect)arg1;
- (void)setNeedsToApplyStyles:(BOOL)arg1;
- (void)setNeedsLayout:(BOOL)arg1;
- (void)setNeedsDisplayInRect:(struct CGRect)arg1;
- (BOOL)isOpaque;
- (void)clearFocus;
- (BOOL)searchFor:(id)arg1 direction:(BOOL)arg2 caseSensitive:(BOOL)arg3 wrap:(BOOL)arg4;
- (void)layout;
- (void)layoutToMinimumPageWidth:(float)arg1 height:(float)arg2 originalPageWidth:(float)arg3 originalPageHeight:(float)arg4 maximumShrinkRatio:(float)arg5 adjustingViewSize:(BOOL)arg6;
- (void)reapplyStyles;
- (void)willRemoveSubview:(id)arg1;
- (void)addSubview:(id)arg1;
- (void)viewDidMoveToHostWindow;
- (void)viewWillMoveToHostWindow:(id)arg1;
- (void)_web_makePluginSubviewsPerformSelector:(SEL)arg1 withObject:(id)arg2;
- (void)viewDidMoveToWindow;
- (void)viewWillMoveToWindow:(id)arg1;
- (BOOL)maintainsInactiveSelection;
- (BOOL)acceptsFirstResponder;
- (void)jumpToSelection:(id)arg1;
- (void)toggleUnderline:(id)arg1;
- (void)toggleItalic:(id)arg1;
- (void)toggleBold:(id)arg1;
- (void)clearText:(id)arg1;
- (void)yankAndSelect:(id)arg1;
- (void)yank:(id)arg1;
- (void)unscript:(id)arg1;
- (void)underline:(id)arg1;
- (void)transpose:(id)arg1;
- (void)swapWithMark:(id)arg1;
- (void)superscript:(id)arg1;
- (void)subscript:(id)arg1;
- (void)setMark:(id)arg1;
- (void)selectWord:(id)arg1;
- (void)selectToMark:(id)arg1;
- (void)selectSentence:(id)arg1;
- (void)selectParagraph:(id)arg1;
- (void)selectLine:(id)arg1;
- (void)selectAll:(id)arg1;
- (void)pasteAsPlainText:(id)arg1;
- (void)pageUpAndModifySelection:(id)arg1;
- (void)pageUp:(id)arg1;
- (void)pageDownAndModifySelection:(id)arg1;
- (void)pageDown:(id)arg1;
- (void)outdent:(id)arg1;
- (void)moveWordRightAndModifySelection:(id)arg1;
- (void)moveWordRight:(id)arg1;
- (void)moveWordLeftAndModifySelection:(id)arg1;
- (void)moveWordLeft:(id)arg1;
- (void)moveWordForwardAndModifySelection:(id)arg1;
- (void)moveWordForward:(id)arg1;
- (void)moveWordBackwardAndModifySelection:(id)arg1;
- (void)moveWordBackward:(id)arg1;
- (void)moveUpAndModifySelection:(id)arg1;
- (void)moveUp:(id)arg1;
- (void)moveToRightEndOfLineAndModifySelection:(id)arg1;
- (void)moveToRightEndOfLine:(id)arg1;
- (void)moveToLeftEndOfLineAndModifySelection:(id)arg1;
- (void)moveToLeftEndOfLine:(id)arg1;
- (void)moveToEndOfSentenceAndModifySelection:(id)arg1;
- (void)moveToEndOfSentence:(id)arg1;
- (void)moveToEndOfParagraphAndModifySelection:(id)arg1;
- (void)moveToEndOfParagraph:(id)arg1;
- (void)moveToEndOfLineAndModifySelection:(id)arg1;
- (void)moveToEndOfLine:(id)arg1;
- (void)moveToEndOfDocumentAndModifySelection:(id)arg1;
- (void)moveToEndOfDocument:(id)arg1;
- (void)moveToBeginningOfSentenceAndModifySelection:(id)arg1;
- (void)moveToBeginningOfSentence:(id)arg1;
- (void)moveToBeginningOfParagraphAndModifySelection:(id)arg1;
- (void)moveToBeginningOfParagraph:(id)arg1;
- (void)moveToBeginningOfLineAndModifySelection:(id)arg1;
- (void)moveToBeginningOfLine:(id)arg1;
- (void)moveToBeginningOfDocumentAndModifySelection:(id)arg1;
- (void)moveToBeginningOfDocument:(id)arg1;
- (void)moveRightAndModifySelection:(id)arg1;
- (void)moveRight:(id)arg1;
- (void)moveParagraphForwardAndModifySelection:(id)arg1;
- (void)moveParagraphBackwardAndModifySelection:(id)arg1;
- (void)moveLeftAndModifySelection:(id)arg1;
- (void)moveLeft:(id)arg1;
- (void)moveForwardAndModifySelection:(id)arg1;
- (void)moveForward:(id)arg1;
- (void)moveDownAndModifySelection:(id)arg1;
- (void)moveDown:(id)arg1;
- (void)moveBackwardAndModifySelection:(id)arg1;
- (void)moveBackward:(id)arg1;
- (void)makeTextWritingDirectionRightToLeft:(id)arg1;
- (void)makeTextWritingDirectionNatural:(id)arg1;
- (void)makeTextWritingDirectionLeftToRight:(id)arg1;
- (void)insertTabIgnoringFieldEditor:(id)arg1;
- (void)insertTab:(id)arg1;
- (void)insertParagraphSeparator:(id)arg1;
- (void)insertNewlineIgnoringFieldEditor:(id)arg1;
- (void)insertNewline:(id)arg1;
- (void)insertLineBreak:(id)arg1;
- (void)insertBacktab:(id)arg1;
- (void)indent:(id)arg1;
- (void)ignoreSpelling:(id)arg1;
- (void)deleteWordForward:(id)arg1;
- (void)deleteWordBackward:(id)arg1;
- (void)deleteToMark:(id)arg1;
- (void)deleteToEndOfParagraph:(id)arg1;
- (void)deleteToEndOfLine:(id)arg1;
- (void)deleteToBeginningOfParagraph:(id)arg1;
- (void)deleteToBeginningOfLine:(id)arg1;
- (void)deleteForward:(id)arg1;
- (void)deleteBackwardByDecomposingPreviousCharacter:(id)arg1;
- (void)deleteBackward:(id)arg1;
- (void)delete:(id)arg1;
- (void)paste:(id)arg1;
- (void)cut:(id)arg1;
- (void)copy:(id)arg1;
- (void)alignRight:(id)arg1;
- (void)alignLeft:(id)arg1;
- (void)alignJustified:(id)arg1;
- (void)alignCenter:(id)arg1;
- (void)executeCoreCommandByName:(const char *)arg1;
- (void)executeCoreCommandBySelector:(SEL)arg1;
- (struct Command)coreCommandByName:(const char *)arg1;
- (struct Command)coreCommandBySelector:(SEL)arg1;
- (BOOL)callDelegateDoCommandBySelectorIfNeeded:(SEL)arg1;
- (void)finalize;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;
- (BOOL)_isTopHTMLView;
- (id)_topHTMLView;
- (void)_setMouseDownEvent:(id)arg1;
- (BOOL)_shouldDeleteRange:(id)arg1;
- (id)_selectedRange;
- (BOOL)_shouldReplaceSelectionWithText:(id)arg1 givenAction:(int)arg2;
- (BOOL)_shouldInsertText:(id)arg1 replacingDOMRange:(id)arg2 givenAction:(int)arg3;
- (BOOL)_shouldInsertFragment:(id)arg1 replacingDOMRange:(id)arg2 givenAction:(int)arg3;
- (id)_frameView;
- (id)_webView;
- (id)_dataSource;
- (id)_documentRange;
- (id)accessibilityRootElement;
- (float)_adjustedBottomOfPageWithTop:(float)arg1 bottom:(float)arg2 limit:(float)arg3;
- (void)_endScreenPaginationMode;
- (BOOL)_beginScreenPaginationModeWithPageSize:(struct CGSize)arg1 shrinkToFit:(BOOL)arg2;
- (BOOL)_isInScreenPaginationMode;
- (void)_endPrintMode;
- (BOOL)_beginPrintModeWithPageWidth:(float)arg1 height:(float)arg2 shrinkToFit:(BOOL)arg3;
- (BOOL)_beginPrintModeWithMinimumPageWidth:(float)arg1 height:(float)arg2 maximumPageWidth:(float)arg3;
- (BOOL)_isInPrintMode;
- (id)_compositingLayersHostingView;
- (BOOL)_isUsingAcceleratedCompositing;
- (BOOL)_hasHTMLDocument;
- (void)close;
- (void)_removeHighlighterOfType:(id)arg1;
- (void)_setHighlighter:(id)arg1 ofType:(id)arg2;
- (void)_decreaseSelectionListLevel;
- (id)_increaseSelectionListLevelUnordered;
- (id)_increaseSelectionListLevelOrdered;
- (id)_increaseSelectionListLevel;
- (BOOL)_canDecreaseSelectionListLevel;
- (BOOL)_canIncreaseSelectionListLevel;
- (id)_insertUnorderedList;
- (id)_insertOrderedList;
- (void)_setTransparentBackground:(BOOL)arg1;
- (BOOL)_transparentBackground;
- (BOOL)_isEditable;
- (BOOL)_hasInsertionPoint;
- (BOOL)_hasSelectionOrInsertionPoint;
- (BOOL)_hasSelection;
- (BOOL)_canAlterCurrentSelection;
- (BOOL)_canEditRichly;
- (BOOL)_canEdit;
- (void)_autoscroll;
- (void)_stopAutoscrollTimer;
- (struct CGRect)_selectionRect;
- (void)_startAutoscrollTimer:(id)arg1;
- (void)setScale:(float)arg1;
- (void)layoutIfNeeded;
- (id)_pluginController;
- (void)_setToolTip:(id)arg1;
- (void)_clearLastHitViewIfSelf;
- (id)hitTest:(struct CGPoint)arg1;
- (BOOL)_insideAnotherHTMLView;
- (void)viewWillDraw;
- (void)_restoreSubviews;
- (void)_setAsideSubviews;
- (void)_frameOrBoundsChanged;
- (void)mouseMoved:(id)arg1;
- (BOOL)_web_isDrawingIntoLayer;
- (void)drawLayer:(id)arg1 inContext:(struct CGContext *)arg2;
- (void)detachRootLayer;
- (void)attachRootLayer:(id)arg1;
- (BOOL)_needsLayout;
- (void)_destroyAllWebPlugins;
- (void)_web_updateLayoutAndStyleIfNeededRecursive;
- (void)_layoutIfNeeded;
- (BOOL)_handleEditingKeyEvent:(struct KeyboardEvent *)arg1;
- (void)_executeSavedKeypressCommands;
- (void)closeIfNotCurrentView;
- (id)_frame;
- (id)_highlighterForType:(id)arg1;
- (BOOL)_canSmartCopyOrDelete;
- (void)_selectionChanged;
- (void)_updateSelectionForInputManager;
- (void)insertText:(id)arg1;
- (void)doCommandBySelector:(SEL)arg1;
- (void)markedTextUpdate:(id)arg1;
- (void)setMarkedText:(id)arg1 selectedRange:(struct _NSRange)arg2;
- (void)unmarkText;
- (BOOL)hasMarkedText;
- (int)conversationIdentifier;
- (struct _NSRange)markedRange;
- (struct _NSRange)selectedRange;
- (struct CGRect)firstRectForCharacterRange:(struct _NSRange)arg1;
- (unsigned int)characterIndexForPoint:(struct CGPoint)arg1;
- (BOOL)searchFor:(id)arg1 direction:(BOOL)arg2 caseSensitive:(BOOL)arg3 wrap:(BOOL)arg4 startInSelection:(BOOL)arg5;
- (BOOL)supportsTextEncoding;
- (id)selectedString;
- (id)string;
- (void)deselectAll;
- (void)selectAll;
- (struct CGRect)selectionImageRect;
- (struct CGImage *)selectionImageForcingBlackText:(BOOL)arg1;
- (id)selectionView;
- (id)selectionTextRects;
- (struct CGRect)selectionRect;
- (BOOL)_findString:(id)arg1 options:(unsigned int)arg2;
- (id)rectsForTextMatches;
- (void)unmarkAllTextMatches;
- (BOOL)markedTextMatchesAreHighlighted;
- (void)setMarkedTextMatchesAreHighlighted:(BOOL)arg1;
- (unsigned int)countMatchesForText:(id)arg1 inDOMRange:(id)arg2 options:(unsigned int)arg3 limit:(unsigned int)arg4 markMatches:(BOOL)arg5;
- (id)elementAtPoint:(struct CGPoint)arg1 allowShadowContent:(BOOL)arg2;
- (id)elementAtPoint:(struct CGPoint)arg1;

@end

__attribute__((visibility("hidden")))
@interface WebInspector : NSObject
{
    WebView *_webView;
    WebInspectorFrontend *_frontend;
}

+ (id)webInspector;
- (void)releaseFrontend;
- (void)setFrontend:(id)arg1;
- (void)evaluateInFrontend:(id)arg1 callId:(long)arg2 script:(id)arg3;
- (void)detach:(id)arg1;
- (void)attach:(id)arg1;
- (void)close:(id)arg1;
- (void)setTimelineProfilingEnabled:(BOOL)arg1;
- (BOOL)isTimelineProfilingEnabled;
- (void)setJavaScriptProfilingEnabled:(BOOL)arg1;
- (BOOL)isJavaScriptProfilingEnabled;
- (void)stopProfilingJavaScript:(id)arg1;
- (void)startProfilingJavaScript:(id)arg1;
- (void)toggleProfilingJavaScript:(id)arg1;
- (BOOL)isProfilingJavaScript;
- (void)stopDebuggingJavaScript:(id)arg1;
- (void)startDebuggingJavaScript:(id)arg1;
- (void)toggleDebuggingJavaScript:(id)arg1;
- (BOOL)isDebuggingJavaScript;
- (void)showTimeline:(id)arg1;
- (void)showConsole:(id)arg1;
- (void)show:(id)arg1;
- (void)showWindow;
- (void)webViewClosed;
- (void)dealloc;
- (id)initWithWebView:(id)arg1;
- (void)showWindow:(id)arg1;
- (void)setWebFrame:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface WebInspectorWindowController : NSObject
{
    WebView *_inspectedWebView;
    struct WebInspectorFrontendClient *_frontendClient;
    struct WebInspectorClient {
        void **;
        void **;
        id;
        struct RetainPtr<WebNodeHighlighter>;
        struct Page *;
        struct RetainPtr<WebInspectorWindowController> {
            struct WebInspectorWindowController *;
        };
        int;
        id;
        struct WebInspectorFrontendClient *;
    } *_inspectorClient;
    BOOL _destroyingInspectorView;
    WebView *_webView;
    NSString *_title;
}

@property(retain, nonatomic) NSString *title; // @synthesize title=_title;
@property(readonly, nonatomic) WebView *webView; // @synthesize webView=_webView;
- (void)destroyInspectorView:(_Bool)arg1;
- (WebInspectorClient_b612fe75 *)inspectorClient;
- (void)setInspectorClient:(WebInspectorClient_b612fe75 *)arg1;
- (void)setFrontendClient:(struct WebInspectorFrontendClient *)arg1;
- (void)dealloc;
- (id)initWithInspectedWebView:(id)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface WebInspectorClientRegistry : NSObject
{
    unsigned int _nextAvailablePageId;
    struct HashMap<unsigned int, WebInspectorClient *, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int>, WTF::HashTraits<WebInspectorClient *>> _pageClientMap;
    id <WebInspectorClientRegistryDelegate> _delegate;
}

+ (id)sharedRegistry;
@property(nonatomic) id <WebInspectorClientRegistryDelegate> delegate; // @synthesize delegate=_delegate;
- (id).cxx_construct;
- (void).cxx_destruct;
- (id)inspectableWebViews;
- (struct WebInspectorClient *)clientForPageId:(unsigned int)arg1;
- (void)unregisterClient:(struct WebInspectorClient *)arg1;
- (void)registerClient:(struct WebInspectorClient *)arg1;
- (unsigned int)_getNextAvailablePageId;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface WebInspectorFrontend : NSObject
{
    struct WebInspectorFrontendClient *m_frontendClient;
}

- (void)showConsole;
- (void)setTimelineProfilingEnabled:(BOOL)arg1;
- (BOOL)isTimelineProfilingEnabled;
- (void)stopProfilingJavaScript;
- (void)startProfilingJavaScript;
- (BOOL)isProfilingJavaScript;
- (void)setDebuggingEnabled:(BOOL)arg1;
- (BOOL)isDebuggingEnabled;
- (void)detach;
- (void)attach;
- (id)initWithFrontendClient:(struct WebInspectorFrontendClient *)arg1;

@end

__attribute__((visibility("hidden")))
@interface WebInspectorRemoteChannel : NSObject
{
    WebInspectorServerWebViewConnection *_remote;
    struct WebInspectorClient {
        void **;
        void **;
        id;
        struct RetainPtr<WebNodeHighlighter>;
        struct Page *;
        RetainPtr_d5c43307;
        int;
        id;
        struct WebInspectorFrontendClient *;
    } *_local;
}

+ (id)createChannelForPageId:(unsigned int)arg1 connection:(id)arg2;
- (void)sendMessageToBackend:(id)arg1;
- (void)sendMessageToFrontend:(id)arg1;
- (void)closeFromRemoteSide;
- (void)closeFromLocalSide;
- (id)initWithRemote:(id)arg1 local:(struct WebInspectorClient *)arg2;

@end

__attribute__((visibility("hidden")))
@interface WebInspectorServerWebViewConnection : NSObject
{
    WebInspectorRemoteChannel *_channel;
    WebInspectorServerWebViewConnectionController *_controller;
    NSString *_connectionIdentifier;
    NSString *_destination;
    NSNumber *_identifier;
}

- (void)receivedDidClose:(id)arg1;
- (void)receivedData:(id)arg1;
- (void)sendMessageToBackend:(id)arg1;
- (void)sendMessageToFrontend:(id)arg1;
- (void)clearChannel;
- (id)identifier;
- (id)connectionIdentifier;
- (void)dealloc;
- (BOOL)setupChannel;
- (id)initWithController:(id)arg1 connectionIdentifier:(id)arg2 destination:(id)arg3 identifier:(id)arg4;

@end

__attribute__((visibility("hidden")))
@interface WebInspectorServer : NSObject <WebInspectorXPCWrapperDelegate, WebInspectorClientRegistryDelegate>
{
    BOOL _isEnabled;
    int _notifyToken;
    WebInspectorXPCWrapper *_xpcConnection;
    WebInspectorServerWebViewConnectionController *_connectionController;
}

- (void)didUnregisterClient:(struct WebInspectorClient *)arg1;
- (void)didRegisterClient:(struct WebInspectorClient *)arg1;
- (void)xpcConnectionFailed:(id)arg1;
- (void)xpcConnection:(id)arg1 receivedMessage:(id)arg2 userInfo:(id)arg3;
- (void)pushListing;
- (void)setupXPCConnectionIfNeeded;
- (id)xpcConnection;
- (BOOL)isEnabled;
- (void)stop;
- (void)start;
- (void)dealloc;
- (id)init;

@end

@interface WebInspectorXPCWrapper : NSObject
{
    id <WebInspectorXPCWrapperDelegate> _delegate;
    NSString *_tag;
    NSObject<OS_xpc_object> *_connection;
    NSObject<OS_xpc_object> *_currentMessage;
}

@property(nonatomic) NSObject<OS_xpc_object> *currentMessage; // @synthesize currentMessage=_currentMessage;
@property(nonatomic) NSObject<OS_xpc_object> *connection; // @synthesize connection=_connection;
@property(copy, nonatomic) NSString *tag; // @synthesize tag=_tag;
@property(nonatomic) id <WebInspectorXPCWrapperDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) BOOL available;
- (void)barrierWithCompletionHandler:(id)arg1;
- (void)sendMessage:(id)arg1 userInfo:(id)arg2 replyHandler:(id)arg3;
- (void)sendMessage:(id)arg1 userInfo:(id)arg2;
- (void)_handleEvent:(id)arg1;
- (id)_deserializeMessage:(id)arg1;
- (void)dealloc;
- (void)close;
- (id)initWithConnection:(id)arg1;

@end

@interface WebKitStatistics : NSObject
{
}

+ (int)HTMLRepresentationCount;
+ (int)bridgeCount;
+ (int)viewCount;
+ (int)dataSourceCount;
+ (int)frameCount;
+ (int)webViewCount;

@end

__attribute__((visibility("hidden")))
@interface WebNavigationDataPrivate : NSObject
{
    NSString *url;
    NSString *title;
    NSURLRequest *originalRequest;
    NSURLResponse *response;
    BOOL hasSubstituteData;
    NSString *clientRedirectSource;
}

- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface WebNavigationData : NSObject
{
    WebNavigationDataPrivate *_private;
}

- (void)dealloc;
- (id)clientRedirectSource;
- (BOOL)hasSubstituteData;
- (id)response;
- (id)originalRequest;
- (id)title;
- (id)url;
- (id)initWithURLString:(id)arg1 title:(id)arg2 originalRequest:(id)arg3 response:(id)arg4 hasSubstituteData:(BOOL)arg5 clientRedirectSource:(id)arg6;

@end

__attribute__((visibility("hidden")))
@interface HighlightLayer : CALayer
{
    WebNodeHighlightView *_view;
    WebView *_webView;
}

- (id)actionForKey:(id)arg1;
- (void)layoutSublayers;
- (id)initWithHighlightView:(id)arg1 webView:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface WebNodeHighlight : NSObject
{
    WAKView *_targetView;
    HighlightLayer *_highlightLayer;
    WebNodeHighlightView *_highlightView;
    struct InspectorController *_inspectorController;
    id _delegate;
}

- (struct InspectorController *)inspectorController;
- (id)targetView;
- (void)setNeedsDisplay;
- (void)setDelegate:(id)arg1;
- (id)highlightView;
- (void)detach;
- (id)delegate;
- (void)attach;
- (void)dealloc;
- (id)initWithTargetView:(id)arg1 inspectorController:(struct InspectorController *)arg2;

@end

__attribute__((visibility("hidden")))
@interface WebNodeHighlighter : NSObject
{
    WebView *_inspectedWebView;
    WebNodeHighlight *_currentHighlight;
}

- (void)willDetachWebNodeHighlight:(id)arg1;
- (void)didAttachWebNodeHighlight:(id)arg1;
- (void)hideHighlight;
- (void)highlight;
- (void)dealloc;
- (id)initWithInspectedWebView:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface WebNodeHighlightView : WAKView
{
    WebNodeHighlight *_webNodeHighlight;
    NSMutableArray *_layers;
}

- (id)webNodeHighlight;
- (void)layoutSublayers:(id)arg1;
- (void)_layoutForRectsHighlight:(struct Highlight *)arg1 parent:(id)arg2;
- (void)_layoutForNodeHighlight:(struct Highlight *)arg1 parent:(id)arg2;
- (void)_attach:(id)arg1 numLayers:(unsigned int)arg2;
- (BOOL)isFlipped;
- (void)detachFromWebNodeHighlight;
- (void)dealloc;
- (id)initWithWebNodeHighlight:(id)arg1;
- (void)_removeAllLayers;

@end

__attribute__((visibility("hidden")))
@interface WebMainThreadInvoker : NSProxy
{
    id target;
    id exception;
}

- (void)handleException:(id)arg1;
- (id)methodSignatureForSelector:(SEL)arg1;
- (void)forwardInvocation:(id)arg1;
- (id)initWithTarget:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface WebOpenPanelResultListener : NSObject <WebOpenPanelResultListener>
{
    struct FileChooser *_chooser;
}

- (void)chooseFilenames:(id)arg1 displayString:(id)arg2 iconImage:(struct CGImage *)arg3;
- (void)chooseFilename:(id)arg1 displayString:(id)arg2 iconImage:(struct CGImage *)arg3;
- (void)chooseFilenames:(id)arg1;
- (void)chooseFilename:(id)arg1;
- (void)cancel;
- (id)initWithChooser:(PassRefPtr_2f7011b9)arg1;

@end

@interface WebPDFView : WAKView <WebPDFDocumentView, WebPDFDocumentRepresentation>
{
    BOOL dataSourceHasBeenSet;
    struct CGPDFDocument *_PDFDocument;
    NSString *_title;
    struct CGRect *_pageRects;
}

+ (Class)_representationClassForWebFrame:(id)arg1;
+ (struct CGColor *)backgroundColor;
+ (struct CGColor *)shadowColor;
+ (id)supportedMIMETypes;
- (struct CGRect)rectForPageNumber:(unsigned int)arg1;
- (struct CGPDFDocument *)doc;
- (unsigned int)totalPages;
- (unsigned int)pageNumberForRect:(struct CGRect)arg1;
- (id)title;
- (id)documentSource;
- (BOOL)canProvideDocumentSource;
- (void)finishedLoadingWithDataSource:(id)arg1;
- (void)_checkPDFTitle;
- (void)_computePageRects;
- (void)receivedError:(id)arg1 withDataSource:(id)arg2;
- (void)receivedData:(id)arg1 withDataSource:(id)arg2;
- (void)viewDidMoveToHostWindow;
- (void)viewWillMoveToHostWindow:(id)arg1;
- (void)layout;
- (void)setNeedsLayout:(BOOL)arg1;
- (void)dataSourceUpdated:(id)arg1;
- (void)setDataSource:(id)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (id)_pagesInRect:(struct CGRect)arg1;
- (void)drawPage:(struct CGPDFPage *)arg1;
- (void)dealloc;

@end

@interface WebPDFViewPlaceholder : WAKView <WebPDFDocumentView, WebPDFDocumentRepresentation>
{
    NSString *_title;
    NSArray *_pageRects;
    NSArray *_pageYOrigins;
    struct CGPDFDocument *_document;
    WebDataSource *_dataSource;
    NSObject<WebPDFViewPlaceholderDelegate> *_delegate;
    BOOL _didFinishLoadAndMemoryMap;
}

+ (id)supportedMIMETypes;
+ (Class)_representationClassForWebFrame:(id)arg1;
+ (void)setAsPDFDocRepAndView;
@property(retain) NSString *title; // @synthesize title=_title;
@property(retain) NSArray *pageYOrigins; // @synthesize pageYOrigins=_pageYOrigins;
@property(retain) NSArray *pageRects; // @synthesize pageRects=_pageRects;
@property NSObject<WebPDFViewPlaceholderDelegate> *delegate; // @synthesize delegate=_delegate;
- (void)simulateClickOnLinkToURL:(id)arg1;
- (struct CGRect)rectForPageNumber:(unsigned int)arg1;
- (void)didUnlockDocument;
- (struct CGSize)_computePageRects:(struct CGPDFDocument *)arg1;
- (struct CGRect)_getPDFPageBounds:(struct CGPDFPage *)arg1;
- (void)_updateTitleForDocumentIfAvailable;
- (void)_updateTitleForURL:(id)arg1;
- (void)_evaluateJSForDocument:(struct CGPDFDocument *)arg1;
- (id)documentSource;
- (BOOL)canProvideDocumentSource;
- (void)finishedLoadingWithDataSource:(id)arg1;
- (void)dataSourceMemoryMapFailed;
- (void)dataSourceMemoryMapped;
- (void)_doPostLoadOrUnlockTasks;
- (void)receivedError:(id)arg1 withDataSource:(id)arg2;
- (void)receivedData:(id)arg1 withDataSource:(id)arg2;
- (void)viewDidMoveToHostWindow;
- (void)viewWillMoveToHostWindow:(id)arg1;
- (void)layout;
- (void)dataSourceUpdated:(id)arg1;
- (void)_notifyDidCompleteLayout;
- (void)setDataSource:(id)arg1;
- (void)dealloc;
@property(readonly) unsigned int totalPages;
@property(readonly) struct CGPDFDocument *doc;
- (void)setDocument:(struct CGPDFDocument *)arg1;
@property(readonly) struct CGPDFDocument *document; // @synthesize document=_document;

@end

__attribute__((visibility("hidden")))
@interface WebPlainWhiteView : WAKView <WebDocumentView, WebDocumentElement>
{
}

- (id)elementAtPoint:(struct CGPoint)arg1 allowShadowContent:(BOOL)arg2;
- (id)elementAtPoint:(struct CGPoint)arg1;
- (void)viewDidMoveToHostWindow;
- (void)viewWillMoveToHostWindow:(id)arg1;
- (void)layout;
- (void)setNeedsLayout:(BOOL)arg1;
- (void)dataSourceUpdated:(id)arg1;
- (void)setDataSource:(id)arg1;
- (void)drawRect:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface WebPluginContainerCheck : NSObject
{
    NSURLRequest *_request;
    NSString *_target;
    id <WebPluginContainerCheckController> _controller;
    id _resultObject;
    SEL _resultSelector;
    id _contextInfo;
    BOOL _done;
    WebPolicyDecisionListener *_listener;
}

+ (id)checkWithRequest:(id)arg1 target:(id)arg2 resultObject:(id)arg3 selector:(SEL)arg4 controller:(id)arg5 contextInfo:(id)arg6;
- (id)contextInfo;
- (void)cancel;
- (void)start;
- (void)_askPolicyDelegate;
- (id)_actionInformationWithURL:(id)arg1;
- (BOOL)_isForbiddenFileLoad;
- (void)_continueWithPolicy:(int)arg1;
- (void)dealloc;
- (void)finalize;
- (id)initWithRequest:(id)arg1 target:(id)arg2 resultObject:(id)arg3 selector:(SEL)arg4 controller:(id)arg5 contextInfo:(id)arg6;

@end

@interface WebPluginController : NSObject <WebPluginManualLoader, WebPluginContainerCheckController>
{
    WAKView *_documentView;
    WebDataSource *_dataSource;
    NSMutableArray *_views;
    BOOL _started;
    NSMutableSet *_checksInProgress;
    NSMutableArray *_viewsNotInDocument;
}

+ (void)pluginViewHidden:(id)arg1;
+ (BOOL)isPlugInView:(id)arg1;
+ (void)addPlugInView:(id)arg1;
+ (id)plugInViewWithArguments:(id)arg1 fromPluginPackage:(id)arg2;
- (void)_webPluginContainerPostMediaPlayerNotification:(int)arg1 forElement:(id)arg2;
- (void)_webPluginContainerSetMediaPlayerProxy:(id)arg1 forElement:(id)arg2;
- (void)pluginViewFinishedLoading:(id)arg1;
- (void)pluginView:(id)arg1 receivedError:(id)arg2;
- (void)pluginView:(id)arg1 receivedData:(id)arg2;
- (void)pluginView:(id)arg1 receivedResponse:(id)arg2;
- (id)URLPolicyCheckReferrer;
- (id)webView;
- (id)webFrame;
- (void)showStatus:(id)arg1;
- (void)webPlugInContainerShowStatus:(id)arg1;
- (void)webPlugInContainerDidHideFullScreenForView:(id)arg1;
- (void)webPlugInContainerWillShowFullScreenForView:(id)arg1;
- (void)webPlugInContainerLoadRequest:(id)arg1 inFrame:(id)arg2;
- (id)_webPluginContainerCheckIfAllowedToLoadRequest:(id)arg1 inFrame:(id)arg2 resultObject:(id)arg3 selector:(SEL)arg4;
- (BOOL)processingUserGesture;
- (void)destroyAllPlugins;
- (void)_cancelOutstandingChecks;
- (void)_webPluginContainerCancelCheckIfAllowedToLoadRequest:(id)arg1;
- (void)destroyPlugin:(id)arg1;
- (void)addPlugin:(id)arg1;
- (void)pluginViewCreated:(id)arg1;
- (void)restorePluginsFromCache;
- (void)stopPluginsForPageCache;
- (void)stopAllPlugins;
- (void)startAllPlugins;
- (void)destroyOnePlugin:(id)arg1;
- (void)stopOnePluginForPageCache:(id)arg1;
- (void)stopOnePlugin:(id)arg1;
- (id)superlayerForPluginView:(id)arg1;
- (BOOL)plugInsAreRunning;
- (void)dealloc;
- (void)setDataSource:(id)arg1;
- (id)initWithDocumentView:(id)arg1;

@end

@interface WebPluginDatabase : NSObject
{
    NSMutableDictionary *plugins;
    NSMutableSet *registeredMIMETypes;
    NSArray *plugInPaths;
    NSMutableSet *pluginInstanceViews;
}

+ (void)setAdditionalWebPlugInPaths:(id)arg1;
+ (void)closeSharedDatabase;
+ (id)sharedDatabase;
+ (id)_defaultPlugInPaths;
- (void)destroyAllPluginInstanceViews;
- (void)removePluginInstanceViewsFor:(id)arg1;
- (void)removePluginInstanceView:(id)arg1;
- (void)addPluginInstanceView:(id)arg1;
- (BOOL)isMIMETypeRegistered:(id)arg1;
- (void)refresh;
- (void)dealloc;
- (id)init;
- (void)close;
- (void)setPlugInPaths:(id)arg1;
- (id)plugins;
- (id)pluginForExtension:(id)arg1;
- (id)pluginForMIMEType:(id)arg1;
- (id)_scanForNewPlugins;
- (void)_removePlugin:(id)arg1;
- (void)_addPlugin:(id)arg1;
- (id)_plugInPaths;

@end

__attribute__((visibility("hidden")))
@interface WebPluginPackage : WebBasePluginPackage
{
    NSBundle *nsBundle;
}

- (id)bundle;
- (BOOL)load;
- (Class)viewFactory;
- (void)dealloc;
- (id)initWithPath:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface WebPolicyDecisionListenerPrivate : NSObject
{
    id target;
    SEL action;
}

- (void)dealloc;
- (id)initWithTarget:(id)arg1 action:(SEL)arg2;

@end

__attribute__((visibility("hidden")))
@interface WebPolicyDecisionListener : NSObject <WebPolicyDecisionListener>
{
    WebPolicyDecisionListenerPrivate *_private;
}

- (void)download;
- (void)ignore;
- (void)use;
- (void)_invalidate;
- (void)_usePolicy:(int)arg1;
- (void)dealloc;
- (id)_initWithTarget:(id)arg1 action:(SEL)arg2;

@end

@interface WebPreferences : NSObject <NSCoding>
{
    struct WebPreferencesPrivate *_private;
}

+ (void)initialize;
+ (id)standardPreferences;
+ (void)setWebKitLinkTimeVersion:(int)arg1;
+ (void)_setCurrentNetworkLoaderSessionCookieAcceptPolicy:(unsigned int)arg1;
+ (void)_switchNetworkLoaderToNewTestingSession;
+ (void)_setIBCreatorID:(id)arg1;
+ (void)_setInitialDefaultTextEncodingToSystemEncoding;
+ (unsigned long)_systemCFStringEncoding;
+ (void)_removeReferenceForIdentifier:(id)arg1;
+ (void)_checkLastReferenceForIdentifier:(id)arg1;
+ (void)_setInstance:(id)arg1 forIdentifier:(id)arg2;
+ (id)_getInstanceForIdentifier:(id)arg1;
+ (id)_concatenateKeyWithIBCreatorID:(id)arg1;
+ (id)_IBCreatorID;
- (BOOL)suppressesIncrementalRendering;
- (void)setSuppressesIncrementalRendering:(BOOL)arg1;
- (unsigned int)cacheModel;
- (void)setCacheModel:(unsigned int)arg1;
- (void)_postCacheModelChangedNotification;
- (BOOL)usesPageCache;
- (void)setUsesPageCache:(BOOL)arg1;
- (BOOL)privateBrowsingEnabled;
- (void)setPrivateBrowsingEnabled:(BOOL)arg1;
- (BOOL)autosaves;
- (void)setAutosaves:(BOOL)arg1;
- (BOOL)loadsImagesAutomatically;
- (void)setLoadsImagesAutomatically:(BOOL)arg1;
- (void)setAllowsAnimatedImageLooping:(BOOL)arg1;
- (BOOL)allowsAnimatedImageLooping;
- (void)setAllowsAnimatedImages:(BOOL)arg1;
- (BOOL)allowsAnimatedImages;
- (void)setPlugInsEnabled:(BOOL)arg1;
- (BOOL)arePlugInsEnabled;
- (void)setJavaScriptCanOpenWindowsAutomatically:(BOOL)arg1;
- (BOOL)javaScriptCanOpenWindowsAutomatically;
- (void)setJavaScriptEnabled:(BOOL)arg1;
- (BOOL)isJavaScriptEnabled;
- (void)setJavaEnabled:(BOOL)arg1;
- (BOOL)isJavaEnabled;
- (void)setUserStyleSheetLocation:(id)arg1;
- (id)userStyleSheetLocation;
- (void)setUserStyleSheetEnabled:(BOOL)arg1;
- (BOOL)userStyleSheetEnabled;
- (void)setDefaultTextEncodingName:(id)arg1;
- (id)defaultTextEncodingName;
- (void)setMinimumLogicalFontSize:(int)arg1;
- (int)minimumLogicalFontSize;
- (void)setMinimumFontSize:(int)arg1;
- (int)minimumFontSize;
- (void)setDefaultFixedFontSize:(int)arg1;
- (int)defaultFixedFontSize;
- (void)setDefaultFontSize:(int)arg1;
- (int)defaultFontSize;
- (void)setFantasyFontFamily:(id)arg1;
- (id)fantasyFontFamily;
- (void)setCursiveFontFamily:(id)arg1;
- (id)cursiveFontFamily;
- (void)setSansSerifFontFamily:(id)arg1;
- (id)sansSerifFontFamily;
- (void)setSerifFontFamily:(id)arg1;
- (id)serifFontFamily;
- (void)setFixedFontFamily:(id)arg1;
- (id)fixedFontFamily;
- (void)setStandardFontFamily:(id)arg1;
- (id)standardFontFamily;
- (void)_setUnsignedLongLongValue:(unsigned long long)arg1 forKey:(id)arg2;
- (unsigned long long)_unsignedLongLongValueForKey:(id)arg1;
- (void)_setLongLongValue:(long long)arg1 forKey:(id)arg2;
- (long long)_longLongValueForKey:(id)arg1;
- (void)_setBoolValue:(BOOL)arg1 forKey:(id)arg2;
- (BOOL)_boolValueForKey:(id)arg1;
- (void)_setFloatValue:(float)arg1 forKey:(id)arg2;
- (float)_floatValueForKey:(id)arg1;
- (void)_setUnsignedIntValue:(unsigned int)arg1 forKey:(id)arg2;
- (unsigned int)_unsignedIntValueForKey:(id)arg1;
- (void)_setIntegerValue:(int)arg1 forKey:(id)arg2;
- (int)_integerValueForKey:(id)arg1;
- (void)_setStringValue:(id)arg1 forKey:(id)arg2;
- (id)_stringValueForKey:(id)arg1;
- (id)_valueForKey:(id)arg1;
- (id)identifier;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithIdentifier:(id)arg1 sendChangeNotification:(BOOL)arg2;
- (id)initWithIdentifier:(id)arg1;
- (id)init;
- (double)incrementalRenderingSuppressionTimeoutInSeconds;
- (void)setIncrementalRenderingSuppressionTimeoutInSeconds:(double)arg1;
- (void)setRequestAnimationFrameEnabled:(BOOL)arg1;
- (BOOL)requestAnimationFrameEnabled;
- (BOOL)shouldRespectImageOrientation;
- (void)setShouldRespectImageOrientation:(BOOL)arg1;
- (BOOL)regionBasedColumnsEnabled;
- (void)setRegionBasedColumnsEnabled:(BOOL)arg1;
- (BOOL)notificationsEnabled;
- (void)setNotificationsEnabled:(BOOL)arg1;
- (BOOL)shouldDisplayTextDescriptions;
- (void)setShouldDisplayTextDescriptions:(BOOL)arg1;
- (BOOL)shouldDisplayCaptions;
- (void)setShouldDisplayCaptions:(BOOL)arg1;
- (BOOL)shouldDisplaySubtitles;
- (void)setShouldDisplaySubtitles:(BOOL)arg1;
- (BOOL)wantsBalancedSetDefersLoadingBehavior;
- (void)setWantsBalancedSetDefersLoadingBehavior:(BOOL)arg1;
- (BOOL)backspaceKeyNavigationEnabled;
- (void)setBackspaceKeyNavigationEnabled:(BOOL)arg1;
- (void)_invalidateCachedPreferences;
- (void)setPageCacheSupportsPlugins:(BOOL)arg1;
- (BOOL)pageCacheSupportsPlugins;
- (void)setPictographFontFamily:(id)arg1;
- (id)pictographFontFamily;
- (void)setMockScrollbarsEnabled:(BOOL)arg1;
- (BOOL)mockScrollbarsEnabled;
- (void)setMediaPlaybackAllowsInline:(BOOL)arg1;
- (BOOL)mediaPlaybackAllowsInline;
- (void)setMediaPlaybackRequiresUserGesture:(BOOL)arg1;
- (BOOL)mediaPlaybackRequiresUserGesture;
- (void)setAudioSessionCategoryOverride:(unsigned int)arg1;
- (unsigned int)audioSessionCategoryOverride;
- (void)setMediaPlaybackAllowsAirPlay:(BOOL)arg1;
- (BOOL)mediaPlaybackAllowsAirPlay;
- (BOOL)isHixie76WebSocketProtocolEnabled;
- (void)setHixie76WebSocketProtocolEnabled:(BOOL)arg1;
- (BOOL)isAVFoundationEnabled;
- (void)setAVFoundationEnabled:(BOOL)arg1;
- (BOOL)loadsSiteIconsIgnoringImageLoadingPreference;
- (void)setLoadsSiteIconsIgnoringImageLoadingPreference:(BOOL)arg1;
- (BOOL)asynchronousSpellCheckingEnabled;
- (void)setAsynchronousSpellCheckingEnabled:(BOOL)arg1;
- (BOOL)fullScreenEnabled;
- (void)setFullScreenEnabled:(BOOL)arg1;
- (void)_setPreferenceForTestWithValue:(id)arg1 forKey:(id)arg2;
- (void)willAddToWebView;
- (void)didRemoveFromWebView;
- (void)setUsePreHTML5ParserQuirks:(BOOL)arg1;
- (BOOL)usePreHTML5ParserQuirks;
- (void)setEditingBehavior:(int)arg1;
- (int)editingBehavior;
- (void)setHyperlinkAuditingEnabled:(BOOL)arg1;
- (BOOL)hyperlinkAuditingEnabled;
- (void)setMemoryInfoEnabled:(BOOL)arg1;
- (BOOL)memoryInfoEnabled;
- (void)setPaginateDuringLayoutEnabled:(BOOL)arg1;
- (BOOL)paginateDuringLayoutEnabled;
- (void)setSpatialNavigationEnabled:(BOOL)arg1;
- (BOOL)isSpatialNavigationEnabled;
- (void)setFrameFlatteningEnabled:(BOOL)arg1;
- (BOOL)isFrameFlatteningEnabled;
- (void)_setDiskImageCacheSavedCacheDirectory:(id)arg1;
- (id)_diskImageCacheSavedCacheDirectory;
- (void)setDiskImageCacheMaximumCacheSize:(unsigned int)arg1;
- (unsigned int)diskImageCacheMaximumCacheSize;
- (void)setDiskImageCacheMinimumImageSize:(unsigned int)arg1;
- (unsigned int)diskImageCacheMinimumImageSize;
- (void)setDiskImageCacheEnabled:(BOOL)arg1;
- (BOOL)diskImageCacheEnabled;
- (void)setAccelerated2dCanvasEnabled:(BOOL)arg1;
- (BOOL)accelerated2dCanvasEnabled;
- (void)setWebGLEnabled:(BOOL)arg1;
- (BOOL)webGLEnabled;
- (void)setWebAudioEnabled:(BOOL)arg1;
- (BOOL)webAudioEnabled;
- (void)setShowRepaintCounter:(BOOL)arg1;
- (BOOL)showRepaintCounter;
- (void)setShowDebugBorders:(BOOL)arg1;
- (BOOL)showDebugBorders;
- (void)setCSSRegionsEnabled:(BOOL)arg1;
- (BOOL)cssRegionsEnabled;
- (void)setCSSCustomFilterEnabled:(BOOL)arg1;
- (BOOL)cssCustomFilterEnabled;
- (void)setAcceleratedCompositingEnabled:(BOOL)arg1;
- (BOOL)acceleratedCompositingEnabled;
- (void)setCanvasUsesAcceleratedDrawing:(BOOL)arg1;
- (BOOL)canvasUsesAcceleratedDrawing;
- (void)setAcceleratedDrawingEnabled:(BOOL)arg1;
- (BOOL)acceleratedDrawingEnabled;
- (void)_setForceFTPDirectoryListings:(BOOL)arg1;
- (BOOL)_forceFTPDirectoryListings;
- (void)_setFTPDirectoryTemplatePath:(id)arg1;
- (id)_ftpDirectoryTemplatePath;
- (void)_setLocalStorageDatabasePath:(id)arg1;
- (id)_localStorageDatabasePath;
- (void)setDOMPasteAllowed:(BOOL)arg1;
- (BOOL)isDOMPasteAllowed;
- (void)_postPreferencesChangedAPINotification;
- (void)_postPreferencesChangedNotification;
- (void)setExperimentalNotificationsEnabled:(BOOL)arg1;
- (BOOL)experimentalNotificationsEnabled;
- (void)setLocalStorageEnabled:(BOOL)arg1;
- (BOOL)localStorageEnabled;
- (void)setStorageTrackerEnabled:(BOOL)arg1;
- (BOOL)storageTrackerEnabled;
- (void)setDatabasesEnabled:(BOOL)arg1;
- (BOOL)databasesEnabled;
- (void)_setUseSiteSpecificSpoofing:(BOOL)arg1;
- (BOOL)_useSiteSpecificSpoofing;
- (void)setTextDirectionSubmenuInclusionBehavior:(int)arg1;
- (int)textDirectionSubmenuInclusionBehavior;
- (void)setEditableLinkBehavior:(int)arg1;
- (int)editableLinkBehavior;
- (void)setApplicationCacheDefaultOriginQuota:(long long)arg1;
- (long long)applicationCacheDefaultOriginQuota;
- (void)setApplicationCacheTotalQuota:(long long)arg1;
- (long long)applicationCacheTotalQuota;
- (int)_interpolationQuality;
- (void)_setInterpolationQuality:(int)arg1;
- (BOOL)_allowCompositingLayerVisualDegradation;
- (void)_setAllowCompositingLayerVisualDegradation:(BOOL)arg1;
- (BOOL)_alwaysUseAcceleratedOverflowScroll;
- (void)_setAlwaysUseAcceleratedOverflowScroll:(BOOL)arg1;
- (BOOL)_alwaysRequestGeolocationPermission;
- (void)_setAlwaysRequestGeolocationPermission:(BOOL)arg1;
- (BOOL)_useLegacyNumberInputFieldFormatting;
- (void)_setUseLegacyNumberInputFieldFormatting:(BOOL)arg1;
- (BOOL)_allowMultiElementImplicitFormSubmission;
- (void)_setAllowMultiElementImplicitFormSubmission:(BOOL)arg1;
- (BOOL)_alwaysUseBaselineOfPrimaryFont;
- (void)_setAlwaysUseBaselineOfPrimaryFont:(BOOL)arg1;
- (int)_NSURLMaxRequestSize;
- (void)_setNSURLMaxRequestSize:(int)arg1;
- (int)_NSURLDiskCacheSize;
- (void)_setNSURLDiskCacheSize:(int)arg1;
- (int)_NSURLMemoryCacheSize;
- (void)_setNSURLMemoryCacheSize:(int)arg1;
- (int)_objectCacheSize;
- (void)_setObjectCacheSize:(int)arg1;
- (int)_pageCacheSize;
- (void)_setPageCacheSize:(int)arg1;
- (float)_maxParseDuration;
- (void)_setMaxParseDuration:(float)arg1;
- (int)_layoutInterval;
- (void)_setLayoutInterval:(int)arg1;
- (float)_minimumZoomFontSize;
- (void)_setMinimumZoomFontSize:(float)arg1;
- (BOOL)_telephoneNumberParsingEnabled;
- (void)_setTelephoneNumberParsingEnabled:(BOOL)arg1;
- (void)_setStandalone:(BOOL)arg1;
- (BOOL)_standalone;
- (unsigned long)_maximumImageSize;
- (double)_backForwardCacheExpirationInterval;
- (void)setAllowFileAccessFromFileURLs:(BOOL)arg1;
- (BOOL)allowFileAccessFromFileURLs;
- (void)setAllowUniversalAccessFromFileURLs:(BOOL)arg1;
- (BOOL)allowUniversalAccessFromFileURLs;
- (void)setWebSecurityEnabled:(BOOL)arg1;
- (BOOL)isWebSecurityEnabled;
- (void)setUsesEncodingDetector:(BOOL)arg1;
- (BOOL)usesEncodingDetector;
- (void)setAutomaticallyDetectsCacheModel:(BOOL)arg1;
- (BOOL)automaticallyDetectsCacheModel;
- (void)setShrinksStandaloneImagesToFit:(BOOL)arg1;
- (BOOL)shrinksStandaloneImagesToFit;
- (void)setXSSAuditorEnabled:(BOOL)arg1;
- (BOOL)isXSSAuditorEnabled;
- (void)setJavaScriptCanAccessClipboard:(BOOL)arg1;
- (BOOL)javaScriptCanAccessClipboard;
- (void)setZoomsTextOnly:(BOOL)arg1;
- (BOOL)zoomsTextOnly;
- (void)setOfflineWebApplicationCacheEnabled:(BOOL)arg1;
- (BOOL)offlineWebApplicationCacheEnabled;
- (void)setLocalFileContentSniffingEnabled:(BOOL)arg1;
- (BOOL)localFileContentSniffingEnabled;
- (void)setWebArchiveDebugModeEnabled:(BOOL)arg1;
- (BOOL)webArchiveDebugModeEnabled;
- (void)setApplicationChromeModeEnabled:(BOOL)arg1;
- (BOOL)applicationChromeModeEnabled;
- (void)setAuthorAndUserStylesEnabled:(BOOL)arg1;
- (BOOL)authorAndUserStylesEnabled;
- (void)setDeveloperExtrasEnabled:(BOOL)arg1;
- (BOOL)developerExtrasEnabled;
- (void)setDNSPrefetchingEnabled:(BOOL)arg1;
- (BOOL)isDNSPrefetchingEnabled;

@end

@interface WebRenderLayer : NSObject
{
    NSArray *children;
    NSString *name;
    NSString *compositingInfo;
    struct CGRect bounds;
    BOOL composited;
    BOOL separator;
}

+ (id)compositingInfoForLayer:(struct RenderLayer *)arg1;
+ (id)nameForLayer:(struct RenderLayer *)arg1;
- (id).cxx_construct;
- (BOOL)isSeparator;
- (BOOL)isComposited;
- (id)compositingInfo;
- (id)heightString;
- (id)widthString;
- (id)positionString;
- (id)name;
- (id)children;
- (void)buildDescendantLayers:(struct RenderLayer *)arg1;
- (void)dealloc;
- (id)initWithWebFrame:(id)arg1;
- (id)initWithName:(id)arg1;
- (id)initWithRenderLayer:(struct RenderLayer *)arg1;

@end

__attribute__((visibility("hidden")))
@interface WebResourcePrivate : NSObject
{
    struct ArchiveResource *coreResource;
}

+ (void)initialize;
- (void)finalize;
- (void)dealloc;
- (id)initWithCoreResource:(PassRefPtr_43de0ce5)arg1;
- (id)init;

@end

@interface WebResource : NSObject <NSCoding, NSCopying>
{
    WebResourcePrivate *_private;
}

- (id)description;
- (id)frameName;
- (id)textEncodingName;
- (id)MIMEType;
- (id)URL;
- (id)data;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithData:(id)arg1 URL:(id)arg2 MIMEType:(id)arg3 textEncodingName:(id)arg4 frameName:(id)arg5;
- (id)init;
- (struct ArchiveResource *)_coreResource;
- (id)_initWithCoreResource:(PassRefPtr_43de0ce5)arg1;
- (id)_stringValue;
- (id)_response;
- (id)_suggestedFilename;
- (id)_initWithData:(id)arg1 URL:(id)arg2 response:(id)arg3;
- (id)_initWithData:(id)arg1 URL:(id)arg2 MIMEType:(id)arg3 textEncodingName:(id)arg4 frameName:(id)arg5 response:(id)arg6 copyData:(BOOL)arg7;
- (void)_ignoreWhenUnarchiving;

@end

__attribute__((visibility("hidden")))
@interface WebScriptCallFramePrivate : NSObject
{
    WebScriptObject *globalObject;
    WebScriptCallFrame *caller;
    struct DebuggerCallFrame *debuggerCallFrame;
    struct WebScriptDebugger *debugger;
}

- (void)dealloc;

@end

@interface WebScriptCallFrame : NSObject
{
    WebScriptCallFramePrivate *_private;
    id _userInfo;
}

- (id)evaluateWebScript:(id)arg1;
- (id)exception;
- (id)functionName;
- (id)scopeChain;
- (id)caller;
- (id)userInfo;
- (void)setUserInfo:(id)arg1;
- (void)dealloc;
- (id)_convertValueToObjcValue:(struct JSValue)arg1;
- (void)_clearDebuggerCallFrame;
- (void)_setDebuggerCallFrame:(const struct DebuggerCallFrame *)arg1;
- (id)_initWithGlobalObject:(id)arg1 debugger:(struct WebScriptDebugger *)arg2 caller:(id)arg3 debuggerCallFrame:(const struct DebuggerCallFrame *)arg4;

@end

__attribute__((visibility("hidden")))
@interface WebScriptWorldPrivate : NSObject
{
    struct RefPtr<WebCore::DOMWrapperWorld> world;
}

- (id).cxx_construct;
- (void).cxx_destruct;

@end

@interface WebScriptWorld : NSObject
{
    WebScriptWorldPrivate *_private;
}

+ (id)scriptWorldForGlobalContext:(struct OpaqueJSContext *)arg1;
+ (id)world;
+ (id)standardWorld;
+ (id)findOrCreateWorld:(struct DOMWrapperWorld *)arg1;
- (void)dealloc;
- (void)unregisterWorld;
- (id)init;
- (id)initWithWorld:(PassRefPtr_7f281a75)arg1;

@end

@interface WebSecurityOrigin : NSObject
{
    WebSecurityOriginPrivate *_private;
    id <WebQuotaManager> _applicationCacheQuotaManager;
    id <WebQuotaManager> _databaseQuotaManager;
}

- (void)finalize;
- (void)dealloc;
- (BOOL)isEqual:(id)arg1;
- (unsigned short)port;
- (id)domain;
- (id)stringValue;
- (id)toString;
- (id)databaseIdentifier;
- (id)host;
- (id)protocol;
- (id)initWithURL:(id)arg1;
- (struct SecurityOrigin *)_core;
- (id)_initWithWebCoreSecurityOrigin:(struct SecurityOrigin *)arg1;
- (id)databaseQuotaManager;
- (id)applicationCacheQuotaManager;
- (void)setQuota:(unsigned long long)arg1;
- (unsigned long long)quota;
- (unsigned long long)usage;

@end

@interface WebSelectionRect : NSObject <NSCopying>
{
    struct CGRect m_rect;
    int m_writingDirection;
    BOOL m_isLineBreak;
    BOOL m_isFirstOnLine;
    BOOL m_isLastOnLine;
    BOOL m_containsStart;
    BOOL m_containsEnd;
    BOOL m_isInFixedPosition;
    BOOL m_isHorizontal;
}

+ (struct CGRect)endEdge:(id)arg1;
+ (struct CGRect)startEdge:(id)arg1;
+ (id)selectionRect;
@property(nonatomic) BOOL isHorizontal; // @synthesize isHorizontal=m_isHorizontal;
@property(nonatomic) BOOL isInFixedPosition; // @synthesize isInFixedPosition=m_isInFixedPosition;
@property(nonatomic) BOOL containsEnd; // @synthesize containsEnd=m_containsEnd;
@property(nonatomic) BOOL containsStart; // @synthesize containsStart=m_containsStart;
@property(nonatomic) BOOL isLastOnLine; // @synthesize isLastOnLine=m_isLastOnLine;
@property(nonatomic) BOOL isFirstOnLine; // @synthesize isFirstOnLine=m_isFirstOnLine;
@property(nonatomic) BOOL isLineBreak; // @synthesize isLineBreak=m_isLineBreak;
@property(nonatomic) int writingDirection; // @synthesize writingDirection=m_writingDirection;
@property(nonatomic) struct CGRect rect; // @synthesize rect=m_rect;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface WebSerializedJSValuePrivate : NSObject
{
    struct RefPtr<WebCore::SerializedScriptValue> value;
}

- (id).cxx_construct;
- (void).cxx_destruct;

@end

@interface WebSerializedJSValue : NSObject
{
    WebSerializedJSValuePrivate *_private;
}

- (void *)internalRepresentation;
- (void)dealloc;
- (struct OpaqueJSValue *)deserialize:(struct OpaqueJSContext *)arg1;
- (id)initWithInternalRepresentation:(void *)arg1;
- (id)initWithValue:(struct OpaqueJSValue *)arg1 context:(struct OpaqueJSContext *)arg2 exception:(const struct OpaqueJSValue **)arg3;

@end

@interface WebStorageManager : NSObject
{
}

+ (void)setStorageDatabaseIdleInterval:(double)arg1;
+ (id)_storageDirectoryPath;
+ (id)sharedWebStorageManager;
- (void)syncFileSystemAndTrackerDatabase;
- (void)syncLocalStorage;
- (unsigned long long)diskUsageForOrigin:(id)arg1;
- (void)deleteOrigin:(id)arg1;
- (void)deleteAllOrigins;
- (id)origins;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface WebTextIteratorPrivate : NSObject
{
    struct OwnPtr<WebCore::TextIterator> _textIterator;
}

+ (void)initialize;
- (id).cxx_construct;
- (void).cxx_destruct;

@end

@interface WebTextIterator : NSObject
{
    WebTextIteratorPrivate *_private;
}

- (unsigned int)currentTextLength;
- (const unsigned short *)currentTextPointer;
- (id)currentRange;
- (BOOL)atEnd;
- (void)advance;
- (id)initWithRange:(id)arg1;
- (void)dealloc;
- (id)currentText;
- (id)currentNode;

@end

__attribute__((visibility("hidden")))
@interface WebUserContentURLPatternPrivate : NSObject
{
    struct UserContentURLPattern pattern;
}

- (id).cxx_construct;
- (void).cxx_destruct;

@end

@interface WebUserContentURLPattern : NSObject
{
    WebUserContentURLPatternPrivate *_private;
}

- (BOOL)matchesURL:(id)arg1;
- (BOOL)matchesSubdomains;
- (id)host;
- (id)scheme;
- (BOOL)isValid;
- (void)dealloc;
- (id)initWithPatternString:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface WebProgressItem : NSObject
{
    long long bytesReceived;
    long long estimatedLength;
}

@end

__attribute__((visibility("hidden")))
@interface _WebSafeForwarder : NSObject
{
    id target;
    id defaultTarget;
    BOOL catchExceptions;
    _WebSafeAsyncForwarder *asyncForwarder;
    long asyncForwarderPred;
}

- (id)methodSignatureForSelector:(SEL)arg1;
- (BOOL)respondsToSelector:(SEL)arg1;
- (void)forwardInvocation:(id)arg1;
- (void)clearTarget;
- (void)dealloc;
- (id)asyncForwarder;
- (id)initWithTarget:(id)arg1 defaultTarget:(id)arg2 catchExceptions:(BOOL)arg3;

@end

__attribute__((visibility("hidden")))
@interface _WebSafeAsyncForwarder : NSObject
{
    _WebSafeForwarder *_forwarder;
}

- (id)methodSignatureForSelector:(SEL)arg1;
- (BOOL)respondsToSelector:(SEL)arg1;
- (void)forwardInvocation:(id)arg1;
- (id)initWithForwarder:(id)arg1;

@end

@interface WebView : WAKView
{
    WebViewPrivate *_private;
}

+ (void)registerViewClass:(Class)arg1 representationClass:(Class)arg2 forMIMEType:(id)arg3;
+ (void)registerURLSchemeAsLocal:(id)arg1;
+ (void)setMIMETypesShownAsHTML:(id)arg1;
+ (id)MIMETypesShownAsHTML;
+ (BOOL)canShowMIMETypeAsHTML:(id)arg1;
+ (BOOL)canShowMIMEType:(id)arg1;
+ (BOOL)_canShowMIMEType:(id)arg1 allowingPlugins:(BOOL)arg2;
+ (void)initialize;
+ (void)_makeAllWebViewsPerformSelector:(SEL)arg1;
+ (void)_setTileCacheLayerPoolCapacity:(unsigned int)arg1;
+ (void)_setHTTPPipeliningEnabled:(BOOL)arg1;
+ (BOOL)_HTTPPipeliningEnabled;
+ (double)_defaultMinimumTimerInterval;
+ (void)_setLoadResourcesSerially:(BOOL)arg1;
+ (void)_registerURLSchemeAsAllowingDatabaseAccessInPrivateBrowsing:(id)arg1;
+ (void)_registerURLSchemeAsAllowingLocalStorageAccessInPrivateBrowsing:(id)arg1;
+ (void)_registerURLSchemeAsSecure:(id)arg1;
+ (void)_setDomainRelaxationForbidden:(BOOL)arg1 forURLScheme:(id)arg2;
+ (void)_removeAllUserContentFromGroup:(id)arg1;
+ (void)_removeUserStyleSheetsFromGroup:(id)arg1 world:(id)arg2;
+ (void)_removeUserScriptsFromGroup:(id)arg1 world:(id)arg2;
+ (void)_removeUserStyleSheetFromGroup:(id)arg1 world:(id)arg2 url:(id)arg3;
+ (void)_removeUserScriptFromGroup:(id)arg1 world:(id)arg2 url:(id)arg3;
+ (void)_addUserStyleSheetToGroup:(id)arg1 world:(id)arg2 source:(id)arg3 url:(id)arg4 whitelist:(id)arg5 blacklist:(id)arg6 injectedFrames:(int)arg7;
+ (void)_addUserStyleSheetToGroup:(id)arg1 world:(id)arg2 source:(id)arg3 url:(id)arg4 whitelist:(id)arg5 blacklist:(id)arg6;
+ (void)_addUserScriptToGroup:(id)arg1 world:(id)arg2 source:(id)arg3 url:(id)arg4 whitelist:(id)arg5 blacklist:(id)arg6 injectionTime:(int)arg7 injectedFrames:(int)arg8;
+ (void)_addUserScriptToGroup:(id)arg1 world:(id)arg2 source:(id)arg3 url:(id)arg4 whitelist:(id)arg5 blacklist:(id)arg6 injectionTime:(int)arg7;
+ (void)_resetOriginAccessWhitelists;
+ (void)_removeOriginAccessWhitelistEntryWithSourceOrigin:(id)arg1 destinationProtocol:(id)arg2 destinationHost:(id)arg3 allowDestinationSubdomains:(BOOL)arg4;
+ (void)_addOriginAccessWhitelistEntryWithSourceOrigin:(id)arg1 destinationProtocol:(id)arg2 destinationHost:(id)arg3 allowDestinationSubdomains:(BOOL)arg4;
+ (unsigned int)_maximumImageSizeBeforeSubsampling;
+ (void)_setMaximumImageSizeBeforeSubsampling:(unsigned int)arg1;
+ (id)_productivityDocumentMIMETypes;
+ (BOOL)_shouldUseFontSmoothing;
+ (void)_setShouldUseFontSmoothing:(BOOL)arg1;
+ (id)_decodeData:(id)arg1;
+ (BOOL)_canHandleRequest:(id)arg1;
+ (BOOL)_canHandleRequest:(id)arg1 forMainFrame:(BOOL)arg2;
+ (BOOL)_representationExistsForURLScheme:(id)arg1;
+ (id)_generatedMIMETypeForURLScheme:(id)arg1;
+ (void)_registerViewClass:(Class)arg1 representationClass:(Class)arg2 forURLScheme:(id)arg3;
+ (void)_unregisterViewClassAndRepresentationClassForMIMEType:(id)arg1;
+ (BOOL)_isRemoteInspectorEnabled;
+ (void)_disableAutoStartRemoteInspector;
+ (void)_disableRemoteInspector;
+ (void)_enableRemoteInspector;
+ (id)sharedWebInspectorServer;
+ (id)_MIMETypeForFile:(id)arg1;
+ (BOOL)_isUnderMemoryPressure;
+ (BOOL)_allowCookies;
+ (void)_setAllowCookies:(BOOL)arg1;
+ (BOOL)_acceleratedImageDecoding;
+ (void)_setAcceleratedImageDecoding:(BOOL)arg1;
+ (BOOL)canShowFile:(id)arg1;
+ (void)closeAllWebViews;
+ (BOOL)canCloseAllWebViews;
+ (BOOL)_allowsRoundingHacks;
+ (void)_setAllowsRoundingHacks:(BOOL)arg1;
+ (void)_setAlwaysUsesComplexTextCodePath:(BOOL)arg1;
+ (BOOL)_viewClass:(Class *)arg1 andRepresentationClass:(Class *)arg2 forMIMEType:(id)arg3 allowingPlugins:(BOOL)arg4;
+ (void)_unregisterPluginMIMEType:(id)arg1;
+ (void)_registerPluginMIMEType:(id)arg1;
+ (BOOL)isCharacterSmartReplaceExempt:(unsigned short)arg1 isPreviousCharacter:(BOOL)arg2;
+ (void)discardAllCompiledCode;
+ (void)drainLayerPool;
+ (void)purgeInactiveFontData;
+ (void)garbageCollectNow;
+ (void)releaseFastMallocMemory;
+ (void)willEnterBackgroundWithCompletionHandler:(id)arg1;
+ (void)_releaseMemoryNow;
+ (void)registerForMemoryNotifications;
+ (void)_handleMemoryWarning;
+ (void)enableWebThread;
+ (id)_supportedMIMETypes;
+ (void)_reportException:(struct OpaqueJSValue *)arg1 inContext:(struct OpaqueJSContext *)arg2;
+ (id)_standardUserAgentWithApplicationName:(id)arg1;
+ (id)_standardUserAgentWithApplicationName:(id)arg1 osMarketingVersion:(id)arg2;
+ (void)_preflightSpellChecker;
+ (void)_preflightSpellCheckerNow:(id)arg1;
+ (void)_preferencesRemovedNotification:(id)arg1;
+ (void)_cacheModelChangedNotification:(id)arg1;
+ (unsigned int)_maxCacheModelInAnyInstance;
+ (unsigned int)_didSetCacheModel;
+ (unsigned int)_cacheModel;
+ (void)_setCacheModel:(unsigned int)arg1;
+ (BOOL)shouldIncludeInWebKitStatistics;
+ (void)_setPDFViewClass:(Class)arg1;
+ (Class)_getPDFViewClass;
+ (void)_setPDFRepresentationClass:(Class)arg1;
+ (Class)_getPDFRepresentationClass;
- (id)previousValidKeyView;
- (id)currentNodeHighlight;
- (void)setCurrentNodeHighlight:(id)arg1;
- (BOOL)shouldUpdateWhileOffscreen;
- (void)setShouldUpdateWhileOffscreen:(BOOL)arg1;
- (BOOL)drawsBackground;
- (void)setDrawsBackground:(BOOL)arg1;
- (id)mainFrameDocument;
- (id)mainFrameIconURL;
- (id)mainFrameTitle;
- (BOOL)isLoading;
- (id)mainFrameURL;
- (void)setMainFrameURL:(id)arg1;
- (double)estimatedProgress;
- (id)groupName;
- (void)setGroupName:(id)arg1;
- (BOOL)searchFor:(id)arg1 direction:(BOOL)arg2 caseSensitive:(BOOL)arg3 wrap:(BOOL)arg4;
- (void)setNextKeyView:(id)arg1;
- (id)_webcore_effectiveFirstResponder;
- (BOOL)becomeFirstResponder;
- (BOOL)acceptsFirstResponder;
- (id)elementAtPoint:(struct CGPoint)arg1;
- (id)_elementAtWindowPoint:(struct CGPoint)arg1;
- (id)documentViewAtWindowPoint:(struct CGPoint)arg1;
- (id)hostWindow;
- (void)setHostWindow:(id)arg1;
- (id)userAgentForURL:(id)arg1;
- (struct String)_userAgentString;
- (id)windowScriptObject;
- (id)stringByEvaluatingJavaScriptFromString:(id)arg1;
- (id)customTextEncodingName;
- (id)_mainFrameOverrideEncoding;
- (void)setCustomTextEncodingName:(id)arg1;
- (BOOL)supportsTextEncoding;
- (id)mediaStyle;
- (void)setMediaStyle:(id)arg1;
- (id)customUserAgent;
- (void)setCustomUserAgent:(id)arg1;
- (id)applicationNameForUserAgent;
- (void)setApplicationNameForUserAgent:(id)arg1;
- (void)_resetZoom:(id)arg1 isTextOnly:(BOOL)arg2;
- (BOOL)_canResetZoom:(BOOL)arg1;
- (void)_zoomIn:(id)arg1 isTextOnly:(BOOL)arg2;
- (void)_zoomOut:(id)arg1 isTextOnly:(BOOL)arg2;
- (BOOL)_canZoomIn:(BOOL)arg1;
- (BOOL)_canZoomOut:(BOOL)arg1;
- (BOOL)_realZoomMultiplierIsTextOnly;
- (float)_realZoomMultiplier;
- (float)_zoomMultiplier:(BOOL)arg1;
- (void)_setZoomMultiplier:(float)arg1 isTextOnly:(BOOL)arg2;
- (float)textSizeMultiplier;
- (void)setTextSizeMultiplier:(float)arg1;
- (BOOL)goToBackForwardItem:(id)arg1;
- (BOOL)goForward;
- (BOOL)goBack;
- (void)setMaintainsBackForwardList:(BOOL)arg1;
- (id)backForwardList;
- (id)selectedFrame;
- (id)mainFrame;
- (id)frameLoadDelegate;
- (void)setFrameLoadDelegate:(id)arg1;
- (id)_frameLoadDelegateForwarder;
- (id)policyDelegate;
- (void)setPolicyDelegate:(id)arg1;
- (id)downloadDelegate;
- (void)setDownloadDelegate:(id)arg1;
- (id)resourceLoadDelegate;
- (void)setResourceLoadDelegate:(id)arg1;
- (id)_resourceLoadDelegateForwarder;
- (id)UIDelegate;
- (void)setUIDelegate:(id)arg1;
- (id)preferencesIdentifier;
- (void)setPreferencesIdentifier:(id)arg1;
- (id)preferences;
- (void)setPreferences:(id)arg1;
- (void)_updateScreenScaleFromWindow;
- (void)_wakWindowScreenScaleChanged:(id)arg1;
- (void)viewDidMoveToWindow;
- (BOOL)shouldCloseWithWindow;
- (void)setShouldCloseWithWindow:(BOOL)arg1;
- (void)close;
- (void)finalize;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 frameName:(id)arg2 groupName:(id)arg3;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)_initWithArguments:(id)arg1;
- (BOOL)_isMIMETypeRegisteredAsPlugin:(id)arg1;
- (id)_pluginForExtension:(id)arg1;
- (id)_videoProxyPluginForMIMEType:(id)arg1;
- (id)_pluginForMIMEType:(id)arg1;
- (BOOL)_canShowMIMEType:(id)arg1;
- (void)_addToAllWebViewsSet;
- (void)_removeFromAllWebViewsSet;
- (void)_setWebGLEnabled:(BOOL)arg1;
- (BOOL)_webGLEnabled;
- (void)_setWantsTelephoneNumberParsing:(BOOL)arg1;
- (BOOL)_wantsTelephoneNumberParsing;
- (void)_documentScaleChanged;
- (id)_fixedPositionContent;
- (void)_setMinimumTimerInterval:(double)arg1;
- (BOOL)searchFor:(id)arg1 direction:(BOOL)arg2 caseSensitive:(BOOL)arg3 wrap:(BOOL)arg4 startInSelection:(BOOL)arg5;
- (unsigned int)countMatchesForText:(id)arg1 caseSensitive:(BOOL)arg2 highlight:(BOOL)arg3 limit:(unsigned int)arg4 markMatches:(BOOL)arg5;
- (unsigned int)markAllMatchesForText:(id)arg1 caseSensitive:(BOOL)arg2 highlight:(BOOL)arg3 limit:(unsigned int)arg4;
- (unsigned int)_pageCount;
- (float)_gapBetweenPages;
- (void)_setGapBetweenPages:(float)arg1;
- (float)_pageLength;
- (void)_setPageLength:(float)arg1;
- (BOOL)_paginationBehavesLikeColumns;
- (void)_setPaginationBehavesLikeColumns:(BOOL)arg1;
- (int)_paginationMode;
- (void)_setPaginationMode:(int)arg1;
- (BOOL)_useFixedLayout;
- (void)_setUseFixedLayout:(BOOL)arg1;
- (float)_viewScaleFactor;
- (void)_scaleWebView:(float)arg1 atOrigin:(struct CGPoint)arg2;
- (void)setCSSAnimationsSuspended:(BOOL)arg1;
- (BOOL)cssAnimationsSuspended;
- (void)_updateActiveState;
- (id)trackedRepaintRects;
- (void)resetTrackedRepaints;
- (BOOL)isTrackingRepaints;
- (void)setTracksRepaints:(BOOL)arg1;
- (BOOL)_includesFlattenedCompositingLayersWhenDrawingToBitmap;
- (void)_setIncludesFlattenedCompositingLayersWhenDrawingToBitmap:(BOOL)arg1;
- (BOOL)_isSoftwareRenderable;
- (void)setValidationMessageTimerMagnification:(int)arg1;
- (int)validationMessageTimerMagnification;
- (void)setInteractiveFormValidationEnabled:(BOOL)arg1;
- (BOOL)interactiveFormValidationEnabled;
- (void)_setBaseCTM:(struct CGAffineTransform)arg1 forContext:(struct CGContext *)arg2;
- (BOOL)_isUsingAcceleratedCompositing;
- (void)_setPostsAcceleratedCompositingNotifications:(BOOL)arg1;
- (BOOL)_postsAcceleratedCompositingNotifications;
- (void)_setJavaScriptURLsAreAllowed:(BOOL)arg1;
- (BOOL)areMemoryCacheDelegateCallsEnabled;
- (void)setMemoryCacheDelegateCallsEnabled:(BOOL)arg1;
- (BOOL)isSelectTrailingWhitespaceEnabled;
- (void)setSelectTrailingWhitespaceEnabled:(BOOL)arg1;
- (void)_clearMainFrameName;
- (void)_setCustomHTMLTokenizerChunkSize:(int)arg1;
- (void)_setCustomHTMLTokenizerTimeDelay:(double)arg1;
- (void)_executeCoreCommandByName:(id)arg1 value:(id)arg2;
- (BOOL)_catchesDelegateExceptions;
- (void)_setCatchesDelegateExceptions:(BOOL)arg1;
- (id)textIteratorForRect:(struct CGRect)arg1;
- (void)_setGlobalHistoryItem:(struct HistoryItem *)arg1;
- (id)_globalHistoryItem;
- (void)setUsesPageCache:(BOOL)arg1;
- (BOOL)usesPageCache;
- (id)_touchEventRegions;
- (void)_overflowScrollPositionChangedTo:(struct CGPoint)arg1 forNode:(id)arg2 isUserScroll:(BOOL)arg3;
- (void)_setCustomFixedPositionLayoutRect:(struct CGRect)arg1;
- (void)_setCustomFixedPositionLayoutRectInWebThread:(struct CGRect)arg1 synchronize:(BOOL)arg2;
- (void)_synchronizeCustomFixedPositionLayoutRect;
- (struct CGSize)_fixedLayoutSize;
- (void)_setFixedLayoutSize:(struct CGSize)arg1;
- (void)_setNetworkStateIsOnline:(BOOL)arg1;
- (BOOL)_allowsMessaging;
- (void)_setAllowsMessaging:(BOOL)arg1;
- (BOOL)_isClosing;
- (BOOL)_isStopping;
- (id)quickLookContentForURL:(id)arg1;
- (void)setDefersCallbacks:(BOOL)arg1;
- (BOOL)defersCallbacks;
- (struct CGColor *)backgroundColor;
- (void)setBackgroundColor:(struct CGColor *)arg1;
- (void)_detachScriptDebuggerFromAllFrames;
- (void)_attachScriptDebuggerToAllFrames;
- (void)_setNeedsUnrestrictedGetMatchedCSSRules:(BOOL)arg1;
- (BOOL)_setMediaLayer:(id)arg1 forPluginView:(id)arg2;
- (void)_restorePlugInsFromCache;
- (void)_stopAllPlugInsForPageCache;
- (void)_stopAllPlugIns;
- (void)_startAllPlugIns;
- (void)_clearBackForwardCache;
- (void)_destroyAllPlugIns;
- (void)_locked_recursivelyPerformPlugInSelector:(SEL)arg1 inFrame:(id)arg2;
- (BOOL)_pluginsAreRunning;
- (BOOL)_locked_plugInsAreRunningInFrame:(id)arg1;
- (void)_setCookieEnabled:(BOOL)arg1;
- (BOOL)_cookieEnabled;
- (BOOL)_inFastImageScalingMode;
- (void)_setUseFastImageScalingMode:(BOOL)arg1;
- (BOOL)_inViewSourceMode;
- (void)_setInViewSourceMode:(BOOL)arg1;
- (void)_setFontFallbackPrefersPictographs:(BOOL)arg1;
- (id)_displayURL;
- (void)_clearDelegates;
- (void)caretChanged;
- (void)removeAllCaretChangeListeners;
- (void)removeCaretChangeListener:(id)arg1;
- (void)addCaretChangeListener:(id)arg1;
- (id)caretChangeListeners;
- (void)setCaretChangeListener:(id)arg1;
- (id)caretChangeListener;
- (id)_webMailDelegate;
- (void)setWebMailDelegate:(id)arg1;
- (id)_UIKitDelegate;
- (void)_setUIKitDelegate:(id)arg1;
- (void)_didCommitLoadForFrame:(id)arg1;
- (BOOL)_isPerformingProgrammaticFocus;
- (void)_popPerformingProgrammaticFocus;
- (void)_pushPerformingProgrammaticFocus;
- (void)_closeWindow;
- (id)_editingDelegateForwarder;
- (id)_UIDelegateForSelector:(SEL)arg1;
- (id)_UIDelegateForwarder;
- (id)_policyDelegateForwarder;
- (void)_cacheHistoryDelegateImplementations;
- (void)_cacheScriptDebugDelegateImplementations;
- (void)_cacheFrameLoadDelegateImplementations;
- (void)_cacheResourceLoadDelegateImplementations;
- (id)_UIKitDelegateForwarder;
- (void)_preferencesChanged:(id)arg1;
- (void)_preferencesChangedNotification:(id)arg1;
- (BOOL)_needsUnrestrictedGetMatchedCSSRules;
- (BOOL)_needsPreHTML5ParserQuirks;
- (id)_formDelegateForSelector:(SEL)arg1;
- (id)_formDelegateForwarder;
- (id)_formDelegate;
- (void)_setFormDelegate:(id)arg1;
- (void)_loadBackForwardListFromOtherView:(id)arg1;
- (void)_mouseDidMoveOverElement:(id)arg1 modifierFlags:(unsigned int)arg2;
- (struct Page *)page;
- (id)remoteInspectorUserInfo;
- (void)setRemoteInspectorUserInfo:(id)arg1;
- (id)hostApplicationName;
- (id)hostApplicationBundleId;
- (void)setHostApplicationBundleId:(id)arg1 name:(id)arg2;
- (void)setIndicatingForRemoteInspector:(BOOL)arg1;
- (void)setAllowsRemoteInspection:(BOOL)arg1;
- (BOOL)allowsRemoteInspection;
- (BOOL)canBeRemotelyInspected;
- (id)inspector;
- (id)_openNewWindowWithRequest:(id)arg1;
- (id)_downloadURL:(id)arg1;
- (BOOL)_isProcessingUserGesture;
- (void)_close;
- (void)_closeWithFastTeardown;
- (void)_closePluginDatabases;
- (void)_setResourceLoadSchedulerSuspended:(BOOL)arg1;
- (void)_didFinishScrollingOrZooming;
- (void)_willStartScrollingOrZooming;
- (void)_dispatchTileDidDraw:(id)arg1;
- (id)styleAtSelectionStart;
- (void)_dispatchUnloadEvent;
- (BOOL)_isClosed;
- (BOOL)_viewClass:(Class *)arg1 andRepresentationClass:(Class *)arg2 forMIMEType:(id)arg3;
- (void)updateLayoutIgnorePendingStyleSheets;
- (id)initSimpleHTMLDocumentWithStyle:(id)arg1 frame:(struct CGRect)arg2 preferences:(id)arg3 groupName:(id)arg4;
- (void)_viewWillDrawInternal;
- (id)_initWithFrame:(struct CGRect)arg1 frameName:(id)arg2 groupName:(id)arg3 usesDocumentViews:(BOOL)arg4;
- (void)_commonInitializationWithFrameName:(id)arg1 groupName:(id)arg2;
- (void)_dispatchPendingLoadRequests;
- (void)_setUIWebViewUserAgentWithBuildVersion:(id)arg1;
- (void)_setBrowserUserAgentProductVersion:(id)arg1 buildVersion:(id)arg2 bundleVersion:(id)arg3;
- (void)makeTextStandardSize:(id)arg1;
- (BOOL)canMakeTextStandardSize;
- (void)makeTextLarger:(id)arg1;
- (BOOL)canMakeTextLarger;
- (void)makeTextSmaller:(id)arg1;
- (BOOL)canMakeTextSmaller;
- (void)reloadFromOrigin:(id)arg1;
- (void)reload:(id)arg1;
- (void)stopLoadingAndClear;
- (void)stopLoading:(id)arg1;
- (void)goForward:(id)arg1;
- (void)goBack:(id)arg1;
- (BOOL)canGoForward;
- (BOOL)canGoBack;
- (void)takeStringURLFrom:(id)arg1;
- (void)removeVisitedLink:(id)arg1;
- (void)addVisitedLinks:(id)arg1;
- (float)mediaVolume;
- (void)setMediaVolume:(float)arg1;
- (void)resetPageZoom:(id)arg1;
- (BOOL)canResetPageZoom;
- (void)zoomPageOut:(id)arg1;
- (BOOL)canZoomPageOut;
- (void)zoomPageIn:(id)arg1;
- (BOOL)canZoomPageIn;
- (float)pageSizeMultiplier;
- (void)setPageSizeMultiplier:(float)arg1;
- (void)setAllowsUndo:(BOOL)arg1;
- (BOOL)allowsUndo;
- (void)scrollDOMRangeToVisible:(id)arg1 withInset:(float)arg2;
- (void)scrollDOMRangeToVisible:(id)arg1;
- (id)rectsForTextMatches;
- (void)unmarkAllTextMatches;
- (unsigned int)countMatchesForText:(id)arg1 inDOMRange:(id)arg2 options:(unsigned int)arg3 highlight:(BOOL)arg4 limit:(unsigned int)arg5 markMatches:(BOOL)arg6;
- (unsigned int)countMatchesForText:(id)arg1 options:(unsigned int)arg2 highlight:(BOOL)arg3 limit:(unsigned int)arg4 markMatches:(BOOL)arg5;
- (BOOL)canMarkAllTextMatches;
- (BOOL)shouldClose;
- (id)historyDelegate;
- (void)setHistoryDelegate:(id)arg1;
- (id)scriptDebugDelegate;
- (void)setScriptDebugDelegate:(id)arg1;
- (BOOL)tabKeyCyclesThroughElements;
- (void)setTabKeyCyclesThroughElements:(BOOL)arg1;
- (void)setMainFrameDocumentReady:(BOOL)arg1;
- (id)DOMRangeOfString:(id)arg1 relativeTo:(id)arg2 options:(unsigned int)arg3;
- (BOOL)findString:(id)arg1 options:(unsigned int)arg2;
- (id)computedStyleForElement:(id)arg1 pseudoElement:(id)arg2;
- (id)styleDeclarationWithText:(id)arg1;
- (id)editingDelegate;
- (void)setEditingDelegate:(id)arg1;
- (void)registerForEditingDelegateNotification:(id)arg1 selector:(SEL)arg2;
- (id)undoManager;
- (BOOL)isContinuousSpellCheckingEnabled;
- (void)setContinuousSpellCheckingEnabled:(BOOL)arg1;
- (BOOL)smartInsertDeleteEnabled;
- (void)setSmartInsertDeleteEnabled:(BOOL)arg1;
- (id)typingStyle;
- (void)setTypingStyle:(id)arg1;
- (BOOL)isEditable;
- (void)setEditable:(BOOL)arg1;
- (int)selectionAffinity;
- (id)selectedDOMRange;
- (void)setSelectedDOMRange:(id)arg1 affinity:(int)arg2;
- (BOOL)maintainsInactiveSelection;
- (BOOL)_shouldChangeSelectedDOMRange:(id)arg1 toDOMRange:(id)arg2 affinity:(int)arg3 stillSelecting:(BOOL)arg4;
- (id)editableDOMRangeForPoint:(struct CGPoint)arg1;
- (BOOL)isAutomaticSpellingCorrectionEnabled;
- (BOOL)isAutomaticTextReplacementEnabled;
- (BOOL)isAutomaticDashSubstitutionEnabled;
- (BOOL)isAutomaticLinkDetectionEnabled;
- (BOOL)isAutomaticQuoteSubstitutionEnabled;
- (void)applyStyle:(id)arg1;
- (void)deleteSelection;
- (void)replaceSelectionWithArchive:(id)arg1;
- (void)replaceSelectionWithMarkupString:(id)arg1;
- (void)replaceSelectionWithText:(id)arg1;
- (void)replaceSelectionWithNode:(id)arg1;
- (id)typingAttributes;
- (void)insertText:(id)arg1;
- (void)insertDictationPhrases:(id)arg1 metadata:(id)arg2;
- (void)toggleUnderline:(id)arg1;
- (void)toggleItalic:(id)arg1;
- (void)toggleBold:(id)arg1;
- (void)clearText:(id)arg1;
- (void)yankAndSelect:(id)arg1;
- (void)yank:(id)arg1;
- (void)uppercaseWord:(id)arg1;
- (void)unscript:(id)arg1;
- (void)underline:(id)arg1;
- (void)transpose:(id)arg1;
- (void)toggleBaseWritingDirection:(id)arg1;
- (void)takeFindStringFromSelection:(id)arg1;
- (void)swapWithMark:(id)arg1;
- (void)superscript:(id)arg1;
- (void)subscript:(id)arg1;
- (void)stopSpeaking:(id)arg1;
- (void)startSpeaking:(id)arg1;
- (void)showGuessPanel:(id)arg1;
- (void)setMark:(id)arg1;
- (void)selectWord:(id)arg1;
- (void)selectToMark:(id)arg1;
- (void)selectSentence:(id)arg1;
- (void)selectParagraph:(id)arg1;
- (void)selectLine:(id)arg1;
- (void)selectAll:(id)arg1;
- (void)scrollToEndOfDocument:(id)arg1;
- (void)scrollToBeginningOfDocument:(id)arg1;
- (void)scrollPageUp:(id)arg1;
- (void)scrollPageDown:(id)arg1;
- (void)scrollLineUp:(id)arg1;
- (void)scrollLineDown:(id)arg1;
- (void)performFindPanelAction:(id)arg1;
- (void)pasteFont:(id)arg1;
- (void)pasteAsRichText:(id)arg1;
- (void)pasteAsPlainText:(id)arg1;
- (void)paste:(id)arg1;
- (void)pageUpAndModifySelection:(id)arg1;
- (void)pageUp:(id)arg1;
- (void)pageDownAndModifySelection:(id)arg1;
- (void)pageDown:(id)arg1;
- (void)orderFrontSubstitutionsPanel:(id)arg1;
- (void)outdent:(id)arg1;
- (void)moveWordRightAndModifySelection:(id)arg1;
- (void)moveWordRight:(id)arg1;
- (void)moveWordLeftAndModifySelection:(id)arg1;
- (void)moveWordLeft:(id)arg1;
- (void)moveWordForwardAndModifySelection:(id)arg1;
- (void)moveWordForward:(id)arg1;
- (void)moveWordBackwardAndModifySelection:(id)arg1;
- (void)moveWordBackward:(id)arg1;
- (void)moveUpAndModifySelection:(id)arg1;
- (void)moveUp:(id)arg1;
- (void)moveToRightEndOfLineAndModifySelection:(id)arg1;
- (void)moveToRightEndOfLine:(id)arg1;
- (void)moveToLeftEndOfLineAndModifySelection:(id)arg1;
- (void)moveToLeftEndOfLine:(id)arg1;
- (void)moveToEndOfSentenceAndModifySelection:(id)arg1;
- (void)moveToEndOfSentence:(id)arg1;
- (void)moveToEndOfParagraphAndModifySelection:(id)arg1;
- (void)moveToEndOfParagraph:(id)arg1;
- (void)moveToEndOfLineAndModifySelection:(id)arg1;
- (void)moveToEndOfLine:(id)arg1;
- (void)moveToEndOfDocumentAndModifySelection:(id)arg1;
- (void)moveToEndOfDocument:(id)arg1;
- (void)moveToBeginningOfSentenceAndModifySelection:(id)arg1;
- (void)moveToBeginningOfSentence:(id)arg1;
- (void)moveToBeginningOfParagraphAndModifySelection:(id)arg1;
- (void)moveToBeginningOfParagraph:(id)arg1;
- (void)moveToBeginningOfLineAndModifySelection:(id)arg1;
- (void)moveToBeginningOfLine:(id)arg1;
- (void)moveToBeginningOfDocumentAndModifySelection:(id)arg1;
- (void)moveToBeginningOfDocument:(id)arg1;
- (void)moveRightAndModifySelection:(id)arg1;
- (void)moveRight:(id)arg1;
- (void)moveParagraphForwardAndModifySelection:(id)arg1;
- (void)moveParagraphBackwardAndModifySelection:(id)arg1;
- (void)moveLeftAndModifySelection:(id)arg1;
- (void)moveLeft:(id)arg1;
- (void)moveForwardAndModifySelection:(id)arg1;
- (void)moveForward:(id)arg1;
- (void)moveDownAndModifySelection:(id)arg1;
- (void)moveDown:(id)arg1;
- (void)moveBackwardAndModifySelection:(id)arg1;
- (void)moveBackward:(id)arg1;
- (void)makeTextWritingDirectionRightToLeft:(id)arg1;
- (void)makeTextWritingDirectionNatural:(id)arg1;
- (void)makeTextWritingDirectionLeftToRight:(id)arg1;
- (void)makeBaseWritingDirectionRightToLeft:(id)arg1;
- (void)makeBaseWritingDirectionLeftToRight:(id)arg1;
- (void)lowercaseWord:(id)arg1;
- (void)insertTabIgnoringFieldEditor:(id)arg1;
- (void)insertTab:(id)arg1;
- (void)insertParagraphSeparator:(id)arg1;
- (void)insertNewlineIgnoringFieldEditor:(id)arg1;
- (void)insertNewline:(id)arg1;
- (void)insertLineBreak:(id)arg1;
- (void)insertBacktab:(id)arg1;
- (void)indent:(id)arg1;
- (void)ignoreSpelling:(id)arg1;
- (void)deleteWordForward:(id)arg1;
- (void)deleteWordBackward:(id)arg1;
- (void)deleteToMark:(id)arg1;
- (void)deleteToEndOfParagraph:(id)arg1;
- (void)deleteToEndOfLine:(id)arg1;
- (void)deleteToBeginningOfParagraph:(id)arg1;
- (void)deleteToBeginningOfLine:(id)arg1;
- (void)deleteForward:(id)arg1;
- (void)deleteBackwardByDecomposingPreviousCharacter:(id)arg1;
- (void)deleteBackward:(id)arg1;
- (void)delete:(id)arg1;
- (void)cut:(id)arg1;
- (void)copyFont:(id)arg1;
- (void)copy:(id)arg1;
- (void)complete:(id)arg1;
- (void)checkSpelling:(id)arg1;
- (void)changeSpelling:(id)arg1;
- (void)changeFont:(id)arg1;
- (void)changeDocumentBackgroundColor:(id)arg1;
- (void)changeColor:(id)arg1;
- (void)changeBaseWritingDirectionToRTL:(id)arg1;
- (void)changeBaseWritingDirectionToLTR:(id)arg1;
- (void)changeBaseWritingDirection:(id)arg1;
- (void)changeAttributes:(id)arg1;
- (void)centerSelectionInVisibleArea:(id)arg1;
- (void)capitalizeWord:(id)arg1;
- (void)alignRight:(id)arg1;
- (void)alignLeft:(id)arg1;
- (void)alignJustified:(id)arg1;
- (void)alignCenter:(id)arg1;
- (void)_performResponderOperation:(SEL)arg1 with:(id)arg2;
- (void)_simplifyMarkup:(id)arg1 endNode:(id)arg2;
- (BOOL)_selectionIsAll;
- (BOOL)_selectionIsCaret;
- (void)_replaceSelectionWithNode:(id)arg1 matchStyle:(BOOL)arg2;
- (void)_insertNewlineInQuotedContent;
- (id)_responderForResponderOperations;
- (BOOL)_continuousCheckingAllowed;
- (id)_frameViewAtWindowPoint:(struct CGPoint)arg1;
- (BOOL)_isLoading;
- (id)_focusedFrame;
- (struct CGRect)_convertRectFromRootView:(struct CGRect)arg1;
- (struct CGPoint)_convertPointFromRootView:(struct CGPoint)arg1;
- (void)_scheduleCompositingLayerSync;
- (BOOL)_syncCompositingChanges;
- (void)_setNeedsOneShotDrawingSynchronization:(BOOL)arg1;
- (BOOL)_needsOneShotDrawingSynchronization;
- (id)_selectedOrMainFrame;
- (struct Frame *)_mainCoreFrame;
- (int)_keyboardUIMode;
- (void)_retrieveKeyboardUIModeFromPreferences:(id)arg1;
- (void)_removeObjectForIdentifier:(unsigned long)arg1;
- (id)_objectForIdentifier:(unsigned long)arg1;
- (void)_addObject:(id)arg1 forIdentifier:(unsigned long)arg2;
- (BOOL)_becomingFirstResponderFromOutside;
- (id)_deviceOrientationProvider;
- (void)_setDeviceOrientationProvider:(id)arg1;
- (void)_resetAllGeolocationPermission;
- (void)_geolocationDidFailWithError:(id)arg1;
- (void)_geolocationDidChangePosition:(id)arg1;
- (id)_geolocationProvider;
- (void)_setGeolocationProvider:(id)arg1;
- (void)_notificationsDidClose:(id)arg1;
- (void)_notificationDidClick:(unsigned long long)arg1;
- (void)_notificationDidShow:(unsigned long long)arg1;
- (id)_notificationProvider;
- (void)_notificationControllerDestroyed;
- (void)_setNotificationProvider:(id)arg1;
- (struct OpaqueJSValue *)_computedStyleIncludingVisitedInfo:(struct OpaqueJSContext *)arg1 forElement:(struct OpaqueJSValue *)arg2;

@end

__attribute__((visibility("hidden")))
@interface WebViewPrivate : NSObject
{
    struct Page *page;
    id UIDelegate;
    id UIDelegateForwarder;
    id resourceProgressDelegate;
    id downloadDelegate;
    id policyDelegate;
    id policyDelegateForwarder;
    id frameLoadDelegate;
    id frameLoadDelegateForwarder;
    id <WebFormDelegate> formDelegate;
    id editingDelegate;
    id editingDelegateForwarder;
    id scriptDebugDelegate;
    id historyDelegate;
    id resourceProgressDelegateForwarder;
    id formDelegateForwarder;
    WebInspector *inspector;
    WebNodeHighlight *currentNodeHighlight;
    BOOL allowsRemoteInspection;
    NSString *hostApplicationBundleId;
    NSString *hostApplicationName;
    NSDictionary *remoteInspectorUserInfo;
    WebIndicateLayer *indicateLayer;
    BOOL allowsUndo;
    float zoomMultiplier;
    BOOL zoomsTextOnly;
    NSString *applicationNameForUserAgent;
    struct String userAgent;
    BOOL userAgentOverridden;
    WebPreferences *preferences;
    BOOL useSiteSpecificSpoofing;
    NSURL *userStyleSheetLocation;
    WAKWindow *hostWindow;
    int programmaticFocusCount;
    struct WebResourceDelegateImplementationCache resourceLoadDelegateImplementations;
    struct WebFrameLoadDelegateImplementationCache frameLoadDelegateImplementations;
    struct WebScriptDebugDelegateImplementationCache scriptDebugDelegateImplementations;
    struct WebHistoryDelegateImplementationCache historyDelegateImplementations;
    void *observationInfo;
    BOOL closed;
    BOOL closing;
    BOOL shouldCloseWithWindow;
    BOOL mainFrameDocumentReady;
    BOOL drawsBackground;
    BOOL tabKeyCyclesThroughElementsChanged;
    BOOL becomingFirstResponder;
    BOOL becomingFirstResponderFromOutside;
    BOOL usesPageCache;
    BOOL catchesDelegateExceptions;
    BOOL cssAnimationsSuspended;
    struct CGColor *backgroundColor;
    NSString *mediaStyle;
    BOOL hasSpellCheckerDocumentTag;
    int spellCheckerDocumentTag;
    BOOL smartInsertDeleteEnabled;
    BOOL selectTrailingWhitespaceEnabled;
    BOOL isStopping;
    id UIKitDelegate;
    id UIKitDelegateForwarder;
    id WebMailDelegate;
    BOOL allowsMessaging;
    NSMutableSet *_caretChangeListeners;
    id <WebCaretChangeListener> _caretChangeListener;
    struct CGSize fixedLayoutSize;
    BOOL mainViewIsScrollingOrZooming;
    int didDrawTiles;
    struct Mutex pendingFixedPositionLayoutRectMutex;
    struct CGRect pendingFixedPositionLayoutRect;
    struct HashMap<unsigned long, WTF::RetainPtr<id>, WTF::IntHash<unsigned long>, WTF::HashTraits<unsigned long>, WTF::HashTraits<WTF::RetainPtr<id>>> identifierMap;
    BOOL _keyboardUIModeAccessed;
    int _keyboardUIMode;
    BOOL shouldUpdateWhileOffscreen;
    BOOL includesFlattenedCompositingLayersWhenDrawingToBitmap;
    BOOL needsOneShotDrawingSynchronization;
    BOOL postsAcceleratedCompositingNotifications;
    struct OwnPtr<LayerFlushController> layerFlushController;
    struct CGSize lastLayoutSize;
    WebVideoFullscreenController *fullscreenController;
    id <WebGeolocationProvider> _geolocationProvider;
    id <WebDeviceOrientationProvider> m_deviceOrientationProvider;
    id <WebNotificationProvider> _notificationProvider;
    struct RefPtr<WebCore::HistoryItem> _globalHistoryItem;
    BOOL interactiveFormValidationEnabled;
    int validationMessageTimerMagnification;
    float customDeviceScaleFactor;
    WebFixedPositionContent *_fixedPositionContent;
}

+ (void)initialize;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)finalize;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface WebVisiblePosition : NSObject
{
    struct WebObjectInternal *_internal;
}

+ (id)_wrapVisiblePositionIfValid:(struct VisiblePosition)arg1;
+ (id)_wrapVisiblePosition:(struct VisiblePosition)arg1;
@property(nonatomic) int affinity;
- (id)enclosingRangeWithCorrectionIndicator;
- (id)enclosingRangeWithDictationPhraseAlternatives:(id *)arg1;
- (BOOL)atAlphaNumericBoundaryInDirection:(int)arg1;
- (BOOL)requiresContextForWordBoundary;
- (BOOL)isEditable;
- (id)positionAtStartOrEndOfWord;
- (id)enclosingTextUnitOfGranularity:(int)arg1 inDirectionIfAtBoundary:(int)arg2;
- (BOOL)withinTextUnitOfGranularity:(int)arg1 inDirectionIfAtBoundary:(int)arg2;
- (id)positionOfNextBoundaryOfGranularity:(int)arg1 inDirection:(int)arg2;
- (id)nextDocumentBoundaryInDirection:(int)arg1;
- (id)nextParagraphBoundaryInDirection:(int)arg1;
- (id)nextLineBoundaryInDirection:(int)arg1;
- (id)nextSentenceBoundaryInDirection:(int)arg1;
- (id)nextWordBoundaryInDirection:(int)arg1;
- (id)nextCharacterBoundaryInDirection:(int)arg1;
- (BOOL)atBoundaryOfGranularity:(int)arg1 inDirection:(int)arg2;
- (id)positionByMovingInDirection:(int)arg1 amount:(unsigned long)arg2;
- (id)positionByMovingInDirection:(int)arg1 amount:(unsigned long)arg2 withAffinityDownstream:(BOOL)arg3;
- (BOOL)directionIsDownstream:(int)arg1;
- (int)textDirection;
- (id)description;
- (int)distanceFromPosition:(id)arg1;
- (int)compare:(id)arg1;
- (BOOL)isEqual:(id)arg1;
- (void)dealloc;
- (struct VisiblePosition)_visiblePosition;

@end

@interface WebWorkersPrivate : NSObject
{
}

+ (unsigned int)workerThreadCount;

@end

__attribute__((visibility("hidden")))
@interface WebInspectorServerWebViewConnectionController : NSObject
{
    WebInspectorServer *_server;
    NSMutableDictionary *_openConnections;
    BOOL _hasScheduledPush;
}

- (void)sendMessageToFrontend:(id)arg1 userInfo:(id)arg2;
- (void)connectionClosing:(id)arg1;
- (void)receivedMessage:(id)arg1 userInfo:(id)arg2;
- (void)_receivedConnectionDied:(id)arg1;
- (void)_receivedIndicate:(id)arg1;
- (void)_receivedGetListing:(id)arg1;
- (void)_receivedDidClose:(id)arg1;
- (void)_receivedData:(id)arg1;
- (void)_receivedSetup:(id)arg1;
- (void)pushListing;
- (void)pushListing:(id)arg1;
- (void)_pushListing:(id)arg1;
- (id)_listingForWebView:(id)arg1 pageId:(id)arg2 registry:(id)arg3;
- (void)closeAllConnections;
- (void)dealloc;
- (id)initWithServer:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface WebNotificationPrivate : NSObject
{
}

@end

__attribute__((visibility("hidden")))
@interface WebNotification : NSObject
{
    WebNotificationPrivate *_private;
}

- (void)dispatchErrorEvent;
- (void)dispatchClickEvent;
- (void)dispatchCloseEvent;
- (void)dispatchShowEvent;
- (unsigned long long)notificationID;
- (id)origin;
- (id)tag;
- (id)body;
- (id)title;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface WebIndicateLayer : CALayer
{
    WebView *_webView;
}

- (id)actionForKey:(id)arg1;
- (void)layoutSublayers;
- (id)initWithWebView:(id)arg1;

@end

@interface WebMIMETypeRegistry
{
}

+ (BOOL)isSupportedMediaMIMEType:(id)arg1;
+ (BOOL)isSupportedImageMIMEType:(id)arg1;
+ (id)preferredExtensionForMIMEType:(id)arg1;
+ (id)mimeTypeForExtension:(id)arg1;

@end

@interface NSArray (WebPluginExtensions)
- (id)_web_lowercaseStrings;
@end

@interface DOMElement (WebDOMElementOperationsPrivate)
+ (id)_DOMElementFromJSContext:(struct OpaqueJSContext *)arg1 value:(struct OpaqueJSValue *)arg2;
- (id)_markerTextForListItem;
@end

@interface DOMNode (WebDOMNodeOperations)
- (id)webArchive;
@end

@interface DOMNode (WebDOMNodeOperationsPendingPublic)
- (struct CGRect)_renderRect:(_Bool *)arg1;
- (id)markupString;
@end

@interface DOMNode (WebDOMNodeOperationsPrivate)
- (void)showPlaceholderIfNecessary;
- (void)hidePlaceholder;
- (BOOL)isHorizontalWritingMode;
- (id)webArchiveByFilteringSubframes:(id)arg1;
@end

@interface DOMNode (WebDOMNodeOperationsInternal)
- (id)_subresourceURLs;
@end

@interface DOMDocument (WebDOMDocumentOperations)
- (id)URLWithAttributeString:(id)arg1;
- (id)webFrame;
@end

@interface DOMDocument (WebDOMDocumentOperationsInternal)
- (id)_documentRange;
@end

@interface DOMDocument (WebDOMDocumentOperationsPrivate)
- (id)_focusableNodes;
@end

@interface DOMRange (WebDOMRangeOperations)
- (id)markupString;
- (id)webArchive;
@end

@interface DOMHTMLFrameElement (WebDOMHTMLFrameElementOperations)
- (id)contentFrame;
@end

@interface DOMHTMLIFrameElement (WebDOMHTMLIFrameElementOperations)
- (id)contentFrame;
@end

@interface DOMHTMLInputElement (WebDOMHTMLInputElementOperationsPrivate)
- (void)_setValueForUser:(id)arg1;
- (void)_setAutofilled:(BOOL)arg1;
@end

@interface DOMHTMLObjectElement (WebDOMHTMLObjectElementOperations)
- (id)contentFrame;
@end

@interface WAKView (WebHTMLViewFileInternal)
- (void)_web_addDescendantWebHTMLViewsToArray:(id)arg1;
@end

@interface NSMutableDictionary (WebHTMLViewFileInternal)
- (void)_web_setObjectIfNotNil:(id)arg1 forKey:(id)arg2;
@end

@interface NSURL (WebDataURL)
+ (id)_web_uniqueWebDataURL;
@end

@interface NSError (WebKitExtras)
+ (void)_webkit_addErrorsWithCodesAndDescriptions:(id)arg1 inDomain:(id)arg2;
+ (id)_webKitErrorWithCode:(int)arg1 failingURL:(id)arg2;
+ (id)_webKitErrorWithDomain:(id)arg1 code:(int)arg2 URL:(id)arg3;
+ (id)_webkit_errorWithDomain:(id)arg1 code:(int)arg2 URL:(id)arg3;
+ (void)_registerWebKitErrors;
- (id)_initWithPluginErrorCode:(int)arg1 contentURL:(id)arg2 pluginPageURL:(id)arg3 pluginName:(id)arg4 MIMEType:(id)arg5;
- (id)_webkit_initWithDomain:(id)arg1 code:(int)arg2 URL:(id)arg3;
@end

@interface NSString (WebKitExtras)
+ (id)_webkit_localCacheDirectoryWithBundleIdentifier:(id)arg1;
+ (id)_web_stringWithData:(id)arg1 textEncodingName:(id)arg2;
- (id)_webkit_stringByCollapsingWhitespaceCharacters;
- (id)_webkit_stringByCollapsingNonPrintingCharacters;
- (id)_webkit_stringByTrimmingWhitespace;
- (id)_webkit_filenameByFixingIllegalCharacters;
- (BOOL)_webkit_hasCaseInsensitiveSubstring:(id)arg1;
- (BOOL)_webkit_hasCaseInsensitiveSuffix:(id)arg1;
- (BOOL)_webkit_hasCaseInsensitivePrefix:(id)arg1;
- (BOOL)_webkit_isCaseInsensitiveEqualToString:(id)arg1;
- (id)_web_stringByStrippingReturnCharacters;
- (id)_web_stringByAbbreviatingWithTildeInPath;
@end

@interface NSArray (WebNSArrayExtras)
- (id)_webkit_stringAtIndex:(unsigned int)arg1;
- (id)_webkit_numberAtIndex:(unsigned int)arg1;
@end

@interface NSString (WebNSDataExtrasInternal)
- (id)_web_capitalizeRFC822HeaderFieldName;
@end

@interface NSData (WebKitExtras)
- (id)_webkit_guessedMIMEType;
- (id)_webkit_guessedMIMETypeForXML;
@end

@interface NSData (WebNSDataExtras)
- (int)_web_locationAfterFirstBlankLine;
- (BOOL)_web_startsWithBlankLine;
- (id)_webkit_parseRFC822HeaderFields;
- (BOOL)_web_isCaseInsensitiveEqualToCString:(const char *)arg1;
@end

@interface NSDictionary (WebNSDictionaryExtras)
- (BOOL)_webkit_boolForKey:(id)arg1;
- (id)_webkit_objectForMIMEType:(id)arg1;
- (id)_webkit_arrayForKey:(id)arg1;
- (id)_webkit_stringForKey:(id)arg1;
- (int)_webkit_intForKey:(id)arg1;
- (id)_webkit_numberForKey:(id)arg1;
@end

@interface NSMutableDictionary (WebNSDictionaryExtras)
- (void)_webkit_setUnsignedInt:(unsigned int)arg1 forKey:(id)arg2;
- (void)_webkit_setUnsignedShort:(unsigned short)arg1 forKey:(id)arg2;
- (void)_webkit_setUnsignedLongLong:(unsigned long long)arg1 forKey:(id)arg2;
- (void)_webkit_setLongLong:(long long)arg1 forKey:(id)arg2;
- (void)_webkit_setBool:(BOOL)arg1 forKey:(id)arg2;
- (void)_webkit_setFloat:(float)arg1 forKey:(id)arg2;
- (void)_webkit_setInt:(int)arg1 forKey:(id)arg2;
- (void)_webkit_setObject:(id)arg1 forUncopiedKey:(id)arg2;
@end

@interface NSFileManager (WebNSFileManagerExtras)
- (id)_webkit_createTemporaryDirectoryWithTemplatePrefix:(id)arg1;
- (id)_webkit_pathWithUniqueFilenameForPath:(id)arg1;
@end

@interface NSNotificationCenter (WebNSNotificationCenterExtras)
+ (void)_postNotificationName:(id)arg1;
- (void)postNotificationOnMainThreadWithName:(id)arg1 object:(id)arg2 userInfo:(id)arg3 waitUntilDone:(BOOL)arg4;
- (void)postNotificationOnMainThreadWithName:(id)arg1 object:(id)arg2 userInfo:(id)arg3;
- (void)postNotificationOnMainThreadWithName:(id)arg1 object:(id)arg2;
@end

@interface NSInvocation (WebMainThreadInvoker)
- (void)_webkit_invokeAndHandleException:(id)arg1;
@end

@interface NSObject (WebNSObjectExtras)
+ (id)_webkit_invokeOnMainThread;
- (id)_webkit_invokeOnMainThread;
@end

@interface NSString (WebStringDrawing)
+ (BOOL)_web_ascentRoundingEnabled;
+ (void)_web_setAscentRoundingEnabled:(BOOL)arg1;
+ (BOOL)_web_wordRoundingAllowed;
+ (void)_web_setWordRoundingAllowed:(BOOL)arg1;
+ (BOOL)_web_wordRoundingEnabled;
+ (void)_web_setWordRoundingEnabled:(BOOL)arg1;
- (struct CGSize)_web_drawInRect:(struct CGRect)arg1 withAttributes:(id)arg2;
- (struct CGSize)_web_sizeInRect:(struct CGRect)arg1 withAttributes:(id)arg2;
- (struct CGSize)_web_drawAtPoint:(struct CGPoint)arg1 forWidth:(float)arg2 withAttributes:(id)arg3;
- (struct CGSize)_web_sizeForWidth:(float)arg1 withAttributes:(id)arg2;
- (id)_web_stringForWidth:(float)arg1 withFont:(struct __GSFont *)arg2 ellipsis:(int)arg3 letterSpacing:(float)arg4 includeEmoji:(BOOL)arg5;
- (id)_web_securedStringIncludingLastCharacter:(BOOL)arg1;
- (struct CGSize)_web_sizeInRect:(struct CGRect)arg1 withFont:(struct __GSFont *)arg2 ellipsis:(int)arg3;
- (struct CGSize)_web_sizeInRect:(struct CGRect)arg1 withFont:(struct __GSFont *)arg2 ellipsis:(int)arg3 lineSpacing:(int)arg4;
- (struct CGSize)_web_drawInRect:(struct CGRect)arg1 withFont:(struct __GSFont *)arg2 ellipsis:(int)arg3 alignment:(int)arg4;
- (struct CGSize)_web_drawInRect:(struct CGRect)arg1 withFont:(struct __GSFont *)arg2 ellipsis:(int)arg3 alignment:(int)arg4 lineSpacing:(int)arg5;
- (struct CGSize)_web_drawInRect:(struct CGRect)arg1 withFont:(struct __GSFont *)arg2 ellipsis:(int)arg3 alignment:(int)arg4 lineSpacing:(int)arg5 includeEmoji:(BOOL)arg6 truncationRect:(struct CGRect *)arg7;
- (struct CGSize)_web_drawInRect:(struct CGRect)arg1 withFont:(struct __GSFont *)arg2 ellipsis:(int)arg3 alignment:(int)arg4 lineSpacing:(int)arg5 includeEmoji:(BOOL)arg6 truncationRect:(struct CGRect *)arg7 measureOnly:(BOOL)arg8;
- (struct CGSize)_web_drawAtPoint:(struct CGPoint)arg1 forWidth:(float)arg2 withFont:(struct __GSFont *)arg3 ellipsis:(int)arg4 letterSpacing:(float)arg5 includeEmoji:(BOOL)arg6;
- (struct CGSize)_web_drawAtPoint:(struct CGPoint)arg1 forWidth:(float)arg2 withFont:(struct __GSFont *)arg3 ellipsis:(int)arg4 letterSpacing:(float)arg5;
- (struct CGSize)_web_drawAtPoint:(struct CGPoint)arg1 forWidth:(float)arg2 withFont:(struct __GSFont *)arg3 ellipsis:(int)arg4;
- (struct CGSize)_web_sizeWithFont:(struct __GSFont *)arg1 forWidth:(float)arg2 ellipsis:(int)arg3 letterSpacing:(float)arg4 resultRange:(struct _NSRange *)arg5;
- (struct CGSize)_web_sizeWithFont:(struct __GSFont *)arg1 forWidth:(float)arg2 ellipsis:(int)arg3 letterSpacing:(float)arg4;
- (struct CGSize)_web_sizeWithFont:(struct __GSFont *)arg1 forWidth:(float)arg2 ellipsis:(int)arg3;
- (struct CGSize)_web_sizeWithFont:(struct __GSFont *)arg1;
- (struct CGSize)_web_drawAtPoint:(struct CGPoint)arg1 withFont:(struct __GSFont *)arg2;
- (struct CGSize)__web_drawInRect:(struct CGRect)arg1 withFont:(struct __GSFont *)arg2 ellipsis:(int)arg3 alignment:(int)arg4 letterSpacing:(float)arg5 lineSpacing:(float)arg6 includeEmoji:(BOOL)arg7 truncationRect:(struct CGRect *)arg8 measureOnly:(BOOL)arg9;
- (struct CGSize)__web_drawInRect:(struct CGRect)arg1 withFont:(struct __GSFont *)arg2 ellipsis:(int)arg3 alignment:(int)arg4 letterSpacing:(float)arg5 lineSpacing:(float)arg6 includeEmoji:(BOOL)arg7 truncationRect:(struct CGRect *)arg8 measureOnly:(BOOL)arg9 renderedStringOut:(id *)arg10;
- (struct CGSize)__web_drawInRect:(struct CGRect)arg1 withFont:(struct __GSFont *)arg2 ellipsis:(int)arg3 alignment:(int)arg4 letterSpacing:(float)arg5 lineSpacing:(float)arg6 includeEmoji:(BOOL)arg7 truncationRect:(struct CGRect *)arg8 measureOnly:(BOOL)arg9 renderedStringOut:(id *)arg10 drawUnderline:(BOOL)arg11;
- (struct CGSize)__web_drawAtPoint:(struct CGPoint)arg1 forWidth:(float)arg2 withFont:(struct __GSFont *)arg3 ellipsis:(int)arg4 letterSpacing:(float)arg5 includeEmoji:(BOOL)arg6 measureOnly:(BOOL)arg7;
- (struct CGSize)__web_drawAtPoint:(struct CGPoint)arg1 forWidth:(float)arg2 withFont:(struct __GSFont *)arg3 ellipsis:(int)arg4 letterSpacing:(float)arg5 includeEmoji:(BOOL)arg6 measureOnly:(BOOL)arg7 renderedStringOut:(id *)arg8;
- (struct CGSize)__web_drawAtPoint:(struct CGPoint)arg1 forWidth:(float)arg2 withFont:(struct __GSFont *)arg3 ellipsis:(int)arg4 letterSpacing:(float)arg5 includeEmoji:(BOOL)arg6 measureOnly:(BOOL)arg7 renderedStringOut:(id *)arg8 drawUnderline:(BOOL)arg9;
@end

@interface NSString (WebNSStringExtrasIOS)
- (id)_web_bestURLForUserTypedString;
- (id)_web_possibleURLsForUserTypedString;
- (id)_web_possibleURLPrefixesForUserTypedString;
- (id)_web_possibleURLsForForUserTypedString:(BOOL)arg1;
@end

@interface NSURL (WebNSURLExtras)
+ (id)uniqueURLWithRelativePart:(id)arg1;
+ (id)_web_URLWithData:(id)arg1 relativeToURL:(id)arg2;
+ (id)_web_URLWithData:(id)arg1;
+ (id)_web_URLWithDataAsString:(id)arg1 relativeToURL:(id)arg2;
+ (id)_web_URLWithDataAsString:(id)arg1;
+ (id)_web_URLWithUserTypedString:(id)arg1;
+ (id)_web_URLWithUserTypedString:(id)arg1 relativeToURL:(id)arg2;
- (id)_webkit_youTubeURL;
- (id)_webkit_URLFromURLOrSchemelessFileURL;
- (id)_webkit_suggestedFilenameWithMIMEType:(id)arg1;
- (id)_web_hostString;
- (id)_web_hostData;
- (id)_web_schemeData;
- (id)_web_dataForURLComponentType:(long)arg1;
- (id)_web_schemeSeparatorWithoutColon;
- (id)_web_URLWithLowercasedScheme;
- (BOOL)_webkit_shouldLoadAsEmptyDocument;
- (BOOL)_webkit_isFTPDirectoryURL;
- (BOOL)_webkit_isFileURL;
- (id)_webkit_scriptIfJavaScriptURL;
- (BOOL)_webkit_isJavaScriptURL;
- (id)_web_URLByRemovingUserInfo;
- (id)_webkit_URLByRemovingResourceSpecifier;
- (id)_webkit_URLByRemovingFragment;
- (id)_web_URLByTruncatingOneCharacterBeforeComponent:(long)arg1;
- (id)_webkit_canonicalize;
- (const char *)_web_URLCString;
- (BOOL)_web_isEmpty;
- (id)_web_userVisibleString;
- (id)_web_originalDataAsString;
- (id)_web_originalData;
@end

@interface NSString (WebNSURLExtras)
- (id)_webkit_queryKeysAndValues;
- (id)_webkit_unescapedQueryValue;
- (id)_webkit_URLFragment;
- (BOOL)_webkit_looksLikeAbsoluteURL;
- (struct _NSRange)_webkit_rangeOfURLScheme;
- (id)_web_encodeHostName;
- (id)_web_decodeHostName;
- (id)_web_encodeHostNameWithRange:(struct _NSRange)arg1;
- (id)_web_decodeHostNameWithRange:(struct _NSRange)arg1;
- (BOOL)_web_hostNameNeedsEncodingWithRange:(struct _NSRange)arg1;
- (BOOL)_web_hostNameNeedsDecodingWithRange:(struct _NSRange)arg1;
- (BOOL)_webkit_isFTPDirectoryURL;
- (id)_webkit_scriptIfJavaScriptURL;
- (id)_webkit_stringByReplacingValidPercentEscapes;
- (BOOL)_webkit_isFileURL;
- (BOOL)_webkit_isJavaScriptURL;
- (BOOL)_web_isUserVisibleURL;
@end

@interface NSURLRequest (WebNSURLRequestExtras)
- (BOOL)_web_isConditionalRequest;
- (id)_web_HTTPContentType;
- (id)_web_HTTPReferrer;
@end

@interface NSMutableURLRequest (WebNSURLRequestExtras)
- (void)_web_setHTTPUserAgent:(id)arg1;
- (void)_web_setHTTPReferrer:(id)arg1;
- (void)_web_setHTTPContentType:(id)arg1;
@end

@interface NSUserDefaults (WebNSUserDefaultsExtras)
+ (id)_webkit_preferredLanguageCode;
@end

@interface WAKView (WebExtras)
- (struct CGRect)_web_convertRect:(struct CGRect)arg1 toView:(id)arg2;
- (BOOL)_web_firstResponderIsSelfOrDescendantView;
- (id)_web_parentWebFrameView;
- (id)_web_superviewOfClass:(Class)arg1;
@end

@interface WAKView (WebDocumentViewExtras)
- (id)_webView;
- (id)_frame;
@end

@interface NSValue (_web_Extensions)
+ (id)_web_valueWithCGRect:(struct CGRect)arg1;
- (struct CGRect)CGRectValue;
@end

@interface NSObject (WebScripting)
+ (BOOL)isKeyExcludedFromWebScript:(const char *)arg1;
+ (BOOL)isSelectorExcludedFromWebScript:(SEL)arg1;
@end

@interface DOMRange (VisiblePositionExtensions)
+ (id)rangeForFirstPosition:(id)arg1 second:(id)arg2;
- (id)enclosingWordRange;
- (id)endPosition;
- (id)startPosition;
@end

@interface DOMNode (VisiblePositionExtensions)
- (id)endPosition;
- (id)startPosition;
- (id)rangeOfContents;
@end

@interface DOMHTMLInputElement (VisiblePositionExtensions)
- (id)endPosition;
- (id)startPosition;
@end

@interface DOMHTMLTextAreaElement (VisiblePositionExtensions)
- (id)endPosition;
- (id)startPosition;
@end

